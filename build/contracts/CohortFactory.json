{
  "contractName": "CohortFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Members",
          "name": "_members",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_createCohortAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "enterprise",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "cohort",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum CohortFactory.AuditTypes",
          "name": "audits",
          "type": "uint8"
        }
      ],
      "name": "CohortCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "invitationNumber",
          "type": "uint256"
        }
      ],
      "name": "InvitationAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minValidatorPerCohort",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum CohortFactory.AuditTypes",
          "name": "audits",
          "type": "uint8"
        }
      ],
      "name": "UpdateMinValidatorsPerCohort",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum CohortFactory.AuditTypes",
          "name": "audit",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "cohort",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "enterprise",
          "type": "address"
        }
      ],
      "name": "ValidatorCleared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "inviting",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "invitee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum CohortFactory.AuditTypes",
          "name": "audits",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "invitationNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "cohort",
          "type": "address"
        }
      ],
      "name": "ValidatorInvited",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cohortList",
      "outputs": [
        {
          "internalType": "address",
          "name": "cohort",
          "type": "address"
        },
        {
          "internalType": "enum CohortFactory.AuditTypes",
          "name": "audits",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "cohortMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "invitations",
      "outputs": [
        {
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "invitationDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "acceptanceDate",
          "type": "uint256"
        },
        {
          "internalType": "enum CohortFactory.AuditTypes",
          "name": "audits",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "cohort",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "deleted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "minValidatorPerCohort",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minValidatorPerCohort",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "audits",
          "type": "uint256"
        }
      ],
      "name": "updateMinValidatorsPerCohort",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "internalType": "enum CohortFactory.AuditTypes",
          "name": "audit",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "cohort",
          "type": "address"
        }
      ],
      "name": "inviteValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "validator",
          "type": "address[]"
        },
        {
          "internalType": "enum CohortFactory.AuditTypes",
          "name": "audit",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "cohort",
          "type": "address"
        }
      ],
      "name": "inviteValidatorMultiple",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "enterprise",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "invitationNumber",
          "type": "uint256"
        }
      ],
      "name": "acceptInvitation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "internalType": "enum CohortFactory.AuditTypes",
          "name": "audit",
          "type": "uint8"
        }
      ],
      "name": "clearInvitationRemoveValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "internalType": "enum CohortFactory.AuditTypes",
          "name": "audit",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "cohort",
          "type": "address"
        }
      ],
      "name": "clearInvitationRemoveValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "enterprise",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "invitationNumber",
          "type": "uint256[]"
        }
      ],
      "name": "acceptInvitationMultiple",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "enterprise",
          "type": "address"
        },
        {
          "internalType": "enum CohortFactory.AuditTypes",
          "name": "audit",
          "type": "uint8"
        }
      ],
      "name": "returnInvitationCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "enterprise",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "internalType": "enum CohortFactory.AuditTypes",
          "name": "audits",
          "type": "uint8"
        }
      ],
      "name": "isValidatorInvited",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "enterprise",
          "type": "address"
        }
      ],
      "name": "returnCohorts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "returnOutstandingValidations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum CohortFactory.AuditTypes",
          "name": "audit",
          "type": "uint8"
        }
      ],
      "name": "createCohort",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Members\",\"name\":\"_members\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_createCohortAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enterprise\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"cohort\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum CohortFactory.AuditTypes\",\"name\":\"audits\",\"type\":\"uint8\"}],\"name\":\"CohortCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"invitationNumber\",\"type\":\"uint256\"}],\"name\":\"InvitationAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minValidatorPerCohort\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum CohortFactory.AuditTypes\",\"name\":\"audits\",\"type\":\"uint8\"}],\"name\":\"UpdateMinValidatorsPerCohort\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum CohortFactory.AuditTypes\",\"name\":\"audit\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"cohort\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"enterprise\",\"type\":\"address\"}],\"name\":\"ValidatorCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inviting\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"invitee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum CohortFactory.AuditTypes\",\"name\":\"audits\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"invitationNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"cohort\",\"type\":\"address\"}],\"name\":\"ValidatorInvited\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enterprise\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"invitationNumber\",\"type\":\"uint256\"}],\"name\":\"acceptInvitation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"enterprise\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"invitationNumber\",\"type\":\"uint256[]\"}],\"name\":\"acceptInvitationMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"enum CohortFactory.AuditTypes\",\"name\":\"audit\",\"type\":\"uint8\"}],\"name\":\"clearInvitationRemoveValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"enum CohortFactory.AuditTypes\",\"name\":\"audit\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"cohort\",\"type\":\"address\"}],\"name\":\"clearInvitationRemoveValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cohortList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"cohort\",\"type\":\"address\"},{\"internalType\":\"enum CohortFactory.AuditTypes\",\"name\":\"audits\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cohortMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum CohortFactory.AuditTypes\",\"name\":\"audit\",\"type\":\"uint8\"}],\"name\":\"createCohort\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"invitations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"invitationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"acceptanceDate\",\"type\":\"uint256\"},{\"internalType\":\"enum CohortFactory.AuditTypes\",\"name\":\"audits\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"cohort\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"enum CohortFactory.AuditTypes\",\"name\":\"audit\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"cohort\",\"type\":\"address\"}],\"name\":\"inviteValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"validator\",\"type\":\"address[]\"},{\"internalType\":\"enum CohortFactory.AuditTypes\",\"name\":\"audit\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"cohort\",\"type\":\"address\"}],\"name\":\"inviteValidatorMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enterprise\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"enum CohortFactory.AuditTypes\",\"name\":\"audits\",\"type\":\"uint8\"}],\"name\":\"isValidatorInvited\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minValidatorPerCohort\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enterprise\",\"type\":\"address\"}],\"name\":\"returnCohorts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enterprise\",\"type\":\"address\"},{\"internalType\":\"enum CohortFactory.AuditTypes\",\"name\":\"audit\",\"type\":\"uint8\"}],\"name\":\"returnInvitationCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnOutstandingValidations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minValidatorPerCohort\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"audits\",\"type\":\"uint256\"}],\"name\":\"updateMinValidatorsPerCohort\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptInvitation(address,uint256)\":{\"details\":\"Used by Validator to accept Enterprise invitation\",\"params\":{\"enterprise\":\"address of the Enterprise who created invitation\",\"invitationNumber\":\"invitation number\"}},\"acceptInvitationMultiple(address[],uint256[])\":{\"details\":\"Used by Validator to accept multiple Enterprise invitation\",\"params\":{\"enterprise\":\"address of the Enterprise who created invitation\",\"invitationNumber\":\"invitation number\"}},\"clearInvitationRemoveValidator(address,uint8,address)\":{\"details\":\"Used by Enterprise to remove existing validator\",\"params\":{\"audit\":\"type of audit \",\"cohort\":\"cohort from which validator is removed\",\"validator\":\"validator to remove\"}},\"createCohort(uint8)\":{\"details\":\"Initiate creation a new cohort using create2 methods based on the audit type and enterprise combination\",\"params\":{\"audit\":\"type\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"inviteValidator(address,uint8,address)\":{\"details\":\"Used by Enterprise to invite validator\",\"params\":{\"audit\":\"type of the audit\",\"validator\":\"address of the validator to invite\"}},\"inviteValidatorMultiple(address[],uint8,address)\":{\"details\":\"Used by Enterprise to invite multiple validators in one call \",\"params\":{\"audit\":\"type of the audit\",\"validator\":\"address of the validator to invite\"}},\"isValidatorInvited(address,address,uint8)\":{\"details\":\"Used to determine if validator has been invited and/or if validation has been accepted\",\"params\":{\"audits\":\"types\",\"enterprise\":\"inviting party\",\"validator\":\"address of the validator\"},\"returns\":{\"_0\":\"true if invited\",\"_1\":\"true if accepted invitation\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"returnCohorts(address)\":{\"details\":\"Used to return list of cohorts for enterprise\",\"params\":{\"enterprise\":\"inviting party\"},\"returns\":{\"_0\":\"cohort address \",\"_1\":\"audit type\"}},\"returnInvitationCount(address,uint8)\":{\"details\":\"To return invitation count\",\"params\":{\"audit\":\"type\",\"enterprise\":\"address of the Enterprise who created invitation\"},\"returns\":{\"_0\":\"count of invitations\"}},\"returnOutstandingValidations()\":{\"details\":\"Function to calculate outstanding validations for enterprise. \"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"updateMinValidatorsPerCohort(uint256,uint256)\":{\"details\":\"to be called by Governance contract to update new value for min validators per cohort\",\"params\":{\"_minValidatorPerCohort\":\"new value \",\"audits\":\"type of validations\"}}},\"title\":\"CohortFactory Allows on creation of invitations by Enterprise and acceptance of Validators of those  invitations. Finally Enterprise can create cohort consisting of invited Validators and Enterprise. \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Auditchain/CohortFactory.sol\":\"CohortFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/AuditToken.sol\":{\"keccak256\":\"0x6fba90f8e922ba388b850e623a1281622ef893ab1f8de6cc86a53280c551ecdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9fb43d7ccf5f5b7c7457c379307db0a771339781d646f7bd1d5d2b545c0065f\",\"dweb:/ipfs/QmZfigCvXLAKE7HmQCUmsUTmn12uZu16hhHFu7fkrSZZGX\"]},\"/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Auditchain/Cohort.sol\":{\"keccak256\":\"0x8acfb7ecb054598abb6ee255ef41818ee388c89ae33352dc1b969b8691bc41e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b14dcbd2ffae2d3a94190472a8d7afa043cf7e8c2c2b6ae4e9b7151bed848ab6\",\"dweb:/ipfs/QmbK7ctK8nTNZUvJm2LugQPLvSJtiGKLP25FE5HbATYkvM\"]},\"/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Auditchain/CohortFactory.sol\":{\"keccak256\":\"0x99e6ec33922e1c9c48ff30c9d37c2b7d0120bbf1915d72e5a0d93147cd96ce7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://470591ac9a265a919534f6065afc0fffa364d87e6bda89272b9aa746de3c90fb\",\"dweb:/ipfs/QmaBpt6rJ2HAhcr6c7495JudepmN6ZRnJcgNc2FNxQRoth\"]},\"/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Auditchain/CreateCohort.sol\":{\"keccak256\":\"0xf0c98f778b52e6db87463b6a1fd5cbb99d1b0ea52d15420658785a9f90d94fc8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://938c7ae6ab7810d5684710b536e4833399340bd61b7ee87fa956e3cceae2cfa8\",\"dweb:/ipfs/QmZbprvaujxv25sRVadADAK1aU27aMJYiHkHqhCFnrdSsu\"]},\"/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Auditchain/ICohort.sol\":{\"keccak256\":\"0xe5d7f7521248a1fabefc084f60ea919232ec25199b2a66b4a979e03e21a9b6d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69a90ce24ff024b0af569c34448130e4ff4d46984f69af480beb87d739559d56\",\"dweb:/ipfs/QmXM1fNPMvoo5upEFuCB7LyZXh3g1A7aPFSk8MTJT8F43U\"]},\"/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Auditchain/ICohortFactory.sol\":{\"keccak256\":\"0x99f74493b9c93afaf116a0e090de2cb4b286a5d8c5a709616519b49bb15d80c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2a7bb1eab24b36529185fb4e97ed3577d27012e58fef2a138a17553320286e9\",\"dweb:/ipfs/QmTJB11UqtQPnCduB5R7R9kAkJLT2GVykACz8uTwmS1x7x\"]},\"/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Auditchain/Members.sol\":{\"keccak256\":\"0xc2df9232322b5afae50bd66c99847565891cfb1294dffb03114756b10edeef44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d59983cab8ab731a7dd71d1c347a82fbde0166ab5c99a74f5074f31f36c3e446\",\"dweb:/ipfs/QmPWexEghq78M7AbZ8FhCfDBbZcWEUKDgrVaVc4JyTuAjW\"]},\"/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Locked.sol\":{\"keccak256\":\"0x34db6bf1ef866ada88bfd506240080fcbb8378ccd2e47d97e71edda9573b3f8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://153ec6f20a4d795f4d606deb81f9e41554924e4fd10116a3c6362e01b4ea5c69\",\"dweb:/ipfs/QmU3vG7tmEQaMehtTnDpSrvuD2cVbuEPAaVLH6R6DaZK9y\"]},\"/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/MigrationAgent.sol\":{\"keccak256\":\"0xa2f21acb7cf6d87a46651b24e29d8697dcfad63bc96769ce23cbd1e5437cdc07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64491b91d4ab2d735244f4f36f3aca2522a5b4e72fb3d9129ca62e29e0eab1d9\",\"dweb:/ipfs/QmYbiu3iUD26N7iv8MYuEB2V5Zs2drWTHDmPZdhcFV5CAc\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4fc155a2f7837603d69a13cfa481eb5e7f5e02cb77e2ec9edbac30986db37988\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0855147e38b5e36288a8df73b8da49132f14ec7abb19041b0c98872263643aaa\",\"dweb:/ipfs/QmSrSysyFUYQq7hbJaJXG7EyZW6ezDBzEJx3SABp6eiJSS\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x9c0eb3b0e11d2480d49991dc384f1e5f9c9b9967cc81944d50916a9b9c6c4984\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e4033d778624992e86f0b6d801a4f6d7b5c0cd5c79c1296be90a051ad5f5af\",\"dweb:/ipfs/QmShYmkUqh6pDEeoWadZ24icmCr4C2Xys1uE5boivPmbwf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c806387247dea116100de578063a217fddf11610097578063c535124e11610071578063c535124e14610498578063ca15c873146104b6578063ced02c8b146104e6578063d547741f1461050257610173565b8063a217fddf1461042d578063a70e03931461044b578063b9f577b11461047c57610173565b806387247dea1461032d5780638e02c1f41461035e5780638ffb72f41461037a5780639010d07c146103af57806391d14854146103df578063a2011b3f1461040f57610173565b80632f2ff15d116101305780632f2ff15d1461025d57806336568abe1461027957806345f49bb0146102955780634b524e07146102c55780637689bb7d146102f55780637c915c861461031157610173565b80630939a997146101785780630ea02160146101945780631f94fc3a146101b0578063247e28b3146101e1578063248a9ca314610211578063265fe4e714610241575b600080fd5b610192600480360381019061018d919061305d565b61051e565b005b6101ae60048036038101906101a99190613021565b610572565b005b6101ca60048036038101906101c59190612f47565b610a24565b6040516101d8929190613d9c565b60405180910390f35b6101fb60048036038101906101f69190612f96565b610cb9565b6040516102089190613f80565b60405180910390f35b61022b60048036038101906102269190613159565b610e88565b6040516102389190613dc5565b60405180910390f35b61025b60048036038101906102569190612f96565b610ea7565b005b61027760048036038101906102729190613182565b6110f1565b005b610293600480360381019061028e9190613182565b61117a565b005b6102af60048036038101906102aa9190613223565b611213565b6040516102bc9190613f80565b60405180910390f35b6102df60048036038101906102da9190612ef5565b611237565b6040516102ec9190613f80565b60405180910390f35b61030f600480360381019061030a9190612fd2565b61124f565b005b61032b600480360381019061032691906131fa565b611823565b005b61034760048036038101906103429190612ef5565b611e49565b604051610355929190613d4a565b60405180910390f35b61037860048036038101906103739190612fd2565b612114565b005b610394600480360381019061038f9190613021565b61242a565b6040516103a696959493929190613ce9565b60405180910390f35b6103c960048036038101906103c491906131be565b6124dd565b6040516103d69190613b40565b60405180910390f35b6103f960048036038101906103f49190613182565b61250e565b6040516104069190613d81565b60405180910390f35b61041761253f565b6040516104249190613dc5565b60405180910390f35b610435612563565b6040516104429190613dc5565b60405180910390f35b61046560048036038101906104609190613021565b61256a565b604051610473929190613c0d565b60405180910390f35b61049660048036038101906104919190613275565b6125d4565b005b6104a06126cd565b6040516104ad9190613f80565b60405180910390f35b6104d060048036038101906104cb9190613159565b612794565b6040516104dd9190613f80565b60405180910390f35b61050060048036038101906104fb91906130c9565b6127ba565b005b61051c60048036038101906105179190613182565b612842565b005b60008251905060005b8181101561056c5761055f84828151811061053e57fe5b602002602001015184838151811061055257fe5b6020026020010151610572565b8080600101915050610527565b50505050565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050116105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed90613e20565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061064257fe5b90600052602060002090600402016002015414610694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068b90613e80565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106106f557fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461077d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077490613f40565b60405180910390fd5b42600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106107c857fe5b906000526020600020906004020160020181905550600073ffffffffffffffffffffffffffffffffffffffff16600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061083f57fe5b906000526020600020906004020160030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109d257600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106108d657fe5b906000526020600020906004020160030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c410fc8336040518263ffffffff1660e01b81526004016109409190613b5b565b602060405180830381600087803b15801561095a57600080fd5b505af115801561096e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109929190613130565b6109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c890613ea0565b60405180910390fd5b5b3373ffffffffffffffffffffffffffffffffffffffff167f7b03e8bab458bdbb216f7525cb174b013e75d040884fe46cc9e836fc05a0cc7b82604051610a189190613f80565b60405180910390a25050565b60008060005b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610ca857836005811115610a8057fe5b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610aca57fe5b906000526020600020906004020160030160009054906101000a900460ff166005811115610af457fe5b148015610ba757508473ffffffffffffffffffffffffffffffffffffffff16600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610b5d57fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b8015610c195750600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610bf857fe5b906000526020600020906004020160030160159054906101000a900460ff16155b15610c9d576000600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c6a57fe5b9060005260206000209060040201600201541115610c8f576001809250925050610cb1565b600160009250925050610cb1565b806001019050610a2a565b50600080915091505b935093915050565b60008060005b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610e7d57836005811115610d1557fe5b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610d5f57fe5b906000526020600020906004020160030160009054906101000a900460ff166005811115610d8957fe5b148015610df257506000600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610ddd57fe5b90600052602060002090600402016002015414155b8015610e645750600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610e4357fe5b906000526020600020906004020160030160159054906101000a900460ff16155b15610e725781806001019250505b806001019050610cbf565b508091505092915050565b6000806000838152602001908152602001600020600201549050919050565b60005b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156110ec57816005811115610f0057fe5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610f4a57fe5b906000526020600020906004020160030160009054906101000a900460ff166005811115610f7457fe5b14801561102757508273ffffffffffffffffffffffffffffffffffffffff16600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610fdd57fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b156110df576001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061107857fe5b906000526020600020906004020160030160156101000a81548160ff0219169083151502179055507fc79fd5e121f785109eb0b6f9236759e63b1507d2388bae38d35500874fd186b683836000336040516110d69493929190613c36565b60405180910390a15b8080600101915050610eaa565b505050565b611117600080848152602001908152602001600020600201546111126128fb565b61250e565b61116c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180614299602f913960400191505060405180910390fd5b6111768282612903565b5050565b6111826128fb565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611205576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806142f8602f913960400191505060405180910390fd5b61120f8282612996565b5050565b6001818154811061122357600080fd5b906000526020600020016000915090505481565b60036020528060005260406000206000915090505481565b611257612cc7565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636f9cf98586600160028111156112a557fe5b6040518363ffffffff1660e01b81526004016112c2929190613cc0565b60206040518083038186803b1580156112da57600080fd5b505afa1580156112ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113129190613130565b90506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636f9cf985336000600281111561136257fe5b6040518363ffffffff1660e01b815260040161137f929190613bbb565b60206040518083038186803b15801561139757600080fd5b505afa1580156113ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cf9190613130565b905060006113de338888610a24565b5090508015611422576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141990613f00565b60405180910390fd5b81611462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145990613f60565b60405180910390fd5b826114a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149990613ec0565b60405180910390fd5b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc7e286d896040518263ffffffff1660e01b81526004016114ff9190613b40565b60206040518083038186803b15801561151757600080fd5b505afa15801561152b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154f919061324c565b1161158f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158690613de0565b60405180910390fd5b86846000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250504284602001818152505085846060019060058111156115e257fe5b908160058111156115ef57fe5b8152505084846080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083600581111561171357fe5b021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160030160156101000a81548160ff02191690831515021790555050508673ffffffffffffffffffffffffffffffffffffffff167f2c2dbe2d2a7b83ef060aaf0987c01d917ae8b3c3f1b967f5ed2aaa5dd19ed48a33886001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905003896040516118129493929190613b76565b60405180910390a250505050505050565b600061182f3383610cb9565b67ffffffffffffffff8111801561184557600080fd5b506040519080825280602002602001820160405280156118745781602001602082028036833780820191505090505b509050600080600090505b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611a8c578360058111156118d557fe5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061191f57fe5b906000526020600020906004020160030160009054906101000a900460ff16600581111561194957fe5b1480156119b157506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061199d57fe5b906000526020600020906004020160020154115b15611a8157600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110611a0057fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838381518110611a3e57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081806001019250505b80600101905061187f565b506001836005811115611a9b57fe5b81548110611aa557fe5b9060005260206000200154811015611af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ae990613e40565b60405180910390fd5b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ac680c3f856005811115611b3e57fe5b85336040518463ffffffff1660e01b8152600401611b5e93929190613f9b565b602060405180830381600087803b158015611b7857600080fd5b505af1158015611b8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb09190612f1e565b9050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018160018154018082558091505003906000526020600020505080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500381548110611c9c57fe5b9060005260206000200160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500381548110611d7757fe5b9060005260206000200160000160146101000a81548160ff02191690836005811115611d9f57fe5b0217905550836005811115611db057fe5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f90691b6bd4b271754d0eb5676725798ab1ab64c7225d8e48882bc2f6add2dd098286604051611e3b929190613c0d565b60405180910390a250505050565b6060806000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905067ffffffffffffffff81118015611ea757600080fd5b50604051908082528060200260200182016040528015611ed65781602001602082028036833780820191505090505b5090506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905067ffffffffffffffff81118015611f3457600080fd5b50604051908082528060200260200182016040528015611f635781602001602082028036833780820191505090505b50905060005b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081101561210657600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110611ffd57fe5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683828151811061203757fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106120bb57fe5b9060005260206000200160000160149054906101000a900460ff1660058111156120e157fe5b8282815181106120ed57fe5b6020026020010181815250508080600101915050611f69565b508181935093505050915091565b60005b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156124245782600581111561216d57fe5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106121b757fe5b906000526020600020906004020160030160009054906101000a900460ff1660058111156121e157fe5b14801561229457508373ffffffffffffffffffffffffffffffffffffffff16600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061224a57fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15612417576001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106122e557fe5b906000526020600020906004020160030160156101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166396cb4c0d85336040518363ffffffff1660e01b8152600401612348929190613be4565b602060405180830381600087803b15801561236257600080fd5b505af1158015612376573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061239a9190613130565b6123d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123d090613f20565b60405180910390fd5b7fc79fd5e121f785109eb0b6f9236759e63b1507d2388bae38d35500874fd186b68484843360405161240e9493929190613c7b565b60405180910390a15b8080600101915050612117565b50505050565b6005602052816000526040600020818154811061244657600080fd5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160159054906101000a900460ff16905086565b600061250682600080868152602001908152602001600020600001612a2990919063ffffffff16565b905092915050565b600061253782600080868152602001908152602001600020600001612a4390919063ffffffff16565b905092915050565b7f61c92169ef077349011ff0b1383c894d86c5f0b41d986366b58a6cf31e93beda81565b6000801b81565b6002602052816000526040600020818154811061258657600080fd5b90600052602060002001600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b6000821415612618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161260f90613e00565b60405180910390fd5b6005811115801561262a575060008110155b612669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161266090613e60565b60405180910390fd5b816001828154811061267757fe5b90600052602060002001819055507f77141346a51f055f5bb35ecb1499b0bb7d9fbf1442b909bd3fd419820ccb98b2828260058111156126b357fe5b6040516126c1929190613fd9565b60405180910390a15050565b6000806126d933611e49565b5090506000805b825181101561278b578281815181106126f557fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663860008f06040518163ffffffff1660e01b815260040160206040518083038186803b15801561274257600080fd5b505afa158015612756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061277a919061324c565b8201915080806001019150506126e0565b50809250505090565b60006127b3600080848152602001908152602001600020600001612a73565b9050919050565b600083519050610100811115612805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127fc90613ee0565b60405180910390fd5b60005b8181101561283b5761282e85828151811061281f57fe5b6020026020010151858561124f565b8080600101915050612808565b5050505050565b612868600080848152602001908152602001600020600201546128636128fb565b61250e565b6128bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806142c86030913960400191505060405180910390fd5b6128c78282612996565b5050565b60006128f3836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612a88565b905092915050565b600033905090565b61292a816000808581526020019081526020016000206000016128cb90919063ffffffff16565b15612992576129376128fb565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6129bd81600080858152602001908152602001600020600001612af890919063ffffffff16565b15612a25576129ca6128fb565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000612a388360000183612b28565b60001c905092915050565b6000612a6b836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612bab565b905092915050565b6000612a8182600001612bce565b9050919050565b6000612a948383612bab565b612aed578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612af2565b600090505b92915050565b6000612b20836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612bdf565b905092915050565b600081836000018054905011612b89576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806142776022913960400191505060405180910390fd5b826000018281548110612b9857fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b60008083600101600084815260200190815260200160002054905060008114612cbb5760006001820390506000600186600001805490500390506000866000018281548110612c2a57fe5b9060005260206000200154905080876000018481548110612c4757fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480612c7f57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050612cc1565b60009150505b92915050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160006005811115612d0a57fe5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b6000612d49612d4484614033565b614002565b90508083825260208201905082856020860282011115612d6857600080fd5b60005b85811015612d985781612d7e8882612e0e565b845260208401935060208301925050600181019050612d6b565b5050509392505050565b6000612db5612db08461405f565b614002565b90508083825260208201905082856020860282011115612dd457600080fd5b60005b85811015612e045781612dea8882612ecb565b845260208401935060208301925050600181019050612dd7565b5050509392505050565b600081359050612e1d8161420a565b92915050565b600081519050612e328161420a565b92915050565b600082601f830112612e4957600080fd5b8135612e59848260208601612d36565b91505092915050565b600082601f830112612e7357600080fd5b8135612e83848260208601612da2565b91505092915050565b600081519050612e9b81614221565b92915050565b600081359050612eb081614238565b92915050565b600081359050612ec58161424f565b92915050565b600081359050612eda8161425f565b92915050565b600081519050612eef8161425f565b92915050565b600060208284031215612f0757600080fd5b6000612f1584828501612e0e565b91505092915050565b600060208284031215612f3057600080fd5b6000612f3e84828501612e23565b91505092915050565b600080600060608486031215612f5c57600080fd5b6000612f6a86828701612e0e565b9350506020612f7b86828701612e0e565b9250506040612f8c86828701612eb6565b9150509250925092565b60008060408385031215612fa957600080fd5b6000612fb785828601612e0e565b9250506020612fc885828601612eb6565b9150509250929050565b600080600060608486031215612fe757600080fd5b6000612ff586828701612e0e565b935050602061300686828701612eb6565b925050604061301786828701612e0e565b9150509250925092565b6000806040838503121561303457600080fd5b600061304285828601612e0e565b925050602061305385828601612ecb565b9150509250929050565b6000806040838503121561307057600080fd5b600083013567ffffffffffffffff81111561308a57600080fd5b61309685828601612e38565b925050602083013567ffffffffffffffff8111156130b357600080fd5b6130bf85828601612e62565b9150509250929050565b6000806000606084860312156130de57600080fd5b600084013567ffffffffffffffff8111156130f857600080fd5b61310486828701612e38565b935050602061311586828701612eb6565b925050604061312686828701612e0e565b9150509250925092565b60006020828403121561314257600080fd5b600061315084828501612e8c565b91505092915050565b60006020828403121561316b57600080fd5b600061317984828501612ea1565b91505092915050565b6000806040838503121561319557600080fd5b60006131a385828601612ea1565b92505060206131b485828601612e0e565b9150509250929050565b600080604083850312156131d157600080fd5b60006131df85828601612ea1565b92505060206131f085828601612ecb565b9150509250929050565b60006020828403121561320c57600080fd5b600061321a84828501612eb6565b91505092915050565b60006020828403121561323557600080fd5b600061324384828501612ecb565b91505092915050565b60006020828403121561325e57600080fd5b600061326c84828501612ee0565b91505092915050565b6000806040838503121561328857600080fd5b600061329685828601612ecb565b92505060206132a785828601612ecb565b9150509250929050565b60006132bd83836132f0565b60208301905092915050565b60006132d58383613b22565b60208301905092915050565b6132ea81614186565b82525050565b6132f98161410e565b82525050565b6133088161410e565b82525050565b6000613319826140ab565b61332381856140db565b935061332e8361408b565b8060005b8381101561335f57815161334688826132b1565b9750613351836140c1565b925050600181019050613332565b5085935050505092915050565b6000613377826140b6565b61338181856140ec565b935061338c8361409b565b8060005b838110156133bd5781516133a488826132c9565b97506133af836140ce565b925050600181019050613390565b5085935050505092915050565b6133d381614120565b82525050565b6133e28161412c565b82525050565b6133f181614198565b82525050565b613400816141aa565b82525050565b6000613413604d836140fd565b91507f436f686f7274466163746f72793a696e7669746556616c696461746f72202d2060008301527f546869732076616c696461746f7220686173206e6f74207374616b656420616e60208301527f7920746f6b656e73207965742e000000000000000000000000000000000000006040830152606082019050919050565b600061349f6062836140fd565b91507f437265617465436f686f72743a7570646174654d696e56616c696461746f727360008301527f506572436f686f7274202d204e65772076616c756520666f722074686520206d60208301527f696e2076616c696461746f722070657220636f686f72742063616e277420626560408301527f20300000000000000000000000000000000000000000000000000000000000006060830152608082019050919050565b6000613551603e836140fd565b91507f436f686f7274466163746f72793a616363657074496e7669746174696f6e202d60008301527f205468697320696e7669746174696f6e20646f65736e277420657869737400006020830152604082019050919050565b60006135b76049836140fd565b91507f436f686f7274466163746f72793a637265617465436f686f7274202d204e756d60008301527f626572206f662076616c696461746f72732062656c6f7720726571756972656460208301527f206d696e696d756d2e00000000000000000000000000000000000000000000006040830152606082019050919050565b6000613643604f836140fd565b91507f436f686f727420466163746f72793a7570646174654d696e56616c696461746f60008301527f7273506572436f686f7274202d20417564697420747970652068617320746f2060208301527f6265203c3d203520616e64203e3d3000000000000000000000000000000000006040830152606082019050919050565b60006136cf604b836140fd565b91507f436f686f7274466163746f72793a616363657074496e7669746174696f6e2d2060008301527f5468697320696e7669746174696f6e20686173206265656e206163636570746560208301527f6420616c7265616479202e0000000000000000000000000000000000000000006040830152606082019050919050565b600061375b603c836140fd565b91507f436f686f7274466163746f72793a696e7669746556616c696461746f72202d2060008301527f50726f626c656d20616464696e67206e65772076616c696461746f72000000006020830152604082019050919050565b60006137c16048836140fd565b91507f436f686f7274466163746f72793a696e7669746556616c696461746f72202d2060008301527f4f6e6c7920417070726f7665642056616c696461746f72732063616e2062652060208301527f696e76697465642e0000000000000000000000000000000000000000000000006040830152606082019050919050565b600061384d6034836140fd565b91507f436f686f7274466163746f72792d696e7669746556616c696461746f724d756c60008301527f7469706c653a204c69737420746f6f206c6f6e670000000000000000000000006020830152604082019050919050565b60006138b36061836140fd565b91507f436f686f7274466163746f72793a696e7669746556616c696461746f72202d2060008301527f546869732076616c696461746f7220686173206265656e20616c72656164792060208301527f696e766974656420666f7220746869732076616c69646174696f6e207479706560408301527f2e000000000000000000000000000000000000000000000000000000000000006060830152608082019050919050565b60006139656056836140fd565b91507f436f686f7274466163746f72793a636c656172496e7669746174696f6e56616c60008301527f696461746f72202d2050726f626c656d2072656d6f76696e672076616c69646160208301527f746f7220696e20436f686f727420636f6e7472616374000000000000000000006040830152606082019050919050565b60006139f1607d836140fd565b91507f436f686f7274466163746f72793a616363657074496e7669746174696f6e202d60008301527f20596f752061726520616363657074696e6720696e7669746174696f6e20746f60208301527f20776869636820796f752077657265206e6f7420696e7669746564206f72207460408301527f68697320696e7669746174696f6e20646f65736e27742065786973742e0000006060830152608082019050919050565b6000613aa3604b836140fd565b91507f436f686f7274466163746f72793a696e7669746556616c696461746f72202d2060008301527f4f6e6c7920456e746572707269736520757365722063616e20696e766974652060208301527f56616c696461746f72732e0000000000000000000000000000000000000000006040830152606082019050919050565b613b2b8161417c565b82525050565b613b3a8161417c565b82525050565b6000602082019050613b5560008301846132ff565b92915050565b6000602082019050613b7060008301846132e1565b92915050565b6000608082019050613b8b60008301876132e1565b613b9860208301866133e8565b613ba56040830185613b31565b613bb260608301846132ff565b95945050505050565b6000604082019050613bd060008301856132e1565b613bdd60208301846133f7565b9392505050565b6000604082019050613bf960008301856132ff565b613c0660208301846132e1565b9392505050565b6000604082019050613c2260008301856132ff565b613c2f60208301846133e8565b9392505050565b6000608082019050613c4b60008301876132ff565b613c5860208301866133e8565b613c6560408301856132e1565b613c7260608301846132e1565b95945050505050565b6000608082019050613c9060008301876132ff565b613c9d60208301866133e8565b613caa60408301856132ff565b613cb760608301846132e1565b95945050505050565b6000604082019050613cd560008301856132ff565b613ce260208301846133f7565b9392505050565b600060c082019050613cfe60008301896132ff565b613d0b6020830188613b31565b613d186040830187613b31565b613d2560608301866133e8565b613d3260808301856132ff565b613d3f60a08301846133ca565b979650505050505050565b60006040820190508181036000830152613d64818561330e565b90508181036020830152613d78818461336c565b90509392505050565b6000602082019050613d9660008301846133ca565b92915050565b6000604082019050613db160008301856133ca565b613dbe60208301846133ca565b9392505050565b6000602082019050613dda60008301846133d9565b92915050565b60006020820190508181036000830152613df981613406565b9050919050565b60006020820190508181036000830152613e1981613492565b9050919050565b60006020820190508181036000830152613e3981613544565b9050919050565b60006020820190508181036000830152613e59816135aa565b9050919050565b60006020820190508181036000830152613e7981613636565b9050919050565b60006020820190508181036000830152613e99816136c2565b9050919050565b60006020820190508181036000830152613eb98161374e565b9050919050565b60006020820190508181036000830152613ed9816137b4565b9050919050565b60006020820190508181036000830152613ef981613840565b9050919050565b60006020820190508181036000830152613f19816138a6565b9050919050565b60006020820190508181036000830152613f3981613958565b9050919050565b60006020820190508181036000830152613f59816139e4565b9050919050565b60006020820190508181036000830152613f7981613a96565b9050919050565b6000602082019050613f956000830184613b31565b92915050565b6000606082019050613fb06000830186613b31565b8181036020830152613fc2818561330e565b9050613fd160408301846132e1565b949350505050565b6000604082019050613fee6000830185613b31565b613ffb60208301846133e8565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715614029576140286141e0565b5b8060405250919050565b600067ffffffffffffffff82111561404e5761404d6141e0565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561407a576140796141e0565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006141198261415c565b9050919050565b60008115159050919050565b6000819050919050565b6000819050614144826141e2565b919050565b6000819050614157826141f6565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000614191826141bc565b9050919050565b60006141a382614136565b9050919050565b60006141b582614149565b9050919050565b60006141c7826141ce565b9050919050565b60006141d98261415c565b9050919050565bfe5b600681106141f3576141f26141e0565b5b50565b60038110614207576142066141e0565b5b50565b6142138161410e565b811461421e57600080fd5b50565b61422a81614120565b811461423557600080fd5b50565b6142418161412c565b811461424c57600080fd5b50565b6006811061425c57600080fd5b50565b6142688161417c565b811461427357600080fd5b5056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a264697066735822122096c9b0bc07c07139b9c98308c72da808208f4d0c35cd74c850524adc16c1914e64736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1452:35",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:35"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:35",
                "type": ""
              }
            ],
            "src": "7:143:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "235:96:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "245:22:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "260:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "254:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:13:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "245:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "319:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Members_$4710",
                      "nodeType": "YulIdentifier",
                      "src": "276:42:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "276:49:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "276:49:35"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Members_$4710_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "213:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "221:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "229:5:35",
                "type": ""
              }
            ],
            "src": "156:175:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "447:362:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "493:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "502:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "505:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "495:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "495:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "495:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "468:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "477:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "464:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "464:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "489:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "460:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "460:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "457:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "519:144:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "534:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "548:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "538:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "563:90:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "625:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "636:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "621:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "621:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "645:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Members_$4710_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "573:47:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "573:80:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "563:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "673:129:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "688:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "702:2:35",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "692:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "718:74:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "764:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "775:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "760:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "760:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "784:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "728:31:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "728:64:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "718:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Members_$4710t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "409:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "420:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "432:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "440:6:35",
                "type": ""
              }
            ],
            "src": "337:472:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "860:51:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "870:35:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "899:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "881:17:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "881:24:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "870:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "842:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "852:7:35",
                "type": ""
              }
            ],
            "src": "815:96:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "978:51:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "988:35:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1017:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "999:17:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "999:24:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "988:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Members_$4710",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "960:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "970:7:35",
                "type": ""
              }
            ],
            "src": "917:112:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1080:81:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1090:65:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1105:5:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1112:42:35",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1101:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1101:54:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1090:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1062:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1072:7:35",
                "type": ""
              }
            ],
            "src": "1035:126:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1210:79:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1267:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1276:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1279:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1269:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1269:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1269:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1233:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1258:5:35"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1240:17:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1240:24:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1230:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1230:35:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1223:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:43:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1220:2:35"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1203:5:35",
                "type": ""
              }
            ],
            "src": "1167:122:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1354:95:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1427:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1436:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1439:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1429:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1429:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1429:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1377:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1418:5:35"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Members_$4710",
                              "nodeType": "YulIdentifier",
                              "src": "1384:33:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1384:40:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1374:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1374:51:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1367:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1367:59:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1364:2:35"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Members_$4710",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1347:5:35",
                "type": ""
              }
            ],
            "src": "1295:154:35"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_Members_$4710_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Members_$4710(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Members_$4710t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Members_$4710_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Members_$4710(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Members_$4710(value) {\n        if iszero(eq(value, cleanup_t_contract$_Members_$4710(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:35905:35",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "126:520:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "136:89:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "217:6:35"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "160:56:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "160:64:35"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "145:14:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "145:80:35"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "136:5:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "234:16:35",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "245:5:35"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "238:3:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "266:5:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "273:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "259:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "259:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "259:21:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "281:23:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "292:5:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "299:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "288:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:16:35"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "281:3:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "313:17:35",
                  "value": {
                    "name": "offset",
                    "nodeType": "YulIdentifier",
                    "src": "324:6:35"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "317:3:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "379:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "388:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "391:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "381:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "381:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "381:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "349:3:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "358:6:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "366:4:35",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "354:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "354:17:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "345:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "345:27:35"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "374:3:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "342:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "342:36:35"
                  },
                  "nodeType": "YulIf",
                  "src": "339:2:35"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "464:176:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "478:21:35",
                        "value": {
                          "name": "src",
                          "nodeType": "YulIdentifier",
                          "src": "496:3:35"
                        },
                        "variables": [
                          {
                            "name": "elementPos",
                            "nodeType": "YulTypedName",
                            "src": "482:10:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "519:3:35"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "elementPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "545:10:35"
                                },
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "557:3:35"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "524:20:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "524:37:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "512:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "512:50:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "512:50:35"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "575:21:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "586:3:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "591:4:35",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "582:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "582:14:35"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "575:3:35"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "609:21:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "620:3:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "625:4:35",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "616:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "616:14:35"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "609:3:35"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "426:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "429:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "423:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "423:13:35"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "437:18:35",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "439:14:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "448:1:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "451:1:35",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "444:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "444:9:35"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "439:1:35"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "408:14:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "410:10:35",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "419:1:35",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "414:1:35",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "404:236:35"
                }
              ]
            },
            "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "96:6:35",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "104:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "112:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "120:5:35",
                "type": ""
              }
            ],
            "src": "24:622:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "771:520:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "781:89:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "862:6:35"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "805:56:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "805:64:35"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "790:14:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "790:80:35"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "781:5:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "879:16:35",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "890:5:35"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "883:3:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "911:5:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "918:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "904:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "904:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "904:21:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "926:23:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "937:5:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "944:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "933:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "933:16:35"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "926:3:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "958:17:35",
                  "value": {
                    "name": "offset",
                    "nodeType": "YulIdentifier",
                    "src": "969:6:35"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "962:3:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1024:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1026:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1026:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "994:3:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1003:6:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1011:4:35",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "999:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "999:17:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "990:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "990:27:35"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1019:3:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "987:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "987:36:35"
                  },
                  "nodeType": "YulIf",
                  "src": "984:2:35"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1109:176:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1123:21:35",
                        "value": {
                          "name": "src",
                          "nodeType": "YulIdentifier",
                          "src": "1141:3:35"
                        },
                        "variables": [
                          {
                            "name": "elementPos",
                            "nodeType": "YulTypedName",
                            "src": "1127:10:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "1164:3:35"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "elementPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1190:10:35"
                                },
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "1202:3:35"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "1169:20:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1169:37:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1157:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1157:50:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1157:50:35"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1220:21:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "1231:3:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1236:4:35",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1227:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1227:14:35"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "1220:3:35"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1254:21:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "1265:3:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1270:4:35",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1261:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1261:14:35"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "1254:3:35"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1071:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1074:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1068:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1068:13:35"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1082:18:35",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1084:14:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1093:1:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1096:1:35",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1089:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1089:9:35"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1084:1:35"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1053:14:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1055:10:35",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1064:1:35",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "1059:1:35",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "1049:236:35"
                }
              ]
            },
            "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "741:6:35",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "749:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "757:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "765:5:35",
                "type": ""
              }
            ],
            "src": "669:622:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1349:87:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1359:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1381:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1368:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1368:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1359:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1424:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1397:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1397:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1397:33:35"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1327:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1335:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1343:5:35",
                "type": ""
              }
            ],
            "src": "1297:139:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1505:80:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1515:22:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1530:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1524:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1524:13:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1515:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1573:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1546:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1546:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1546:33:35"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1483:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1491:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1499:5:35",
                "type": ""
              }
            ],
            "src": "1442:143:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1685:226:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1734:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1743:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1746:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1736:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1736:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1736:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1713:6:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1721:4:35",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1709:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1709:17:35"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1728:3:35"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1705:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1705:27:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1698:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1698:35:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1695:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1759:34:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1786:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1773:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1773:20:35"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1763:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1802:103:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1878:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1886:4:35",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1874:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1874:17:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1893:6:35"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1901:3:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1811:62:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1811:94:35"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1802:5:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1663:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1671:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1679:5:35",
                "type": ""
              }
            ],
            "src": "1608:303:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2011:226:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2060:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2069:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2072:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2062:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2062:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2062:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2039:6:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2047:4:35",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2035:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2035:17:35"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2054:3:35"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2031:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2031:27:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2024:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2024:35:35"
                  },
                  "nodeType": "YulIf",
                  "src": "2021:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2085:34:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2112:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2099:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2099:20:35"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2089:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2128:103:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2204:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2212:4:35",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2200:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2200:17:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2219:6:35"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2227:3:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2137:62:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2137:94:35"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2128:5:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1989:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1997:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2005:5:35",
                "type": ""
              }
            ],
            "src": "1934:303:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2303:77:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2313:22:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2328:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2322:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2322:13:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2313:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2368:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2344:23:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2344:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2344:30:35"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2281:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2289:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2297:5:35",
                "type": ""
              }
            ],
            "src": "2243:137:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2438:87:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2448:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2470:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2457:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2457:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2448:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2513:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "2486:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2486:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2486:33:35"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2416:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2424:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2432:5:35",
                "type": ""
              }
            ],
            "src": "2386:139:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2598:102:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2608:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2630:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2617:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2617:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2608:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2688:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_AuditTypes_$1999",
                      "nodeType": "YulIdentifier",
                      "src": "2646:41:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2646:48:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2646:48:35"
                }
              ]
            },
            "name": "abi_decode_t_enum$_AuditTypes_$1999",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2576:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2584:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2592:5:35",
                "type": ""
              }
            ],
            "src": "2531:169:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2758:87:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2768:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2790:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2777:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2777:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2768:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2833:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2806:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2806:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2806:33:35"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2736:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2744:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2752:5:35",
                "type": ""
              }
            ],
            "src": "2706:139:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2914:80:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2924:22:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2939:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2933:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2933:13:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2924:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2982:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2955:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2955:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2955:33:35"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2892:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2900:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2908:5:35",
                "type": ""
              }
            ],
            "src": "2851:143:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3066:196:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3112:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3121:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3124:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3114:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3114:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3114:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3087:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3096:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3083:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3083:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3108:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3079:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3079:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "3076:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3138:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3153:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3167:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3157:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3182:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3217:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3228:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3213:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3213:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3237:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3192:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3192:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3182:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3036:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3047:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3059:6:35",
                "type": ""
              }
            ],
            "src": "3000:262:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3345:207:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3391:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3400:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3403:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3393:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3393:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3393:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3366:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3375:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3362:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3362:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3387:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3358:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3358:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "3355:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3417:128:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3432:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3446:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3436:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3461:74:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3507:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3518:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3503:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3503:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3527:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3471:31:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3471:64:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3461:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3315:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3326:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3338:6:35",
                "type": ""
              }
            ],
            "src": "3268:284:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3673:467:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3719:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3728:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3731:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3721:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3721:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3721:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3694:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3703:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3690:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3690:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3715:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3686:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3686:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "3683:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3745:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3760:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3774:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3764:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3789:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3824:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3835:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3820:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3820:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3844:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3799:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3799:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3789:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3872:118:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3887:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3901:2:35",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3891:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3917:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3952:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3963:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3948:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3948:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3972:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3927:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3927:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3917:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4000:133:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4015:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4029:2:35",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4019:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4045:78:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4095:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4106:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4091:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4091:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4115:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_AuditTypes_$1999",
                          "nodeType": "YulIdentifier",
                          "src": "4055:35:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4055:68:35"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4045:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_enum$_AuditTypes_$1999",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3627:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3638:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3650:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3658:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3666:6:35",
                "type": ""
              }
            ],
            "src": "3558:582:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4244:339:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4290:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4299:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4302:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4292:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4292:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4292:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4265:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4274:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4261:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4261:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4286:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4257:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4257:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "4254:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4316:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4331:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4345:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4335:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4360:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4395:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4406:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4391:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4391:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4415:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4370:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4370:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4360:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4443:133:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4458:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4472:2:35",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4462:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4488:78:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4538:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4549:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4534:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4534:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4558:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_AuditTypes_$1999",
                          "nodeType": "YulIdentifier",
                          "src": "4498:35:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4498:68:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4488:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_enum$_AuditTypes_$1999",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4206:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4217:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4229:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4237:6:35",
                "type": ""
              }
            ],
            "src": "4146:437:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4704:467:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4750:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4759:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4762:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4752:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4752:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4752:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4725:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4734:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4721:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4721:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4746:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4717:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4717:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "4714:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4776:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4791:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4805:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4795:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4820:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4855:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4866:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4851:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4851:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4875:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4830:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4830:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4820:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4903:133:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4918:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4932:2:35",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4922:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4948:78:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4998:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5009:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4994:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4994:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5018:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_AuditTypes_$1999",
                          "nodeType": "YulIdentifier",
                          "src": "4958:35:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4958:68:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4948:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5046:118:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5061:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5075:2:35",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5065:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5091:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5126:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5137:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5122:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5122:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5146:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5101:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5101:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5091:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_enum$_AuditTypes_$1999t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4658:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4669:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4681:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4689:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4697:6:35",
                "type": ""
              }
            ],
            "src": "4589:582:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5260:324:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5306:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5315:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5318:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5308:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5308:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5308:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5281:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5290:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5277:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5277:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5302:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5273:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5273:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "5270:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5332:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5347:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5361:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5351:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5376:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5411:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5422:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5407:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5407:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5431:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5386:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5386:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5376:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5459:118:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5474:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5488:2:35",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5478:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5504:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5539:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5550:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5535:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5535:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5559:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5514:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5514:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5504:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5222:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5233:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5245:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5253:6:35",
                "type": ""
              }
            ],
            "src": "5177:407:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5723:560:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5769:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5778:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5781:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5771:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5771:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5771:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5744:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5753:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5740:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5740:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5765:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5736:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5736:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "5733:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5795:235:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5810:45:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5841:9:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5852:1:35",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5837:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5837:17:35"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5824:12:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5824:31:35"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5814:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5902:16:35",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5911:1:35",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5914:1:35",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5904:6:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5904:12:35"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5904:12:35"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5874:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5882:18:35",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5871:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5871:30:35"
                      },
                      "nodeType": "YulIf",
                      "src": "5868:2:35"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5932:88:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5992:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6003:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5988:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5988:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6012:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "5942:45:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5942:78:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5932:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6040:236:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6055:46:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6086:9:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6097:2:35",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6082:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6082:18:35"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6069:12:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6069:32:35"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6059:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6148:16:35",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6157:1:35",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6160:1:35",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6150:6:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6150:12:35"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6150:12:35"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "6120:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6128:18:35",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6117:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6117:30:35"
                      },
                      "nodeType": "YulIf",
                      "src": "6114:2:35"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6178:88:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6238:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6249:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6234:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6234:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6258:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "6188:45:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6188:78:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6178:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5685:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5696:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5708:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5716:6:35",
                "type": ""
              }
            ],
            "src": "5590:693:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6429:585:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6475:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6484:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6487:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6477:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6477:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6477:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6450:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6459:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6446:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6446:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6471:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6442:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6442:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "6439:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6501:235:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6516:45:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6547:9:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6558:1:35",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6543:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6543:17:35"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6530:12:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6530:31:35"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6520:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6608:16:35",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6617:1:35",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6620:1:35",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6610:6:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6610:12:35"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6610:12:35"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "6580:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6588:18:35",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6577:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6577:30:35"
                      },
                      "nodeType": "YulIf",
                      "src": "6574:2:35"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6638:88:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6698:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6709:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6694:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6694:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6718:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "6648:45:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6648:78:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6638:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6746:133:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6761:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6775:2:35",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6765:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6791:78:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6841:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6852:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6837:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6837:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6861:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_AuditTypes_$1999",
                          "nodeType": "YulIdentifier",
                          "src": "6801:35:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6801:68:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6791:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6889:118:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6904:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6918:2:35",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6908:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6934:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6969:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6980:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6965:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6965:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6989:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6944:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6944:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "6934:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_enum$_AuditTypes_$1999t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6383:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6394:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6406:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6414:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6422:6:35",
                "type": ""
              }
            ],
            "src": "6289:725:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7094:204:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7140:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7149:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7152:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7142:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7142:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7142:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7115:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7124:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7111:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7111:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7136:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7107:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7107:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "7104:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7166:125:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7181:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7195:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7185:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7210:71:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7253:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7264:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7249:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7249:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7273:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "7220:28:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7220:61:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7210:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7064:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7075:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7087:6:35",
                "type": ""
              }
            ],
            "src": "7020:278:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7370:196:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7416:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7425:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7428:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7418:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7418:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7418:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7391:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7400:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7387:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7387:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7412:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7383:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7383:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "7380:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7442:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7457:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7471:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7461:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7486:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7521:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7532:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7517:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7517:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7541:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "7496:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7496:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7486:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7340:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7351:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7363:6:35",
                "type": ""
              }
            ],
            "src": "7304:262:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7655:324:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7701:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7710:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7713:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7703:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7703:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7703:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7676:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7685:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7672:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7672:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7697:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7668:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7668:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "7665:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7727:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7742:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7756:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7746:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7771:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7806:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7817:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7802:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7802:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7826:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "7781:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7781:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7771:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7854:118:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7869:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7883:2:35",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7873:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7899:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7934:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7945:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7930:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7930:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7954:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7909:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7909:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7899:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7617:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7628:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7640:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7648:6:35",
                "type": ""
              }
            ],
            "src": "7572:407:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8068:324:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8114:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8123:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8126:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8116:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8116:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8116:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8089:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8098:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8085:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8085:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8110:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8081:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8081:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "8078:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8140:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8155:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8169:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8159:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8184:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8219:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8230:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8215:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8215:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8239:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "8194:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8194:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8184:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8267:118:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8282:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8296:2:35",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8286:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8312:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8347:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8358:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8343:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8343:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8367:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8322:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8322:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "8312:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8030:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8041:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8053:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8061:6:35",
                "type": ""
              }
            ],
            "src": "7985:407:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8479:211:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8525:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8534:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8537:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8527:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8527:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8527:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8500:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8509:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8496:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8496:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8521:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8492:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8492:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "8489:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8551:132:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8566:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8580:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8570:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8595:78:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8645:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8656:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8641:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8641:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8665:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_AuditTypes_$1999",
                          "nodeType": "YulIdentifier",
                          "src": "8605:35:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8605:68:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8595:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_AuditTypes_$1999",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8449:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8460:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8472:6:35",
                "type": ""
              }
            ],
            "src": "8398:292:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8762:196:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8808:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8817:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8820:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8810:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8810:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8810:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8783:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8792:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8779:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8779:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8804:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8775:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8775:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "8772:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8834:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8849:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8863:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8853:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8878:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8913:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8924:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8909:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8909:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8933:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8888:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8888:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8878:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8732:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8743:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8755:6:35",
                "type": ""
              }
            ],
            "src": "8696:262:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9041:207:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9087:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9096:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9099:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9089:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9089:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9089:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9062:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9071:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9058:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9058:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9083:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9054:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9054:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "9051:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9113:128:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9128:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9142:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9132:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9157:74:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9203:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9214:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9199:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9199:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9223:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9167:31:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9167:64:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9157:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9011:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9022:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9034:6:35",
                "type": ""
              }
            ],
            "src": "8964:284:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9337:324:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9383:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9392:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9395:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9385:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9385:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9385:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9358:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9367:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9354:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9354:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9379:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9350:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9350:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "9347:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9409:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9424:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9438:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9428:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9453:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9488:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9499:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9484:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9484:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9508:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9463:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9463:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9453:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9536:118:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9551:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9565:2:35",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9555:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9581:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9616:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9627:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9612:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9612:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9636:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9591:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9591:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "9581:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9299:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9310:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9322:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9330:6:35",
                "type": ""
              }
            ],
            "src": "9254:407:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9747:99:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9791:6:35"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9799:3:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "9757:33:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9757:46:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9757:46:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9812:28:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9830:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9835:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9826:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9826:14:35"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "9812:10:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9720:6:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9728:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "9736:10:35",
                "type": ""
              }
            ],
            "src": "9667:179:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9932:99:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9976:6:35"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9984:3:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9942:33:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9942:46:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9942:46:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9997:28:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10015:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10020:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10011:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10011:14:35"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "9997:10:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9905:6:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9913:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "9921:10:35",
                "type": ""
              }
            ],
            "src": "9852:179:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10110:74:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10127:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10171:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "10132:38:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10132:45:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10120:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10120:58:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10120:58:35"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10098:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10105:3:35",
                "type": ""
              }
            ],
            "src": "10037:147:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10245:53:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10262:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10285:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "10267:17:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10267:24:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10255:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10255:37:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10255:37:35"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10233:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10240:3:35",
                "type": ""
              }
            ],
            "src": "10190:108:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10369:53:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10386:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10409:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "10391:17:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10391:24:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10379:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10379:37:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10379:37:35"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10357:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10364:3:35",
                "type": ""
              }
            ],
            "src": "10304:118:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10582:608:35",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10592:68:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10654:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "10606:47:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10606:54:35"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10596:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10669:93:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10750:3:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10755:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10676:73:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10676:86:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10669:3:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10771:71:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10836:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "10786:49:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10786:56:35"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "10775:7:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10851:21:35",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "10865:7:35"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "10855:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10941:224:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10955:34:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "10982:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10976:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10976:13:35"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "10959:13:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11002:70:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "11053:13:35"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "11068:3:35"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "11009:43:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11009:63:35"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11002:3:35"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11085:70:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "11148:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "11095:52:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11095:60:35"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11085:6:35"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10903:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10906:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10900:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10900:13:35"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10914:18:35",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10916:14:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10925:1:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10928:1:35",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10921:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10921:9:35"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10916:1:35"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10885:14:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10887:10:35",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10896:1:35",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "10891:1:35",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "10881:284:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11174:10:35",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "11181:3:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11174:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10561:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10568:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10577:3:35",
                "type": ""
              }
            ],
            "src": "10458:732:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11350:608:35",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11360:68:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11422:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "11374:47:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11374:54:35"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "11364:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11437:93:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11518:3:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11523:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11444:73:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11444:86:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11437:3:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11539:71:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11604:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "11554:49:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11554:56:35"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "11543:7:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11619:21:35",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "11633:7:35"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "11623:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11709:224:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11723:34:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "11750:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "11744:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11744:13:35"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "11727:13:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11770:70:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "11821:13:35"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "11836:3:35"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "11777:43:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11777:63:35"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11770:3:35"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11853:70:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "11916:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "11863:52:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11863:60:35"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11853:6:35"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11671:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11674:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11668:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11668:13:35"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11682:18:35",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11684:14:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "11693:1:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11696:1:35",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11689:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11689:9:35"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "11684:1:35"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11653:14:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11655:10:35",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "11664:1:35",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "11659:1:35",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "11649:284:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11942:10:35",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "11949:3:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11942:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11329:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11336:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11345:3:35",
                "type": ""
              }
            ],
            "src": "11226:732:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12023:50:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12040:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12060:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "12045:14:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12045:21:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12033:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12033:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12033:34:35"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12011:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12018:3:35",
                "type": ""
              }
            ],
            "src": "11964:109:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12144:53:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12161:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12184:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "12166:17:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12166:24:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12154:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12154:37:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12154:37:35"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12132:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12139:3:35",
                "type": ""
              }
            ],
            "src": "12079:118:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12281:79:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12298:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12347:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_AuditTypes_$1999_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "12303:43:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12303:50:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12291:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12291:63:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12291:63:35"
                }
              ]
            },
            "name": "abi_encode_t_enum$_AuditTypes_$1999_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12269:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12276:3:35",
                "type": ""
              }
            ],
            "src": "12203:157:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12442:77:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12459:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12506:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_UserType_$3501_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "12464:41:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12464:48:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12452:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12452:61:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12452:61:35"
                }
              ]
            },
            "name": "abi_encode_t_enum$_UserType_$3501_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12430:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12437:3:35",
                "type": ""
              }
            ],
            "src": "12366:153:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12671:297:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12681:74:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12747:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12752:2:35",
                        "type": "",
                        "value": "77"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12688:58:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12688:67:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12681:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "12776:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12781:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12772:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12772:11:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12785:34:35",
                        "type": "",
                        "value": "CohortFactory:inviteValidator - "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12765:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12765:55:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12765:55:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "12841:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12846:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12837:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12837:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12851:34:35",
                        "type": "",
                        "value": "This validator has not staked an"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12830:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12830:56:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12830:56:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "12907:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12912:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12903:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12903:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12917:15:35",
                        "type": "",
                        "value": "y tokens yet."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12896:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12896:37:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12896:37:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12943:19:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12954:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12959:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12950:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12950:12:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12943:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_063c3b922a3957817a67ee3018d5d722e9238f97e38bf4bc4e101fe06d756c30_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12659:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12667:3:35",
                "type": ""
              }
            ],
            "src": "12525:443:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13120:353:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13130:74:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13196:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13201:2:35",
                        "type": "",
                        "value": "98"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13137:58:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13137:67:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13130:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13225:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13230:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13221:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13221:11:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13234:34:35",
                        "type": "",
                        "value": "CreateCohort:updateMinValidators"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13214:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13214:55:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13214:55:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13290:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13295:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13286:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13286:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13300:34:35",
                        "type": "",
                        "value": "PerCohort - New value for the  m"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13279:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13279:56:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13279:56:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13356:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13361:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13352:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13352:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13366:34:35",
                        "type": "",
                        "value": "in validator per cohort can't be"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13345:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13345:56:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13345:56:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13422:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13427:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13418:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13418:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13432:4:35",
                        "type": "",
                        "value": " 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13411:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13411:26:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13411:26:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13447:20:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13458:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13463:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13454:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13454:13:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13447:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_138ce18bc2efbe435ab2c4679044dac294bb49dfea1082dc56fef4b0aaa0f669_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13108:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13116:3:35",
                "type": ""
              }
            ],
            "src": "12974:499:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13625:248:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13635:74:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13701:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13706:2:35",
                        "type": "",
                        "value": "62"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13642:58:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13642:67:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13635:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13730:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13735:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13726:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13726:11:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13739:34:35",
                        "type": "",
                        "value": "CohortFactory:acceptInvitation -"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13719:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13719:55:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13719:55:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13795:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13800:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13791:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13791:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13805:32:35",
                        "type": "",
                        "value": " This invitation doesn't exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13784:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13784:54:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13784:54:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13848:19:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13859:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13864:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13855:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13855:12:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13848:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_26c21c273a116f547bc94c5ca0bb3f3619c1beb14f87d7771c529649816a42b2_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13613:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13621:3:35",
                "type": ""
              }
            ],
            "src": "13479:394:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14025:293:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14035:74:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14101:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14106:2:35",
                        "type": "",
                        "value": "73"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14042:58:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14042:67:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14035:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14130:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14135:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14126:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14126:11:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14139:34:35",
                        "type": "",
                        "value": "CohortFactory:createCohort - Num"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14119:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14119:55:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14119:55:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14195:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14200:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14191:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14191:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14205:34:35",
                        "type": "",
                        "value": "ber of validators below required"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14184:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14184:56:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14184:56:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14261:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14266:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14257:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14257:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14271:11:35",
                        "type": "",
                        "value": " minimum."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14250:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14250:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14250:33:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14293:19:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14304:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14309:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14300:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14300:12:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14293:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4103d5738ff40af2052004e0adc3aba7a7b54ef75ff53086451b82c0ec1beda9_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14013:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14021:3:35",
                "type": ""
              }
            ],
            "src": "13879:439:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14470:299:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14480:74:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14546:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14551:2:35",
                        "type": "",
                        "value": "79"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14487:58:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14487:67:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14480:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14575:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14580:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14571:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14571:11:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14584:34:35",
                        "type": "",
                        "value": "Cohort Factory:updateMinValidato"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14564:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14564:55:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14564:55:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14640:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14645:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14636:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14636:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14650:34:35",
                        "type": "",
                        "value": "rsPerCohort - Audit type has to "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14629:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14629:56:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14629:56:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14706:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14711:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14702:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14702:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14716:17:35",
                        "type": "",
                        "value": "be <= 5 and >=0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14695:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14695:39:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14695:39:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14744:19:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14755:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14760:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14751:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14751:12:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14744:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_439fa259a2c35dedc9a41e59f465fcf0a757ce4d009800d5f7c36de72bbe406a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14458:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14466:3:35",
                "type": ""
              }
            ],
            "src": "14324:445:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14921:295:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14931:74:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14997:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15002:2:35",
                        "type": "",
                        "value": "75"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14938:58:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14938:67:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14931:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "15026:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15031:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15022:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15022:11:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15035:34:35",
                        "type": "",
                        "value": "CohortFactory:acceptInvitation- "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15015:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15015:55:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15015:55:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "15091:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15096:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15087:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15087:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15101:34:35",
                        "type": "",
                        "value": "This invitation has been accepte"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15080:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15080:56:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15080:56:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "15157:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15162:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15153:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15153:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15167:13:35",
                        "type": "",
                        "value": "d already ."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15146:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15146:35:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15146:35:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15191:19:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15202:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15207:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15198:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15198:12:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15191:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5af81e65e6513e94d4eea7d02f97b048d24ef68c5c10aa5fe907156a0f0fb92b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14909:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14917:3:35",
                "type": ""
              }
            ],
            "src": "14775:441:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15368:246:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15378:74:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15444:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15449:2:35",
                        "type": "",
                        "value": "60"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15385:58:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15385:67:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15378:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "15473:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15478:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15469:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15469:11:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15482:34:35",
                        "type": "",
                        "value": "CohortFactory:inviteValidator - "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15462:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15462:55:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15462:55:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "15538:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15543:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15534:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15534:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15548:30:35",
                        "type": "",
                        "value": "Problem adding new validator"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15527:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15527:52:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15527:52:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15589:19:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15600:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15605:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15596:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15596:12:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15589:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_669689d28b6791ae2d682549090a87958066ead5e77b6a40f07e9433f7690650_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15356:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15364:3:35",
                "type": ""
              }
            ],
            "src": "15222:392:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15766:292:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15776:74:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15842:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15847:2:35",
                        "type": "",
                        "value": "72"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15783:58:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15783:67:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15776:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "15871:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15876:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15867:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15867:11:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15880:34:35",
                        "type": "",
                        "value": "CohortFactory:inviteValidator - "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15860:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15860:55:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15860:55:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "15936:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15941:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15932:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15932:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15946:34:35",
                        "type": "",
                        "value": "Only Approved Validators can be "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15925:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15925:56:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15925:56:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "16002:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16007:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15998:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15998:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16012:10:35",
                        "type": "",
                        "value": "invited."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15991:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15991:32:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15991:32:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16033:19:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16044:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16049:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16040:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16040:12:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16033:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_677833a477637ed71cf914f20c2789e7ba3b5a9c7de9eccec58ba6d44b93b1bb_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15754:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15762:3:35",
                "type": ""
              }
            ],
            "src": "15620:438:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16210:238:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16220:74:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16286:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16291:2:35",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16227:58:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16227:67:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16220:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "16315:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16320:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16311:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16311:11:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16324:34:35",
                        "type": "",
                        "value": "CohortFactory-inviteValidatorMul"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16304:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16304:55:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16304:55:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "16380:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16385:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16376:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16376:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16390:22:35",
                        "type": "",
                        "value": "tiple: List too long"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16369:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16369:44:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16369:44:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16423:19:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16434:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16439:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16430:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16430:12:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16423:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6addea8f69b9f09bff63a8fd0d0f4ac273224e1a8f6601c0e5c20195de4bdc6b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16198:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16206:3:35",
                "type": ""
              }
            ],
            "src": "16064:384:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16600:352:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16610:74:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16676:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16681:2:35",
                        "type": "",
                        "value": "97"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16617:58:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16617:67:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16610:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "16705:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16710:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16701:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16701:11:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16714:34:35",
                        "type": "",
                        "value": "CohortFactory:inviteValidator - "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16694:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16694:55:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16694:55:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "16770:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16775:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16766:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16766:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16780:34:35",
                        "type": "",
                        "value": "This validator has been already "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16759:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16759:56:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16759:56:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "16836:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16841:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16832:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16832:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16846:34:35",
                        "type": "",
                        "value": "invited for this validation type"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16825:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16825:56:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16825:56:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "16902:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16907:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16898:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16898:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16912:3:35",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16891:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16891:25:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16891:25:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16926:20:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16937:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16942:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16933:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16933:13:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16926:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6fd86e87db9e2e08ac6552340780a28e848f6c0d697d6cf86dcb9d51e1b421da_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16588:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16596:3:35",
                "type": ""
              }
            ],
            "src": "16454:498:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17104:306:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17114:74:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17180:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17185:2:35",
                        "type": "",
                        "value": "86"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17121:58:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17121:67:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17114:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17209:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17214:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17205:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17205:11:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17218:34:35",
                        "type": "",
                        "value": "CohortFactory:clearInvitationVal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17198:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17198:55:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17198:55:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17274:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17279:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17270:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17270:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17284:34:35",
                        "type": "",
                        "value": "idator - Problem removing valida"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17263:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17263:56:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17263:56:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17340:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17345:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17336:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17336:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17350:24:35",
                        "type": "",
                        "value": "tor in Cohort contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17329:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17329:46:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17329:46:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17385:19:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17396:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17401:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17392:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17392:12:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17385:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_87916c74f88a06d65f718ff024424ef5e606e441482d68995a776e1dd4039ef7_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17092:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17100:3:35",
                "type": ""
              }
            ],
            "src": "16958:452:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17562:381:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17572:75:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17638:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17643:3:35",
                        "type": "",
                        "value": "125"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17579:58:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17579:68:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17572:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17668:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17673:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17664:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17664:11:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17677:34:35",
                        "type": "",
                        "value": "CohortFactory:acceptInvitation -"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17657:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17657:55:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17657:55:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17733:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17738:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17729:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17729:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17743:34:35",
                        "type": "",
                        "value": " You are accepting invitation to"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17722:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17722:56:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17722:56:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17799:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17804:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17795:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17795:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17809:34:35",
                        "type": "",
                        "value": " which you were not invited or t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17788:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17788:56:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17788:56:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17865:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17870:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17861:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17861:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17875:31:35",
                        "type": "",
                        "value": "his invitation doesn't exist."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17854:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17854:53:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17854:53:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17917:20:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17928:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17933:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17924:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17924:13:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17917:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a354293b2d701359204e635965701f59237ae47d1d7a71a09361490342b7265c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17550:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17558:3:35",
                "type": ""
              }
            ],
            "src": "17416:527:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18095:295:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18105:74:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18171:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18176:2:35",
                        "type": "",
                        "value": "75"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18112:58:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18112:67:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "18105:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "18200:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18205:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18196:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18196:11:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18209:34:35",
                        "type": "",
                        "value": "CohortFactory:inviteValidator - "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18189:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18189:55:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18189:55:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "18265:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18270:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18261:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18261:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18275:34:35",
                        "type": "",
                        "value": "Only Enterprise user can invite "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18254:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18254:56:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18254:56:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "18331:3:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18336:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18327:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18327:12:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18341:13:35",
                        "type": "",
                        "value": "Validators."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18320:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18320:35:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18320:35:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18365:19:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18376:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18381:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18372:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18372:12:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18365:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e77e0a377146f0cbb727bcc33df33781a2df3863ca61db0d7a180f0d158fe44f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18083:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18091:3:35",
                "type": ""
              }
            ],
            "src": "17949:441:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18451:53:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18468:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "18491:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "18473:17:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18473:24:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18461:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18461:37:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18461:37:35"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18439:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18446:3:35",
                "type": ""
              }
            ],
            "src": "18396:108:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18575:53:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18592:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "18615:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "18597:17:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18597:24:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18585:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18585:37:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18585:37:35"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18563:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18570:3:35",
                "type": ""
              }
            ],
            "src": "18510:118:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18732:124:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18742:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18754:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18765:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18750:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18750:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18742:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18822:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18835:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18846:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18831:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18831:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18778:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18778:71:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18778:71:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18704:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18716:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18727:4:35",
                "type": ""
              }
            ],
            "src": "18634:222:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18968:132:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18978:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18990:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19001:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18986:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18986:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18978:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19066:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19079:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19090:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19075:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19075:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19014:51:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19014:79:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19014:79:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18940:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18952:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18963:4:35",
                "type": ""
              }
            ],
            "src": "18862:238:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19309:392:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19319:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19331:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19342:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19327:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19327:19:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19319:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19408:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19421:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19432:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19417:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19417:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19356:51:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19356:79:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19356:79:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "19502:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19515:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19526:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19511:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19511:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_AuditTypes_$1999_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19445:56:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19445:85:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19445:85:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "19584:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19597:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19608:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19593:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19593:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19540:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19540:72:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19540:72:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "19666:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19679:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19690:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19675:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19675:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19622:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19622:72:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19622:72:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_enum$_AuditTypes_$1999_t_uint256_t_address__to_t_address_t_uint8_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19257:9:35",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "19269:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "19277:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19285:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19293:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19304:4:35",
                "type": ""
              }
            ],
            "src": "19106:595:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19852:225:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19862:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19874:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19885:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19870:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19870:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19862:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19950:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19963:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19974:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19959:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19959:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19898:51:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19898:79:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19898:79:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20042:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20055:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20066:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20051:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20051:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_UserType_$3501_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19987:54:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19987:83:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19987:83:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_enum$_UserType_$3501__to_t_address_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19816:9:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19828:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19836:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19847:4:35",
                "type": ""
              }
            ],
            "src": "19707:370:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20217:214:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20227:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20239:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20250:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20235:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20235:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20227:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20307:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20320:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20331:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20316:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20316:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20263:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20263:71:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20263:71:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20396:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20409:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20420:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20405:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20405:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20344:51:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20344:80:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20344:80:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_payable__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20181:9:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20193:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20201:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20212:4:35",
                "type": ""
              }
            ],
            "src": "20083:348:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20576:219:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20586:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20598:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20609:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20594:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20594:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20586:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20666:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20679:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20690:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20675:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20675:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20622:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20622:71:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20622:71:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20760:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20773:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20784:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20769:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20769:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_AuditTypes_$1999_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20703:56:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20703:85:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20703:85:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_enum$_AuditTypes_$1999__to_t_address_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20540:9:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20552:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20560:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20571:4:35",
                "type": ""
              }
            ],
            "src": "20437:358:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21012:400:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21022:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21034:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21045:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21030:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21030:19:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21022:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21103:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21116:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21127:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21112:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21112:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21059:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21059:71:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21059:71:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "21197:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21210:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21221:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21206:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21206:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_AuditTypes_$1999_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21140:56:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21140:85:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21140:85:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "21287:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21300:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21311:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21296:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21296:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21235:51:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21235:80:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21235:80:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "21377:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21390:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21401:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21386:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21386:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21325:51:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21325:80:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21325:80:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_enum$_AuditTypes_$1999_t_address_payable_t_address_payable__to_t_address_t_uint8_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20960:9:35",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "20972:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "20980:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20988:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20996:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21007:4:35",
                "type": ""
              }
            ],
            "src": "20801:611:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21621:392:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21631:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21643:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21654:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21639:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21639:19:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21631:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21712:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21725:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21736:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21721:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21721:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21668:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21668:71:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21668:71:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "21806:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21819:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21830:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21815:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21815:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_AuditTypes_$1999_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21749:56:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21749:85:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21749:85:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "21888:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21901:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21912:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21897:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21897:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21844:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21844:72:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21844:72:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "21978:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21991:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22002:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21987:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21987:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21926:51:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21926:80:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21926:80:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_enum$_AuditTypes_$1999_t_address_t_address_payable__to_t_address_t_uint8_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21569:9:35",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "21581:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "21589:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21597:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21605:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21616:4:35",
                "type": ""
              }
            ],
            "src": "21418:595:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22156:217:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22166:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22178:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22189:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22174:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22174:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22166:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22246:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22259:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22270:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22255:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22255:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22202:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22202:71:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22202:71:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "22338:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22351:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22362:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22347:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22347:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_UserType_$3501_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22283:54:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22283:83:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22283:83:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_enum$_UserType_$3501__to_t_address_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22120:9:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "22132:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22140:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22151:4:35",
                "type": ""
              }
            ],
            "src": "22019:354:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22624:544:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22634:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22646:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22657:3:35",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22642:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22642:19:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22634:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22715:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22728:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22739:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22724:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22724:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22671:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22671:71:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22671:71:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "22796:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22809:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22820:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22805:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22805:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22752:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22752:72:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22752:72:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "22878:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22891:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22902:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22887:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22887:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22834:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22834:72:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22834:72:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "22973:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22986:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22997:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22982:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22982:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_AuditTypes_$1999_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22916:56:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22916:85:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22916:85:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "23055:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23068:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23079:3:35",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23064:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23064:19:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23011:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23011:73:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23011:73:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "23132:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23145:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23156:3:35",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23141:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23141:19:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23094:37:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23094:67:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23094:67:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_enum$_AuditTypes_$1999_t_address_t_bool__to_t_address_t_uint256_t_uint256_t_uint8_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22556:9:35",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "22568:6:35",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "22576:6:35",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "22584:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "22592:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "22600:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22608:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22619:4:35",
                "type": ""
              }
            ],
            "src": "22379:789:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23400:408:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23410:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23422:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23433:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23418:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23418:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23410:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23457:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23468:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23453:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23453:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "23476:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23482:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "23472:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23472:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23446:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23446:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23446:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23502:116:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "23604:6:35"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "23613:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23510:93:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23510:108:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23502:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23639:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23650:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23635:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23635:18:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "23659:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23665:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "23655:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23655:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23628:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23628:48:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23628:48:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23685:116:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "23787:6:35"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "23796:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23693:93:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23693:108:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23685:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23364:9:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "23376:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "23384:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23395:4:35",
                "type": ""
              }
            ],
            "src": "23174:634:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23906:118:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23916:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23928:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23939:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23924:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23924:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23916:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "23990:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24003:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24014:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23999:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23999:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23952:37:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23952:65:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23952:65:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23878:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "23890:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23901:4:35",
                "type": ""
              }
            ],
            "src": "23814:210:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24144:194:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24154:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24166:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24177:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24162:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24162:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24154:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "24228:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24241:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24252:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24237:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24237:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24190:37:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24190:65:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24190:65:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "24303:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24316:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24327:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24312:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24312:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24265:37:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24265:66:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24265:66:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24108:9:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "24120:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "24128:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24139:4:35",
                "type": ""
              }
            ],
            "src": "24030:308:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24442:124:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24452:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24464:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24475:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24460:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24460:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24452:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "24532:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24545:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24556:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24541:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24541:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24488:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24488:71:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24488:71:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24414:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "24426:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24437:4:35",
                "type": ""
              }
            ],
            "src": "24344:222:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24743:248:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24753:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24765:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24776:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24761:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24761:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24753:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24800:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24811:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24796:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24796:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "24819:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24825:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "24815:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24815:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24789:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24789:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24789:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24845:139:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "24979:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_063c3b922a3957817a67ee3018d5d722e9238f97e38bf4bc4e101fe06d756c30_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24853:124:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24853:131:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24845:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_063c3b922a3957817a67ee3018d5d722e9238f97e38bf4bc4e101fe06d756c30__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24723:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24738:4:35",
                "type": ""
              }
            ],
            "src": "24572:419:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25168:248:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25178:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25190:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25201:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25186:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25186:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25178:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25225:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25236:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25221:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25221:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "25244:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25250:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "25240:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25240:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25214:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25214:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25214:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25270:139:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "25404:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_138ce18bc2efbe435ab2c4679044dac294bb49dfea1082dc56fef4b0aaa0f669_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25278:124:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25278:131:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25270:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_138ce18bc2efbe435ab2c4679044dac294bb49dfea1082dc56fef4b0aaa0f669__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25148:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25163:4:35",
                "type": ""
              }
            ],
            "src": "24997:419:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25593:248:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25603:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25615:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25626:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25611:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25611:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25603:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25650:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25661:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25646:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25646:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "25669:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25675:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "25665:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25665:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25639:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25639:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25639:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25695:139:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "25829:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_26c21c273a116f547bc94c5ca0bb3f3619c1beb14f87d7771c529649816a42b2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25703:124:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25703:131:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25695:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_26c21c273a116f547bc94c5ca0bb3f3619c1beb14f87d7771c529649816a42b2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25573:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25588:4:35",
                "type": ""
              }
            ],
            "src": "25422:419:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26018:248:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26028:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26040:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26051:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26036:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26036:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26028:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26075:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26086:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26071:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26071:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "26094:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26100:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "26090:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26090:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26064:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26064:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26064:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26120:139:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "26254:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4103d5738ff40af2052004e0adc3aba7a7b54ef75ff53086451b82c0ec1beda9_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26128:124:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26128:131:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26120:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4103d5738ff40af2052004e0adc3aba7a7b54ef75ff53086451b82c0ec1beda9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25998:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26013:4:35",
                "type": ""
              }
            ],
            "src": "25847:419:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26443:248:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26453:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26465:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26476:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26461:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26461:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26453:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26500:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26511:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26496:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26496:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "26519:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26525:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "26515:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26515:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26489:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26489:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26489:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26545:139:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "26679:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_439fa259a2c35dedc9a41e59f465fcf0a757ce4d009800d5f7c36de72bbe406a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26553:124:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26553:131:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26545:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_439fa259a2c35dedc9a41e59f465fcf0a757ce4d009800d5f7c36de72bbe406a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26423:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26438:4:35",
                "type": ""
              }
            ],
            "src": "26272:419:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26868:248:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26878:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26890:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26901:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26886:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26886:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26878:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26925:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26936:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26921:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26921:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "26944:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26950:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "26940:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26940:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26914:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26914:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26914:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26970:139:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "27104:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5af81e65e6513e94d4eea7d02f97b048d24ef68c5c10aa5fe907156a0f0fb92b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26978:124:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26978:131:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26970:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5af81e65e6513e94d4eea7d02f97b048d24ef68c5c10aa5fe907156a0f0fb92b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26848:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26863:4:35",
                "type": ""
              }
            ],
            "src": "26697:419:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27293:248:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27303:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27315:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27326:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27311:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27311:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27303:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27350:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27361:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27346:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27346:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "27369:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27375:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "27365:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27365:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27339:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27339:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27339:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27395:139:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "27529:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_669689d28b6791ae2d682549090a87958066ead5e77b6a40f07e9433f7690650_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27403:124:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27403:131:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27395:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_669689d28b6791ae2d682549090a87958066ead5e77b6a40f07e9433f7690650__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27273:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27288:4:35",
                "type": ""
              }
            ],
            "src": "27122:419:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27718:248:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27728:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27740:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27751:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27736:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27736:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27728:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27775:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27786:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27771:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27771:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "27794:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27800:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "27790:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27790:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27764:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27764:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27764:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27820:139:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "27954:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_677833a477637ed71cf914f20c2789e7ba3b5a9c7de9eccec58ba6d44b93b1bb_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27828:124:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27828:131:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27820:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_677833a477637ed71cf914f20c2789e7ba3b5a9c7de9eccec58ba6d44b93b1bb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27698:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27713:4:35",
                "type": ""
              }
            ],
            "src": "27547:419:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28143:248:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28153:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28165:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28176:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28161:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28161:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28153:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28200:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28211:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28196:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28196:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "28219:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28225:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "28215:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28215:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28189:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28189:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28189:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28245:139:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "28379:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6addea8f69b9f09bff63a8fd0d0f4ac273224e1a8f6601c0e5c20195de4bdc6b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28253:124:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28253:131:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28245:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6addea8f69b9f09bff63a8fd0d0f4ac273224e1a8f6601c0e5c20195de4bdc6b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28123:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28138:4:35",
                "type": ""
              }
            ],
            "src": "27972:419:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28568:248:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28578:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28590:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28601:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28586:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28586:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28578:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28625:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28636:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28621:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28621:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "28644:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28650:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "28640:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28640:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28614:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28614:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28614:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28670:139:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "28804:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6fd86e87db9e2e08ac6552340780a28e848f6c0d697d6cf86dcb9d51e1b421da_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28678:124:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28678:131:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28670:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6fd86e87db9e2e08ac6552340780a28e848f6c0d697d6cf86dcb9d51e1b421da__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28548:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28563:4:35",
                "type": ""
              }
            ],
            "src": "28397:419:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28993:248:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29003:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29015:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29026:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29011:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29011:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29003:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29050:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29061:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29046:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29046:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "29069:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29075:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "29065:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29065:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29039:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29039:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29039:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29095:139:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "29229:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_87916c74f88a06d65f718ff024424ef5e606e441482d68995a776e1dd4039ef7_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29103:124:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29103:131:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29095:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_87916c74f88a06d65f718ff024424ef5e606e441482d68995a776e1dd4039ef7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28973:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28988:4:35",
                "type": ""
              }
            ],
            "src": "28822:419:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29418:248:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29428:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29440:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29451:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29436:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29436:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29428:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29475:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29486:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29471:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29471:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "29494:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29500:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "29490:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29490:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29464:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29464:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29464:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29520:139:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "29654:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a354293b2d701359204e635965701f59237ae47d1d7a71a09361490342b7265c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29528:124:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29528:131:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29520:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a354293b2d701359204e635965701f59237ae47d1d7a71a09361490342b7265c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29398:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29413:4:35",
                "type": ""
              }
            ],
            "src": "29247:419:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29843:248:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29853:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29865:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29876:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29861:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29861:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29853:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29900:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29911:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29896:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29896:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "29919:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29925:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "29915:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29915:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29889:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29889:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29889:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29945:139:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "30079:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e77e0a377146f0cbb727bcc33df33781a2df3863ca61db0d7a180f0d158fe44f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29953:124:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29953:131:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29945:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e77e0a377146f0cbb727bcc33df33781a2df3863ca61db0d7a180f0d158fe44f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29823:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29838:4:35",
                "type": ""
              }
            ],
            "src": "29672:419:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30195:124:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30205:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30217:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30228:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30213:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30213:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30205:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "30285:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30298:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30309:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30294:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30294:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30241:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30241:71:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30241:71:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30167:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "30179:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "30190:4:35",
                "type": ""
              }
            ],
            "src": "30097:222:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30537:397:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30547:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30559:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30570:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30555:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30555:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30547:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "30627:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30640:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30651:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30636:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30636:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30583:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30583:71:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30583:71:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30675:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30686:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30671:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30671:18:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "30695:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30701:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "30691:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30691:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30664:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30664:48:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30664:48:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30721:116:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "30823:6:35"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "30832:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30729:93:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30729:108:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30721:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "30899:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30912:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30923:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30908:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30908:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30847:51:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30847:80:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30847:80:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_payable__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30493:9:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "30505:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "30513:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "30521:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "30532:4:35",
                "type": ""
              }
            ],
            "src": "30325:609:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31079:219:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31089:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31101:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31112:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31097:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31097:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "31089:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "31169:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31182:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31193:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31178:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31178:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31125:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31125:71:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31125:71:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "31263:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31276:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31287:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31272:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31272:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_AuditTypes_$1999_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31206:56:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31206:85:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31206:85:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_enum$_AuditTypes_$1999__to_t_uint256_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "31043:9:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "31055:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "31063:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "31074:4:35",
                "type": ""
              }
            ],
            "src": "30940:358:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31344:238:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31354:19:35",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31370:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "31364:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31364:9:35"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "31354:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "31382:35:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "31404:6:35"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "31412:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31400:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31400:17:35"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "31386:10:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "31528:17:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "31530:11:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "31530:13:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "31530:13:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "31471:10:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31483:18:35",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "31468:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31468:34:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "31507:10:35"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "31519:6:35"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "31504:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31504:22:35"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "31465:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31465:62:35"
                  },
                  "nodeType": "YulIf",
                  "src": "31462:2:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31561:2:35",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "31565:10:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31554:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31554:22:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31554:22:35"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "31328:4:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "31337:6:35",
                "type": ""
              }
            ],
            "src": "31304:278:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31670:224:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "31775:17:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "31777:11:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "31777:13:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "31777:13:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "31747:6:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31755:18:35",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "31744:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31744:30:35"
                  },
                  "nodeType": "YulIf",
                  "src": "31741:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31802:25:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "31814:6:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31822:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "31810:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31810:17:35"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "31802:4:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31864:23:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "31876:4:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31882:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31872:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31872:15:35"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "31864:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "31654:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "31665:4:35",
                "type": ""
              }
            ],
            "src": "31588:306:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31982:224:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "32087:17:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "32089:11:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "32089:13:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "32089:13:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "32059:6:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32067:18:35",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "32056:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32056:30:35"
                  },
                  "nodeType": "YulIf",
                  "src": "32053:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32114:25:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "32126:6:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32134:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "32122:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32122:17:35"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "32114:4:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32176:23:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "32188:4:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32194:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32184:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32184:15:35"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "32176:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "31966:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "31977:4:35",
                "type": ""
              }
            ],
            "src": "31900:306:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32284:60:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32294:11:35",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "32302:3:35"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "32294:4:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32315:22:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "32327:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32332:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32323:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32323:14:35"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "32315:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "32271:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "32279:4:35",
                "type": ""
              }
            ],
            "src": "32212:132:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32422:60:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32432:11:35",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "32440:3:35"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "32432:4:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32453:22:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "32465:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32470:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32461:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32461:14:35"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "32453:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "32409:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "32417:4:35",
                "type": ""
              }
            ],
            "src": "32350:132:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32562:40:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32573:22:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "32589:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "32583:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32583:12:35"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "32573:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "32545:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "32555:6:35",
                "type": ""
              }
            ],
            "src": "32488:114:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32682:40:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32693:22:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "32709:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "32703:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32703:12:35"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "32693:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "32665:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "32675:6:35",
                "type": ""
              }
            ],
            "src": "32608:114:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32803:38:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32813:22:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "32825:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32830:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32821:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32821:14:35"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "32813:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "32790:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "32798:4:35",
                "type": ""
              }
            ],
            "src": "32728:113:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32922:38:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32932:22:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "32944:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32949:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32940:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32940:14:35"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "32932:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "32909:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "32917:4:35",
                "type": ""
              }
            ],
            "src": "32847:113:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33077:73:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "33094:3:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "33099:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33087:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33087:19:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33087:19:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "33115:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "33134:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33139:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "33130:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33130:14:35"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "33115:11:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "33049:3:35",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "33054:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "33065:11:35",
                "type": ""
              }
            ],
            "src": "32966:184:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33267:73:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "33284:3:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "33289:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33277:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33277:19:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33277:19:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "33305:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "33324:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33329:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "33320:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33320:14:35"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "33305:11:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "33239:3:35",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "33244:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "33255:11:35",
                "type": ""
              }
            ],
            "src": "33156:184:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33442:73:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "33459:3:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "33464:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33452:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33452:19:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33452:19:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "33480:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "33499:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33504:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "33495:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33495:14:35"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "33480:11:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "33414:3:35",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "33419:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "33430:11:35",
                "type": ""
              }
            ],
            "src": "33346:169:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33566:51:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "33576:35:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "33605:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "33587:17:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33587:24:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "33576:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "33548:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "33558:7:35",
                "type": ""
              }
            ],
            "src": "33521:96:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33665:48:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "33675:32:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "33700:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "33693:6:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33693:13:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "33686:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33686:21:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "33675:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "33647:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "33657:7:35",
                "type": ""
              }
            ],
            "src": "33623:90:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33764:32:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "33774:16:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "33785:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "33774:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "33746:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "33756:7:35",
                "type": ""
              }
            ],
            "src": "33719:77:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33862:81:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "33872:16:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "33883:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "33872:7:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "33931:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_AuditTypes_$1999",
                      "nodeType": "YulIdentifier",
                      "src": "33889:41:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33889:48:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33889:48:35"
                }
              ]
            },
            "name": "cleanup_t_enum$_AuditTypes_$1999",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "33844:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "33854:7:35",
                "type": ""
              }
            ],
            "src": "33802:141:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34007:79:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "34017:16:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "34028:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "34017:7:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "34074:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_UserType_$3501",
                      "nodeType": "YulIdentifier",
                      "src": "34034:39:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34034:46:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34034:46:35"
                }
              ]
            },
            "name": "cleanup_t_enum$_UserType_$3501",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "33989:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "33999:7:35",
                "type": ""
              }
            ],
            "src": "33949:137:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34137:81:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "34147:65:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "34162:5:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34169:42:35",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "34158:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34158:54:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "34147:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34119:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "34129:7:35",
                "type": ""
              }
            ],
            "src": "34092:126:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34269:32:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "34279:16:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "34290:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "34279:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34251:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "34261:7:35",
                "type": ""
              }
            ],
            "src": "34224:77:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34375:66:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "34385:50:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "34429:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "34398:30:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34398:37:35"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "34385:9:35"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34355:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "34365:9:35",
                "type": ""
              }
            ],
            "src": "34307:134:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34520:68:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "34530:52:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "34576:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_AuditTypes_$1999",
                      "nodeType": "YulIdentifier",
                      "src": "34543:32:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34543:39:35"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "34530:9:35"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_AuditTypes_$1999_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34500:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "34510:9:35",
                "type": ""
              }
            ],
            "src": "34447:141:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34665:66:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "34675:50:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "34719:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_UserType_$3501",
                      "nodeType": "YulIdentifier",
                      "src": "34688:30:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34688:37:35"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "34675:9:35"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_UserType_$3501_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34645:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "34655:9:35",
                "type": ""
              }
            ],
            "src": "34594:137:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34797:66:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "34807:50:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "34851:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "34820:30:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34820:37:35"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "34807:9:35"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34777:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "34787:9:35",
                "type": ""
              }
            ],
            "src": "34737:126:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34929:53:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "34939:37:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "34970:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "34952:17:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34952:24:35"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "34939:9:35"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34909:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "34919:9:35",
                "type": ""
              }
            ],
            "src": "34869:113:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35011:25:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "functionName": {
                      "name": "invalid",
                      "nodeType": "YulIdentifier",
                      "src": "35021:7:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35021:9:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35021:9:35"
                }
              ]
            },
            "name": "panic_error",
            "nodeType": "YulFunctionDefinition",
            "src": "34988:48:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35100:57:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "35134:17:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "35136:11:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "35136:13:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "35136:13:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "35123:5:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35130:1:35",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "35120:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35120:12:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "35113:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35113:20:35"
                  },
                  "nodeType": "YulIf",
                  "src": "35110:2:35"
                }
              ]
            },
            "name": "validator_assert_t_enum$_AuditTypes_$1999",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "35093:5:35",
                "type": ""
              }
            ],
            "src": "35042:115:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35219:57:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "35253:17:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "35255:11:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "35255:13:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "35255:13:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "35242:5:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35249:1:35",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "35239:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35239:12:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "35232:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35232:20:35"
                  },
                  "nodeType": "YulIf",
                  "src": "35229:2:35"
                }
              ]
            },
            "name": "validator_assert_t_enum$_UserType_$3501",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "35212:5:35",
                "type": ""
              }
            ],
            "src": "35163:113:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35325:79:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "35382:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "35391:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "35394:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "35384:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "35384:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "35384:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "35348:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "35373:5:35"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "35355:17:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "35355:24:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "35345:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35345:35:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "35338:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35338:43:35"
                  },
                  "nodeType": "YulIf",
                  "src": "35335:2:35"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "35318:5:35",
                "type": ""
              }
            ],
            "src": "35282:122:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35450:76:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "35504:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "35513:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "35516:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "35506:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "35506:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "35506:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "35473:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "35495:5:35"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "35480:14:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "35480:21:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "35470:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35470:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "35463:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35463:40:35"
                  },
                  "nodeType": "YulIf",
                  "src": "35460:2:35"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "35443:5:35",
                "type": ""
              }
            ],
            "src": "35410:116:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35575:79:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "35632:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "35641:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "35644:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "35634:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "35634:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "35634:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "35598:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "35623:5:35"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "35605:17:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "35605:24:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "35595:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35595:35:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "35588:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35588:43:35"
                  },
                  "nodeType": "YulIf",
                  "src": "35585:2:35"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "35568:5:35",
                "type": ""
              }
            ],
            "src": "35532:122:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35718:56:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "35752:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "35761:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "35764:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "35754:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "35754:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "35754:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "35741:5:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35748:1:35",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "35738:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35738:12:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "35731:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35731:20:35"
                  },
                  "nodeType": "YulIf",
                  "src": "35728:2:35"
                }
              ]
            },
            "name": "validator_revert_t_enum$_AuditTypes_$1999",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "35711:5:35",
                "type": ""
              }
            ],
            "src": "35660:114:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35823:79:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "35880:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "35889:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "35892:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "35882:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "35882:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "35882:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "35846:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "35871:5:35"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "35853:17:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "35853:24:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "35843:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35843:35:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "35836:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35836:43:35"
                  },
                  "nodeType": "YulIf",
                  "src": "35833:2:35"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "35816:5:35",
                "type": ""
              }
            ],
            "src": "35780:122:35"
          }
        ]
      },
      "contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_enum$_AuditTypes_$1999(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_AuditTypes_$1999(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_enum$_AuditTypes_$1999(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_enum$_AuditTypes_$1999(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_AuditTypes_$1999(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_AuditTypes_$1999(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_AuditTypes_$1999t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_AuditTypes_$1999(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_enum$_AuditTypes_$1999t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_AuditTypes_$1999(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_AuditTypes_$1999(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_AuditTypes_$1999(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_enum$_AuditTypes_$1999_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_AuditTypes_$1999_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_UserType_$3501_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_UserType_$3501_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_063c3b922a3957817a67ee3018d5d722e9238f97e38bf4bc4e101fe06d756c30_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 77)\n\n        mstore(add(pos, 0), \"CohortFactory:inviteValidator - \")\n\n        mstore(add(pos, 32), \"This validator has not staked an\")\n\n        mstore(add(pos, 64), \"y tokens yet.\")\n\n        end := add(pos, 96)\n    }\n\n    function abi_encode_t_stringliteral_138ce18bc2efbe435ab2c4679044dac294bb49dfea1082dc56fef4b0aaa0f669_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 98)\n\n        mstore(add(pos, 0), \"CreateCohort:updateMinValidators\")\n\n        mstore(add(pos, 32), \"PerCohort - New value for the  m\")\n\n        mstore(add(pos, 64), \"in validator per cohort can't be\")\n\n        mstore(add(pos, 96), \" 0\")\n\n        end := add(pos, 128)\n    }\n\n    function abi_encode_t_stringliteral_26c21c273a116f547bc94c5ca0bb3f3619c1beb14f87d7771c529649816a42b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n\n        mstore(add(pos, 0), \"CohortFactory:acceptInvitation -\")\n\n        mstore(add(pos, 32), \" This invitation doesn't exist\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4103d5738ff40af2052004e0adc3aba7a7b54ef75ff53086451b82c0ec1beda9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 73)\n\n        mstore(add(pos, 0), \"CohortFactory:createCohort - Num\")\n\n        mstore(add(pos, 32), \"ber of validators below required\")\n\n        mstore(add(pos, 64), \" minimum.\")\n\n        end := add(pos, 96)\n    }\n\n    function abi_encode_t_stringliteral_439fa259a2c35dedc9a41e59f465fcf0a757ce4d009800d5f7c36de72bbe406a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 79)\n\n        mstore(add(pos, 0), \"Cohort Factory:updateMinValidato\")\n\n        mstore(add(pos, 32), \"rsPerCohort - Audit type has to \")\n\n        mstore(add(pos, 64), \"be <= 5 and >=0\")\n\n        end := add(pos, 96)\n    }\n\n    function abi_encode_t_stringliteral_5af81e65e6513e94d4eea7d02f97b048d24ef68c5c10aa5fe907156a0f0fb92b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 75)\n\n        mstore(add(pos, 0), \"CohortFactory:acceptInvitation- \")\n\n        mstore(add(pos, 32), \"This invitation has been accepte\")\n\n        mstore(add(pos, 64), \"d already .\")\n\n        end := add(pos, 96)\n    }\n\n    function abi_encode_t_stringliteral_669689d28b6791ae2d682549090a87958066ead5e77b6a40f07e9433f7690650_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 60)\n\n        mstore(add(pos, 0), \"CohortFactory:inviteValidator - \")\n\n        mstore(add(pos, 32), \"Problem adding new validator\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_677833a477637ed71cf914f20c2789e7ba3b5a9c7de9eccec58ba6d44b93b1bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 72)\n\n        mstore(add(pos, 0), \"CohortFactory:inviteValidator - \")\n\n        mstore(add(pos, 32), \"Only Approved Validators can be \")\n\n        mstore(add(pos, 64), \"invited.\")\n\n        end := add(pos, 96)\n    }\n\n    function abi_encode_t_stringliteral_6addea8f69b9f09bff63a8fd0d0f4ac273224e1a8f6601c0e5c20195de4bdc6b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n\n        mstore(add(pos, 0), \"CohortFactory-inviteValidatorMul\")\n\n        mstore(add(pos, 32), \"tiple: List too long\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6fd86e87db9e2e08ac6552340780a28e848f6c0d697d6cf86dcb9d51e1b421da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 97)\n\n        mstore(add(pos, 0), \"CohortFactory:inviteValidator - \")\n\n        mstore(add(pos, 32), \"This validator has been already \")\n\n        mstore(add(pos, 64), \"invited for this validation type\")\n\n        mstore(add(pos, 96), \".\")\n\n        end := add(pos, 128)\n    }\n\n    function abi_encode_t_stringliteral_87916c74f88a06d65f718ff024424ef5e606e441482d68995a776e1dd4039ef7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 86)\n\n        mstore(add(pos, 0), \"CohortFactory:clearInvitationVal\")\n\n        mstore(add(pos, 32), \"idator - Problem removing valida\")\n\n        mstore(add(pos, 64), \"tor in Cohort contract\")\n\n        end := add(pos, 96)\n    }\n\n    function abi_encode_t_stringliteral_a354293b2d701359204e635965701f59237ae47d1d7a71a09361490342b7265c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 125)\n\n        mstore(add(pos, 0), \"CohortFactory:acceptInvitation -\")\n\n        mstore(add(pos, 32), \" You are accepting invitation to\")\n\n        mstore(add(pos, 64), \" which you were not invited or t\")\n\n        mstore(add(pos, 96), \"his invitation doesn't exist.\")\n\n        end := add(pos, 128)\n    }\n\n    function abi_encode_t_stringliteral_e77e0a377146f0cbb727bcc33df33781a2df3863ca61db0d7a180f0d158fe44f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 75)\n\n        mstore(add(pos, 0), \"CohortFactory:inviteValidator - \")\n\n        mstore(add(pos, 32), \"Only Enterprise user can invite \")\n\n        mstore(add(pos, 64), \"Validators.\")\n\n        end := add(pos, 96)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_enum$_AuditTypes_$1999_t_uint256_t_address__to_t_address_t_uint8_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_AuditTypes_$1999_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_enum$_UserType_$3501__to_t_address_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_UserType_$3501_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_enum$_AuditTypes_$1999__to_t_address_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_AuditTypes_$1999_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_enum$_AuditTypes_$1999_t_address_payable_t_address_payable__to_t_address_t_uint8_t_address_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_AuditTypes_$1999_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_enum$_AuditTypes_$1999_t_address_t_address_payable__to_t_address_t_uint8_t_address_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_AuditTypes_$1999_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_enum$_UserType_$3501__to_t_address_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_UserType_$3501_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_enum$_AuditTypes_$1999_t_address_t_bool__to_t_address_t_uint256_t_uint256_t_uint8_t_address_t_bool__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_AuditTypes_$1999_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_063c3b922a3957817a67ee3018d5d722e9238f97e38bf4bc4e101fe06d756c30__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_063c3b922a3957817a67ee3018d5d722e9238f97e38bf4bc4e101fe06d756c30_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_138ce18bc2efbe435ab2c4679044dac294bb49dfea1082dc56fef4b0aaa0f669__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_138ce18bc2efbe435ab2c4679044dac294bb49dfea1082dc56fef4b0aaa0f669_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_26c21c273a116f547bc94c5ca0bb3f3619c1beb14f87d7771c529649816a42b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26c21c273a116f547bc94c5ca0bb3f3619c1beb14f87d7771c529649816a42b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4103d5738ff40af2052004e0adc3aba7a7b54ef75ff53086451b82c0ec1beda9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4103d5738ff40af2052004e0adc3aba7a7b54ef75ff53086451b82c0ec1beda9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_439fa259a2c35dedc9a41e59f465fcf0a757ce4d009800d5f7c36de72bbe406a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_439fa259a2c35dedc9a41e59f465fcf0a757ce4d009800d5f7c36de72bbe406a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5af81e65e6513e94d4eea7d02f97b048d24ef68c5c10aa5fe907156a0f0fb92b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5af81e65e6513e94d4eea7d02f97b048d24ef68c5c10aa5fe907156a0f0fb92b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_669689d28b6791ae2d682549090a87958066ead5e77b6a40f07e9433f7690650__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_669689d28b6791ae2d682549090a87958066ead5e77b6a40f07e9433f7690650_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_677833a477637ed71cf914f20c2789e7ba3b5a9c7de9eccec58ba6d44b93b1bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_677833a477637ed71cf914f20c2789e7ba3b5a9c7de9eccec58ba6d44b93b1bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6addea8f69b9f09bff63a8fd0d0f4ac273224e1a8f6601c0e5c20195de4bdc6b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6addea8f69b9f09bff63a8fd0d0f4ac273224e1a8f6601c0e5c20195de4bdc6b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6fd86e87db9e2e08ac6552340780a28e848f6c0d697d6cf86dcb9d51e1b421da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6fd86e87db9e2e08ac6552340780a28e848f6c0d697d6cf86dcb9d51e1b421da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_87916c74f88a06d65f718ff024424ef5e606e441482d68995a776e1dd4039ef7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87916c74f88a06d65f718ff024424ef5e606e441482d68995a776e1dd4039ef7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a354293b2d701359204e635965701f59237ae47d1d7a71a09361490342b7265c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a354293b2d701359204e635965701f59237ae47d1d7a71a09361490342b7265c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e77e0a377146f0cbb727bcc33df33781a2df3863ca61db0d7a180f0d158fe44f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e77e0a377146f0cbb727bcc33df33781a2df3863ca61db0d7a180f0d158fe44f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_payable__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_AuditTypes_$1999__to_t_uint256_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_AuditTypes_$1999_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_enum$_AuditTypes_$1999(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_AuditTypes_$1999(value)\n    }\n\n    function cleanup_t_enum$_UserType_$3501(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_UserType_$3501(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_enum$_AuditTypes_$1999_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_AuditTypes_$1999(value)\n    }\n\n    function convert_t_enum$_UserType_$3501_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_UserType_$3501(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function validator_assert_t_enum$_AuditTypes_$1999(value) {\n        if iszero(lt(value, 6)) { panic_error() }\n    }\n\n    function validator_assert_t_enum$_UserType_$3501(value) {\n        if iszero(lt(value, 3)) { panic_error() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_AuditTypes_$1999(value) {\n        if iszero(lt(value, 6)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "432:11762:2:-:0;;;630:54;;;;;;;;672:1;630:54;;;;;;674:1;630:54;;;;;;676:1;630:54;;;;;;678:1;630:54;;;;;;680:1;630:54;;;;;;682:1;630:54;;;;;;;;;;;;;:::i;:::-;;2230:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2312:8;2302:7;;:18;;;;;;;;;;;;;;;;;;2352:20;2330:19;;:42;;;;;;;;;;;;;;;;;;2382;1772:4:16;2393:18:2;;2413:10;2382;;;:42;;:::i;:::-;2230:205;;432:11762;;6588:110:16;6666:25;6677:4;6683:7;6666:10;;;:25;;:::i;:::-;6588:110;;:::o;7025:184::-;7098:33;7123:7;7098:6;:12;7105:4;7098:12;;;;;;;;;;;:20;;:24;;;;;;:33;;;;:::i;:::-;7094:109;;;7179:12;:10;;;:12;;:::i;:::-;7152:40;;7170:7;7152:40;;7164:4;7152:40;;;;;;;;;;7094:109;7025:184;;:::o;6429:150:32:-;6499:4;6522:50;6527:3;:10;;6563:5;6547:23;;6539:32;;6522:4;;;:50;;:::i;:::-;6515:57;;6429:150;;;;:::o;598:104:30:-;651:15;685:10;678:17;;598:104;:::o;1640:404:32:-;1703:4;1724:21;1734:3;1739:5;1724:9;;;:21;;:::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;3805:127::-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;432:11762:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:143:35:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:175::-;;260:6;254:13;245:22;;276:49;319:5;276:49;:::i;:::-;235:96;;;;:::o;337:472::-;;;489:2;477:9;468:7;464:23;460:32;457:2;;;505:1;502;495:12;457:2;548:1;573:80;645:7;636:6;625:9;621:22;573:80;:::i;:::-;563:90;;519:144;702:2;728:64;784:7;775:6;764:9;760:22;728:64;:::i;:::-;718:74;;673:129;447:362;;;;;:::o;815:96::-;;881:24;899:5;881:24;:::i;:::-;870:35;;860:51;;;:::o;917:112::-;;999:24;1017:5;999:24;:::i;:::-;988:35;;978:51;;;:::o;1035:126::-;;1112:42;1105:5;1101:54;1090:65;;1080:81;;;:::o;1167:122::-;1240:24;1258:5;1240:24;:::i;:::-;1233:5;1230:35;1220:2;;1279:1;1276;1269:12;1220:2;1210:79;:::o;1295:154::-;1384:40;1418:5;1384:40;:::i;:::-;1377:5;1374:51;1364:2;;1439:1;1436;1429:12;1364:2;1354:95;:::o;432:11762:2:-;;;;;;;",
  "deployedSourceMap": "432:11762:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7989:279;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5282:1131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9199:581;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;8459:436;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4282:112:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7301:476:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4644:223:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5818:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;630:54:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1113:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3338:1197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11116:1076;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9953:501;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6629:666;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1261:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;3965:136:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2950:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1479:63:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1727:49:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1060:47:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2643:529;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10555:401;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:125:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4724:355:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5101:226:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7989:279:2;8104:14;8121:10;:17;8104:34;;8153:9;8148:114;8172:6;8168:1;:10;8148:114;;;8199:52;8216:10;8227:1;8216:13;;;;;;;;;;;;;;8231:16;8248:1;8231:19;;;;;;;;;;;;;;8199:16;:52::i;:::-;8180:3;;;;;;;8148:114;;;;7989:279;;;:::o;5282:1131::-;5414:16;5381:11;:23;5393:10;5381:23;;;;;;;;;;;;;;;:30;;;;:49;5372:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;5576:1;5516:11;:23;5528:10;5516:23;;;;;;;;;;;;;;;5540:16;5516:41;;;;;;;;;;;;;;;;;;:56;;;:61;5507:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;5731:10;5676:65;;:11;:23;5688:10;5676:23;;;;;;;;;;;;;;;5700:16;5676:41;;;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;:65;;;5667:204;;;;;;;;;;;;:::i;:::-;;;;;;;;;5940:15;5881:11;:23;5893:10;5881:23;;;;;;;;;;;;;;;5905:16;5881:41;;;;;;;;;;;;;;;;;;:56;;:74;;;;6034:1;5974:62;;:11;:23;5986:10;5974:23;;;;;;;;;;;;;;;5998:16;5974:41;;;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:62;;;5970:372;;6130:11;:23;6142:10;6130:23;;;;;;;;;;;;;;;6154:16;6130:41;;;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;6122:101;;;6224:10;6122:113;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6093:249;;;;;;;;;;;;:::i;:::-;;;;;;;;;5970:372;6377:10;6358:48;;;6389:16;6358:48;;;;;;:::i;:::-;;;;;;;;5282:1131;;:::o;9199:581::-;9306:4;9312;9334:6;9329:414;9348:11;:23;9360:10;9348:23;;;;;;;;;;;;;;;:30;;;;9344:1;:34;9329:414;;;9440:6;9403:43;;;;;;;;:11;:23;9415:10;9403:23;;;;;;;;;;;;;;;9427:1;9403:26;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:43;;;;;;;;;:113;;;;;9507:9;9467:49;;:11;:23;9479:10;9467:23;;;;;;;;;;;;;;;9491:1;9467:26;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:49;;;9403:113;:168;;;;;9537:11;:23;9549:10;9537:23;;;;;;;;;;;;;;;9561:1;9537:26;;;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;9536:35;9403:168;9399:334;;;9638:1;9594:11;:23;9606:10;9594:23;;;;;;;;;;;;;;;9618:1;9594:26;;;;;;;;;;;;;;;;;;:41;;;:45;9590:90;;;9669:4;9675;9661:19;;;;;;;9590:90;9706:4;9712:5;9698:20;;;;;;;9399:334;9380:3;;;;;9329:414;;;;9760:5;9767;9752:21;;;;9199:581;;;;;;;:::o;8459:436::-;8548:7;8568:13;8597:6;8592:275;8611:11;:23;8623:10;8611:23;;;;;;;;;;;;;;;:30;;;;8607:1;:34;8592:275;;;8703:5;8666:42;;;;;;;;:11;:23;8678:10;8666:23;;;;;;;;;;;;;;;8690:1;8666:26;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:42;;;;;;;;;:109;;;;;8774:1;8729:11;:23;8741:10;8729:23;;;;;;;;;;;;;;;8753:1;8729:26;;;;;;;;;;;;;;;;;;:41;;;:46;;8666:109;:164;;;;;8796:11;:23;8808:10;8796:23;;;;;;;;;;;;;;;8820:1;8796:26;;;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;8795:35;8666:164;8662:194;;;8848:8;;;;;;;8662:194;8643:3;;;;;8592:275;;;;8883:5;8876:12;;;8459:436;;;;:::o;4282:112:16:-;4339:7;4365:6;:12;4372:4;4365:12;;;;;;;;;;;:22;;;4358:29;;4282:112;;;:::o;7301:476:2:-;7401:9;7396:375;7420:11;:23;7432:10;7420:23;;;;;;;;;;;;;;;:30;;;;7416:1;:34;7396:375;;;7511:5;7474:42;;;;;;;;:11;:23;7486:10;7474:23;;;;;;;;;;;;;;;7498:1;7474:26;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:42;;;;;;;;;:113;;;;;7578:9;7537:50;;:11;:23;7549:10;7537:23;;;;;;;;;;;;;;;7561:1;7537:26;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:50;;;7474:113;7470:291;;;7643:4;7606:11;:23;7618:10;7606:23;;;;;;;;;;;;;;;7630:1;7606:26;;;;;;;;;;;;;;;;;;:34;;;:41;;;;;;;;;;;;;;;;;;7686:60;7703:9;7714:5;7729:3;7735:10;7686:60;;;;;;;;;:::i;:::-;;;;;;;;7470:291;7452:3;;;;;;;7396:375;;;;7301:476;;:::o;4644:223:16:-;4727:45;4735:6;:12;4742:4;4735:12;;;;;;;;;;;:22;;;4759:12;:10;:12::i;:::-;4727:7;:45::i;:::-;4719:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:25;4846:4;4852:7;4835:10;:25::i;:::-;4644:223;;:::o;5818:205::-;5915:12;:10;:12::i;:::-;5904:23;;:7;:23;;;5896:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5990:26;6002:4;6008:7;5990:11;:26::i;:::-;5818:205;;:::o;630:54:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1113:44::-;;;;;;;;;;;;;;;;;:::o;3338:1197::-;3434:31;;:::i;:::-;3475:16;3494:7;;;;;;;;;;;:15;;;3510:9;3538:1;3521:19;;;;;;;;3494:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3475:66;;3551:17;3571:7;;;;;;;;;;;:15;;;3587:10;3616:1;3599:19;;;;;;;;3571:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3551:68;;3630:12;3648:48;3667:10;3679:9;3690:5;3648:18;:48::i;:::-;3629:67;;;3716:7;3715:8;3706:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:12;3837:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;3957:11;3948:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;4094:1;4064:7;;;;;;;;;;;:16;;;4081:9;4064:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;4055:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;4212:9;4186:13;:23;;:35;;;;;;;;;;;4262:15;4231:13;:28;;:46;;;;;4315:5;4292:13;:20;;:28;;;;;;;;;;;;;;;;;;;;;;;4356:6;4333:13;:20;;:29;;;;;;;;;;;4372:11;:23;4384:10;4372:23;;;;;;;;;;;;;;;4401:13;4372:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4467:9;4438:90;;;4455:10;4478:5;4518:1;4485:11;:23;4497:10;4485:23;;;;;;;;;;;;;;;:30;;;;:34;4521:6;4438:90;;;;;;;;;:::i;:::-;;;;;;;;3338:1197;;;;;;;:::o;11116:1076::-;11173:31;11221:40;11243:10;11255:5;11221:21;:40::i;:::-;11207:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11173:89;;11272:6;11293;11300:1;11293:8;;11288:286;11307:11;:23;11319:10;11307:23;;;;;;;;;;;;;;;:30;;;;11303:1;:34;11288:286;;;11399:5;11362:42;;;;;;;;:11;:23;11374:10;11362:23;;;;;;;;;;;;;;;11386:1;11362:26;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:42;;;;;;;;;:91;;;;;11452:1;11408:11;:23;11420:10;11408:23;;;;;;;;;;;;;;;11432:1;11408:26;;;;;;;;;;;;;;;;;;:41;;;:45;11362:91;11358:206;;;11492:11;:23;11504:10;11492:23;;;;;;;;;;;;;;;11516:1;11492:26;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;11472:14;11487:1;11472:17;;;;;;;;;;;;;:56;;;;;;;;;;;11546:3;;;;;;;11358:206;11339:3;;;;;11288:286;;;;11596:21;11626:5;11618:14;;;;;;;;11596:37;;;;;;;;;;;;;;;;11591:1;:42;;11583:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;11722:21;11759:19;;;;;;;;;;;11746:46;;;11801:5;11793:14;;;;;;;;11810;11826:10;11746:92;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11722:116;;11848:10;:22;11859:10;11848:22;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;11954:13;11887:10;:22;11898:10;11887:22;;;;;;;;;;;;;;;11942:1;11910:10;:22;11921:10;11910:22;;;;;;;;;;;;;;;:29;;;;:33;11887:57;;;;;;;;;;;;;;;:64;;;:80;;;;;;;;;;;;;;;;;;12044:5;11977:10;:22;11988:10;11977:22;;;;;;;;;;;;;;;12032:1;12000:10;:22;12011:10;12000:22;;;;;;;;;;;;;;;:29;;;;:33;11977:57;;;;;;;;;;;;;;;:64;;;:72;;;;;;;;;;;;;;;;;;;;;;;;12095:5;12087:14;;;;;;;;12060:9;:24;12070:13;12060:24;;;;;;;;;;;;;;;:41;;;;12131:10;12117:59;;;12143:13;12169:5;12117:59;;;;;;;:::i;:::-;;;;;;;;11116:1076;;;;:::o;9953:501::-;10017:16;10035;10063:23;10103:10;:22;10114:10;10103:22;;;;;;;;;;;;;;;:29;;;;10089:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10063:70;;10143:23;10183:10;:22;10194:10;10183:22;;;;;;;;;;;;;;;:29;;;;10169:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10143:70;;10229:9;10224:191;10244:10;:22;10255:10;10244:22;;;;;;;;;;;;;;;:29;;;;10240:1;:33;10224:191;;;10305:10;:22;10316:10;10305:22;;;;;;;;;;;;;;;10328:1;10305:25;;;;;;;;;;;;;;;:32;;;;;;;;;;;;10293:6;10300:1;10293:9;;;;;;;;;;;;;:44;;;;;;;;;;;10371:10;:22;10382:10;10371:22;;;;;;;;;;;;;;;10394:1;10371:25;;;;;;;;;;;;;;;:32;;;;;;;;;;;;10363:41;;;;;;;;10351:6;10358:1;10351:9;;;;;;;;;;;;;:53;;;;;10275:3;;;;;;;10224:191;;;;10432:6;10440;10424:23;;;;;;9953:501;;;:::o;6629:666::-;6745:9;6740:549;6764:11;:23;6776:10;6764:23;;;;;;;;;;;;;;;:30;;;;6760:1;:34;6740:549;;;6855:5;6818:42;;;;;;;;:11;:23;6830:10;6818:23;;;;;;;;;;;;;;;6842:1;6818:26;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:42;;;;;;;;;:113;;;;;6922:9;6881:50;;:11;:23;6893:10;6881:23;;;;;;;;;;;;;;;6905:1;6881:26;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:50;;;6818:113;6814:465;;;6987:4;6950:11;:23;6962:10;6950:23;;;;;;;;;;;;;;;6974:1;6950:26;;;;;;;;;;;;;;;;;;:34;;;:41;;;;;;;;;;;;;;;;;;7025:6;7017:31;;;7049:9;7060:10;7017:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7009:178;;;;;;;;;;;;:::i;:::-;;;;;;;;;7210:54;7227:9;7238:5;7245:6;7253:10;7210:54;;;;;;;;;:::i;:::-;;;;;;;;6814:465;6796:3;;;;;;;6740:549;;;;6629:666;;;:::o;1261:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3965:136:16:-;4038:7;4064:30;4088:5;4064:6;:12;4071:4;4064:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;4057:37;;3965:136;;;;:::o;2950:137::-;3019:4;3042:38;3072:7;3042:6;:12;3049:4;3042:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;3035:45;;2950:137;;;;:::o;1479:63:2:-;1518:24;1479:63;:::o;1727:49:16:-;1772:4;1727:49;;;:::o;1060:47:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2643:529::-;2782:1;2756:22;:27;;2748:138;;;;;;;;;;;;:::i;:::-;;;;;;;;;2914:1;2904:6;:11;;:25;;;;;2928:1;2919:6;:10;;2904:25;2896:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;3056:22;3024:21;3046:6;3024:29;;;;;;;;;;;;;;;:54;;;;3093:72;3122:22;3157:6;3146:18;;;;;;;;3093:72;;;;;;;:::i;:::-;;;;;;;;2643:529;;:::o;10555:401::-;10615:7;10637:24;10667:25;10681:10;10667:13;:25::i;:::-;10636:56;;;10703:32;10752:9;10747:157;10766:7;:14;10763:1;:17;10747:157;;;10868:7;10876:1;10868:10;;;;;;;;;;;;;;10860:42;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10830:27;:74;10800:104;;10782:3;;;;;;;10747:157;;;;10922:27;10915:34;;;;10555:401;:::o;3255:125:16:-;3318:7;3344:29;:6;:12;3351:4;3344:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3337:36;;3255:125;;;:::o;4724:355:2:-;4836:14;4853:9;:16;4836:33;;4897:3;4887:6;:13;;4879:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;4972:9;4967:106;4991:6;4987:1;:10;4967:106;;;5018:44;5034:9;5044:1;5034:12;;;;;;;;;;;;;;5048:5;5055:6;5018:15;:44::i;:::-;4999:3;;;;;;;4967:106;;;;4724:355;;;;:::o;5101:226:16:-;5185:45;5193:6;:12;5200:4;5193:12;;;;;;;;;;;:22;;;5217:12;:10;:12::i;:::-;5185:7;:45::i;:::-;5177:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5294:26;5306:4;5312:7;5294:11;:26::i;:::-;5101:226;;:::o;6429:150:32:-;6499:4;6522:50;6527:3;:10;;6563:5;6547:23;;6539:32;;6522:4;:50::i;:::-;6515:57;;6429:150;;;;:::o;598:104:30:-;651:15;685:10;678:17;;598:104;:::o;7025:184:16:-;7098:33;7123:7;7098:6;:12;7105:4;7098:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;7152:40;;7170:7;7152:40;;7164:4;7152:40;;;;;;;;;;7094:109;7025:184;;:::o;7215:188::-;7289:36;7317:7;7289:6;:12;7296:4;7289:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;7285:112;;;7373:12;:10;:12::i;:::-;7346:40;;7364:7;7346:40;;7358:4;7346:40;;;;;;;;;;7285:112;7215:188;;:::o;7677:156:32:-;7751:7;7801:22;7805:3;:10;;7817:5;7801:3;:22::i;:::-;7793:31;;7770:56;;7677:156;;;;:::o;6984:165::-;7064:4;7087:55;7097:3;:10;;7133:5;7117:23;;7109:32;;7087:9;:55::i;:::-;7080:62;;6984:165;;;;:::o;7230:115::-;7293:7;7319:19;7327:3;:10;;7319:7;:19::i;:::-;7312:26;;7230:115;;;:::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;6747:156::-;6820:4;6843:53;6851:3;:10;;6887:5;6871:23;;6863:32;;6843:7;:53::i;:::-;6836:60;;6747:156;;;;:::o;4452:201::-;4519:7;4567:5;4546:3;:11;;:18;;;;:26;4538:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;3805:127::-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;4013:107::-;4069:7;4095:3;:11;;:18;;;;4088:25;;4013:107;;;:::o;2212:1512::-;2278:4;2394:18;2415:3;:12;;:19;2428:5;2415:19;;;;;;;;;;;;2394:40;;2463:1;2449:10;:15;2445:1273;;2806:21;2843:1;2830:10;:14;2806:38;;2858:17;2899:1;2878:3;:11;;:18;;;;:22;2858:42;;3140:17;3160:3;:11;;3172:9;3160:22;;;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;:38;;;;3420:1;3404:13;:17;3378:3;:12;;:23;3391:9;3378:23;;;;;;;;;;;:43;;;;3527:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;2212:1512;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;24:622:35:-;;145:80;160:64;217:6;160:64;:::i;:::-;145:80;:::i;:::-;136:89;;245:5;273:6;266:5;259:21;299:4;292:5;288:16;281:23;;324:6;374:3;366:4;358:6;354:17;349:3;345:27;342:36;339:2;;;391:1;388;381:12;339:2;419:1;404:236;429:6;426:1;423:13;404:236;;;496:3;524:37;557:3;545:10;524:37;:::i;:::-;519:3;512:50;591:4;586:3;582:14;575:21;;625:4;620:3;616:14;609:21;;464:176;451:1;448;444:9;439:14;;404:236;;;408:14;126:520;;;;;;;:::o;669:622::-;;790:80;805:64;862:6;805:64;:::i;:::-;790:80;:::i;:::-;781:89;;890:5;918:6;911:5;904:21;944:4;937:5;933:16;926:23;;969:6;1019:3;1011:4;1003:6;999:17;994:3;990:27;987:36;984:2;;;1036:1;1033;1026:12;984:2;1064:1;1049:236;1074:6;1071:1;1068:13;1049:236;;;1141:3;1169:37;1202:3;1190:10;1169:37;:::i;:::-;1164:3;1157:50;1236:4;1231:3;1227:14;1220:21;;1270:4;1265:3;1261:14;1254:21;;1109:176;1096:1;1093;1089:9;1084:14;;1049:236;;;1053:14;771:520;;;;;;;:::o;1297:139::-;;1381:6;1368:20;1359:29;;1397:33;1424:5;1397:33;:::i;:::-;1349:87;;;;:::o;1442:143::-;;1530:6;1524:13;1515:22;;1546:33;1573:5;1546:33;:::i;:::-;1505:80;;;;:::o;1608:303::-;;1728:3;1721:4;1713:6;1709:17;1705:27;1695:2;;1746:1;1743;1736:12;1695:2;1786:6;1773:20;1811:94;1901:3;1893:6;1886:4;1878:6;1874:17;1811:94;:::i;:::-;1802:103;;1685:226;;;;;:::o;1934:303::-;;2054:3;2047:4;2039:6;2035:17;2031:27;2021:2;;2072:1;2069;2062:12;2021:2;2112:6;2099:20;2137:94;2227:3;2219:6;2212:4;2204:6;2200:17;2137:94;:::i;:::-;2128:103;;2011:226;;;;;:::o;2243:137::-;;2328:6;2322:13;2313:22;;2344:30;2368:5;2344:30;:::i;:::-;2303:77;;;;:::o;2386:139::-;;2470:6;2457:20;2448:29;;2486:33;2513:5;2486:33;:::i;:::-;2438:87;;;;:::o;2531:169::-;;2630:6;2617:20;2608:29;;2646:48;2688:5;2646:48;:::i;:::-;2598:102;;;;:::o;2706:139::-;;2790:6;2777:20;2768:29;;2806:33;2833:5;2806:33;:::i;:::-;2758:87;;;;:::o;2851:143::-;;2939:6;2933:13;2924:22;;2955:33;2982:5;2955:33;:::i;:::-;2914:80;;;;:::o;3000:262::-;;3108:2;3096:9;3087:7;3083:23;3079:32;3076:2;;;3124:1;3121;3114:12;3076:2;3167:1;3192:53;3237:7;3228:6;3217:9;3213:22;3192:53;:::i;:::-;3182:63;;3138:117;3066:196;;;;:::o;3268:284::-;;3387:2;3375:9;3366:7;3362:23;3358:32;3355:2;;;3403:1;3400;3393:12;3355:2;3446:1;3471:64;3527:7;3518:6;3507:9;3503:22;3471:64;:::i;:::-;3461:74;;3417:128;3345:207;;;;:::o;3558:582::-;;;;3715:2;3703:9;3694:7;3690:23;3686:32;3683:2;;;3731:1;3728;3721:12;3683:2;3774:1;3799:53;3844:7;3835:6;3824:9;3820:22;3799:53;:::i;:::-;3789:63;;3745:117;3901:2;3927:53;3972:7;3963:6;3952:9;3948:22;3927:53;:::i;:::-;3917:63;;3872:118;4029:2;4055:68;4115:7;4106:6;4095:9;4091:22;4055:68;:::i;:::-;4045:78;;4000:133;3673:467;;;;;:::o;4146:437::-;;;4286:2;4274:9;4265:7;4261:23;4257:32;4254:2;;;4302:1;4299;4292:12;4254:2;4345:1;4370:53;4415:7;4406:6;4395:9;4391:22;4370:53;:::i;:::-;4360:63;;4316:117;4472:2;4498:68;4558:7;4549:6;4538:9;4534:22;4498:68;:::i;:::-;4488:78;;4443:133;4244:339;;;;;:::o;4589:582::-;;;;4746:2;4734:9;4725:7;4721:23;4717:32;4714:2;;;4762:1;4759;4752:12;4714:2;4805:1;4830:53;4875:7;4866:6;4855:9;4851:22;4830:53;:::i;:::-;4820:63;;4776:117;4932:2;4958:68;5018:7;5009:6;4998:9;4994:22;4958:68;:::i;:::-;4948:78;;4903:133;5075:2;5101:53;5146:7;5137:6;5126:9;5122:22;5101:53;:::i;:::-;5091:63;;5046:118;4704:467;;;;;:::o;5177:407::-;;;5302:2;5290:9;5281:7;5277:23;5273:32;5270:2;;;5318:1;5315;5308:12;5270:2;5361:1;5386:53;5431:7;5422:6;5411:9;5407:22;5386:53;:::i;:::-;5376:63;;5332:117;5488:2;5514:53;5559:7;5550:6;5539:9;5535:22;5514:53;:::i;:::-;5504:63;;5459:118;5260:324;;;;;:::o;5590:693::-;;;5765:2;5753:9;5744:7;5740:23;5736:32;5733:2;;;5781:1;5778;5771:12;5733:2;5852:1;5841:9;5837:17;5824:31;5882:18;5874:6;5871:30;5868:2;;;5914:1;5911;5904:12;5868:2;5942:78;6012:7;6003:6;5992:9;5988:22;5942:78;:::i;:::-;5932:88;;5795:235;6097:2;6086:9;6082:18;6069:32;6128:18;6120:6;6117:30;6114:2;;;6160:1;6157;6150:12;6114:2;6188:78;6258:7;6249:6;6238:9;6234:22;6188:78;:::i;:::-;6178:88;;6040:236;5723:560;;;;;:::o;6289:725::-;;;;6471:2;6459:9;6450:7;6446:23;6442:32;6439:2;;;6487:1;6484;6477:12;6439:2;6558:1;6547:9;6543:17;6530:31;6588:18;6580:6;6577:30;6574:2;;;6620:1;6617;6610:12;6574:2;6648:78;6718:7;6709:6;6698:9;6694:22;6648:78;:::i;:::-;6638:88;;6501:235;6775:2;6801:68;6861:7;6852:6;6841:9;6837:22;6801:68;:::i;:::-;6791:78;;6746:133;6918:2;6944:53;6989:7;6980:6;6969:9;6965:22;6944:53;:::i;:::-;6934:63;;6889:118;6429:585;;;;;:::o;7020:278::-;;7136:2;7124:9;7115:7;7111:23;7107:32;7104:2;;;7152:1;7149;7142:12;7104:2;7195:1;7220:61;7273:7;7264:6;7253:9;7249:22;7220:61;:::i;:::-;7210:71;;7166:125;7094:204;;;;:::o;7304:262::-;;7412:2;7400:9;7391:7;7387:23;7383:32;7380:2;;;7428:1;7425;7418:12;7380:2;7471:1;7496:53;7541:7;7532:6;7521:9;7517:22;7496:53;:::i;:::-;7486:63;;7442:117;7370:196;;;;:::o;7572:407::-;;;7697:2;7685:9;7676:7;7672:23;7668:32;7665:2;;;7713:1;7710;7703:12;7665:2;7756:1;7781:53;7826:7;7817:6;7806:9;7802:22;7781:53;:::i;:::-;7771:63;;7727:117;7883:2;7909:53;7954:7;7945:6;7934:9;7930:22;7909:53;:::i;:::-;7899:63;;7854:118;7655:324;;;;;:::o;7985:407::-;;;8110:2;8098:9;8089:7;8085:23;8081:32;8078:2;;;8126:1;8123;8116:12;8078:2;8169:1;8194:53;8239:7;8230:6;8219:9;8215:22;8194:53;:::i;:::-;8184:63;;8140:117;8296:2;8322:53;8367:7;8358:6;8347:9;8343:22;8322:53;:::i;:::-;8312:63;;8267:118;8068:324;;;;;:::o;8398:292::-;;8521:2;8509:9;8500:7;8496:23;8492:32;8489:2;;;8537:1;8534;8527:12;8489:2;8580:1;8605:68;8665:7;8656:6;8645:9;8641:22;8605:68;:::i;:::-;8595:78;;8551:132;8479:211;;;;:::o;8696:262::-;;8804:2;8792:9;8783:7;8779:23;8775:32;8772:2;;;8820:1;8817;8810:12;8772:2;8863:1;8888:53;8933:7;8924:6;8913:9;8909:22;8888:53;:::i;:::-;8878:63;;8834:117;8762:196;;;;:::o;8964:284::-;;9083:2;9071:9;9062:7;9058:23;9054:32;9051:2;;;9099:1;9096;9089:12;9051:2;9142:1;9167:64;9223:7;9214:6;9203:9;9199:22;9167:64;:::i;:::-;9157:74;;9113:128;9041:207;;;;:::o;9254:407::-;;;9379:2;9367:9;9358:7;9354:23;9350:32;9347:2;;;9395:1;9392;9385:12;9347:2;9438:1;9463:53;9508:7;9499:6;9488:9;9484:22;9463:53;:::i;:::-;9453:63;;9409:117;9565:2;9591:53;9636:7;9627:6;9616:9;9612:22;9591:53;:::i;:::-;9581:63;;9536:118;9337:324;;;;;:::o;9667:179::-;;9757:46;9799:3;9791:6;9757:46;:::i;:::-;9835:4;9830:3;9826:14;9812:28;;9747:99;;;;:::o;9852:179::-;;9942:46;9984:3;9976:6;9942:46;:::i;:::-;10020:4;10015:3;10011:14;9997:28;;9932:99;;;;:::o;10037:147::-;10132:45;10171:5;10132:45;:::i;:::-;10127:3;10120:58;10110:74;;:::o;10190:108::-;10267:24;10285:5;10267:24;:::i;:::-;10262:3;10255:37;10245:53;;:::o;10304:118::-;10391:24;10409:5;10391:24;:::i;:::-;10386:3;10379:37;10369:53;;:::o;10458:732::-;;10606:54;10654:5;10606:54;:::i;:::-;10676:86;10755:6;10750:3;10676:86;:::i;:::-;10669:93;;10786:56;10836:5;10786:56;:::i;:::-;10865:7;10896:1;10881:284;10906:6;10903:1;10900:13;10881:284;;;10982:6;10976:13;11009:63;11068:3;11053:13;11009:63;:::i;:::-;11002:70;;11095:60;11148:6;11095:60;:::i;:::-;11085:70;;10941:224;10928:1;10925;10921:9;10916:14;;10881:284;;;10885:14;11181:3;11174:10;;10582:608;;;;;;;:::o;11226:732::-;;11374:54;11422:5;11374:54;:::i;:::-;11444:86;11523:6;11518:3;11444:86;:::i;:::-;11437:93;;11554:56;11604:5;11554:56;:::i;:::-;11633:7;11664:1;11649:284;11674:6;11671:1;11668:13;11649:284;;;11750:6;11744:13;11777:63;11836:3;11821:13;11777:63;:::i;:::-;11770:70;;11863:60;11916:6;11863:60;:::i;:::-;11853:70;;11709:224;11696:1;11693;11689:9;11684:14;;11649:284;;;11653:14;11949:3;11942:10;;11350:608;;;;;;;:::o;11964:109::-;12045:21;12060:5;12045:21;:::i;:::-;12040:3;12033:34;12023:50;;:::o;12079:118::-;12166:24;12184:5;12166:24;:::i;:::-;12161:3;12154:37;12144:53;;:::o;12203:157::-;12303:50;12347:5;12303:50;:::i;:::-;12298:3;12291:63;12281:79;;:::o;12366:153::-;12464:48;12506:5;12464:48;:::i;:::-;12459:3;12452:61;12442:77;;:::o;12525:443::-;;12688:67;12752:2;12747:3;12688:67;:::i;:::-;12681:74;;12785:34;12781:1;12776:3;12772:11;12765:55;12851:34;12846:2;12841:3;12837:12;12830:56;12917:15;12912:2;12907:3;12903:12;12896:37;12959:2;12954:3;12950:12;12943:19;;12671:297;;;:::o;12974:499::-;;13137:67;13201:2;13196:3;13137:67;:::i;:::-;13130:74;;13234:34;13230:1;13225:3;13221:11;13214:55;13300:34;13295:2;13290:3;13286:12;13279:56;13366:34;13361:2;13356:3;13352:12;13345:56;13432:4;13427:2;13422:3;13418:12;13411:26;13463:3;13458;13454:13;13447:20;;13120:353;;;:::o;13479:394::-;;13642:67;13706:2;13701:3;13642:67;:::i;:::-;13635:74;;13739:34;13735:1;13730:3;13726:11;13719:55;13805:32;13800:2;13795:3;13791:12;13784:54;13864:2;13859:3;13855:12;13848:19;;13625:248;;;:::o;13879:439::-;;14042:67;14106:2;14101:3;14042:67;:::i;:::-;14035:74;;14139:34;14135:1;14130:3;14126:11;14119:55;14205:34;14200:2;14195:3;14191:12;14184:56;14271:11;14266:2;14261:3;14257:12;14250:33;14309:2;14304:3;14300:12;14293:19;;14025:293;;;:::o;14324:445::-;;14487:67;14551:2;14546:3;14487:67;:::i;:::-;14480:74;;14584:34;14580:1;14575:3;14571:11;14564:55;14650:34;14645:2;14640:3;14636:12;14629:56;14716:17;14711:2;14706:3;14702:12;14695:39;14760:2;14755:3;14751:12;14744:19;;14470:299;;;:::o;14775:441::-;;14938:67;15002:2;14997:3;14938:67;:::i;:::-;14931:74;;15035:34;15031:1;15026:3;15022:11;15015:55;15101:34;15096:2;15091:3;15087:12;15080:56;15167:13;15162:2;15157:3;15153:12;15146:35;15207:2;15202:3;15198:12;15191:19;;14921:295;;;:::o;15222:392::-;;15385:67;15449:2;15444:3;15385:67;:::i;:::-;15378:74;;15482:34;15478:1;15473:3;15469:11;15462:55;15548:30;15543:2;15538:3;15534:12;15527:52;15605:2;15600:3;15596:12;15589:19;;15368:246;;;:::o;15620:438::-;;15783:67;15847:2;15842:3;15783:67;:::i;:::-;15776:74;;15880:34;15876:1;15871:3;15867:11;15860:55;15946:34;15941:2;15936:3;15932:12;15925:56;16012:10;16007:2;16002:3;15998:12;15991:32;16049:2;16044:3;16040:12;16033:19;;15766:292;;;:::o;16064:384::-;;16227:67;16291:2;16286:3;16227:67;:::i;:::-;16220:74;;16324:34;16320:1;16315:3;16311:11;16304:55;16390:22;16385:2;16380:3;16376:12;16369:44;16439:2;16434:3;16430:12;16423:19;;16210:238;;;:::o;16454:498::-;;16617:67;16681:2;16676:3;16617:67;:::i;:::-;16610:74;;16714:34;16710:1;16705:3;16701:11;16694:55;16780:34;16775:2;16770:3;16766:12;16759:56;16846:34;16841:2;16836:3;16832:12;16825:56;16912:3;16907:2;16902:3;16898:12;16891:25;16942:3;16937;16933:13;16926:20;;16600:352;;;:::o;16958:452::-;;17121:67;17185:2;17180:3;17121:67;:::i;:::-;17114:74;;17218:34;17214:1;17209:3;17205:11;17198:55;17284:34;17279:2;17274:3;17270:12;17263:56;17350:24;17345:2;17340:3;17336:12;17329:46;17401:2;17396:3;17392:12;17385:19;;17104:306;;;:::o;17416:527::-;;17579:68;17643:3;17638;17579:68;:::i;:::-;17572:75;;17677:34;17673:1;17668:3;17664:11;17657:55;17743:34;17738:2;17733:3;17729:12;17722:56;17809:34;17804:2;17799:3;17795:12;17788:56;17875:31;17870:2;17865:3;17861:12;17854:53;17933:3;17928;17924:13;17917:20;;17562:381;;;:::o;17949:441::-;;18112:67;18176:2;18171:3;18112:67;:::i;:::-;18105:74;;18209:34;18205:1;18200:3;18196:11;18189:55;18275:34;18270:2;18265:3;18261:12;18254:56;18341:13;18336:2;18331:3;18327:12;18320:35;18381:2;18376:3;18372:12;18365:19;;18095:295;;;:::o;18396:108::-;18473:24;18491:5;18473:24;:::i;:::-;18468:3;18461:37;18451:53;;:::o;18510:118::-;18597:24;18615:5;18597:24;:::i;:::-;18592:3;18585:37;18575:53;;:::o;18634:222::-;;18765:2;18754:9;18750:18;18742:26;;18778:71;18846:1;18835:9;18831:17;18822:6;18778:71;:::i;:::-;18732:124;;;;:::o;18862:238::-;;19001:2;18990:9;18986:18;18978:26;;19014:79;19090:1;19079:9;19075:17;19066:6;19014:79;:::i;:::-;18968:132;;;;:::o;19106:595::-;;19342:3;19331:9;19327:19;19319:27;;19356:79;19432:1;19421:9;19417:17;19408:6;19356:79;:::i;:::-;19445:85;19526:2;19515:9;19511:18;19502:6;19445:85;:::i;:::-;19540:72;19608:2;19597:9;19593:18;19584:6;19540:72;:::i;:::-;19622;19690:2;19679:9;19675:18;19666:6;19622:72;:::i;:::-;19309:392;;;;;;;:::o;19707:370::-;;19885:2;19874:9;19870:18;19862:26;;19898:79;19974:1;19963:9;19959:17;19950:6;19898:79;:::i;:::-;19987:83;20066:2;20055:9;20051:18;20042:6;19987:83;:::i;:::-;19852:225;;;;;:::o;20083:348::-;;20250:2;20239:9;20235:18;20227:26;;20263:71;20331:1;20320:9;20316:17;20307:6;20263:71;:::i;:::-;20344:80;20420:2;20409:9;20405:18;20396:6;20344:80;:::i;:::-;20217:214;;;;;:::o;20437:358::-;;20609:2;20598:9;20594:18;20586:26;;20622:71;20690:1;20679:9;20675:17;20666:6;20622:71;:::i;:::-;20703:85;20784:2;20773:9;20769:18;20760:6;20703:85;:::i;:::-;20576:219;;;;;:::o;20801:611::-;;21045:3;21034:9;21030:19;21022:27;;21059:71;21127:1;21116:9;21112:17;21103:6;21059:71;:::i;:::-;21140:85;21221:2;21210:9;21206:18;21197:6;21140:85;:::i;:::-;21235:80;21311:2;21300:9;21296:18;21287:6;21235:80;:::i;:::-;21325;21401:2;21390:9;21386:18;21377:6;21325:80;:::i;:::-;21012:400;;;;;;;:::o;21418:595::-;;21654:3;21643:9;21639:19;21631:27;;21668:71;21736:1;21725:9;21721:17;21712:6;21668:71;:::i;:::-;21749:85;21830:2;21819:9;21815:18;21806:6;21749:85;:::i;:::-;21844:72;21912:2;21901:9;21897:18;21888:6;21844:72;:::i;:::-;21926:80;22002:2;21991:9;21987:18;21978:6;21926:80;:::i;:::-;21621:392;;;;;;;:::o;22019:354::-;;22189:2;22178:9;22174:18;22166:26;;22202:71;22270:1;22259:9;22255:17;22246:6;22202:71;:::i;:::-;22283:83;22362:2;22351:9;22347:18;22338:6;22283:83;:::i;:::-;22156:217;;;;;:::o;22379:789::-;;22657:3;22646:9;22642:19;22634:27;;22671:71;22739:1;22728:9;22724:17;22715:6;22671:71;:::i;:::-;22752:72;22820:2;22809:9;22805:18;22796:6;22752:72;:::i;:::-;22834;22902:2;22891:9;22887:18;22878:6;22834:72;:::i;:::-;22916:85;22997:2;22986:9;22982:18;22973:6;22916:85;:::i;:::-;23011:73;23079:3;23068:9;23064:19;23055:6;23011:73;:::i;:::-;23094:67;23156:3;23145:9;23141:19;23132:6;23094:67;:::i;:::-;22624:544;;;;;;;;;:::o;23174:634::-;;23433:2;23422:9;23418:18;23410:26;;23482:9;23476:4;23472:20;23468:1;23457:9;23453:17;23446:47;23510:108;23613:4;23604:6;23510:108;:::i;:::-;23502:116;;23665:9;23659:4;23655:20;23650:2;23639:9;23635:18;23628:48;23693:108;23796:4;23787:6;23693:108;:::i;:::-;23685:116;;23400:408;;;;;:::o;23814:210::-;;23939:2;23928:9;23924:18;23916:26;;23952:65;24014:1;24003:9;23999:17;23990:6;23952:65;:::i;:::-;23906:118;;;;:::o;24030:308::-;;24177:2;24166:9;24162:18;24154:26;;24190:65;24252:1;24241:9;24237:17;24228:6;24190:65;:::i;:::-;24265:66;24327:2;24316:9;24312:18;24303:6;24265:66;:::i;:::-;24144:194;;;;;:::o;24344:222::-;;24475:2;24464:9;24460:18;24452:26;;24488:71;24556:1;24545:9;24541:17;24532:6;24488:71;:::i;:::-;24442:124;;;;:::o;24572:419::-;;24776:2;24765:9;24761:18;24753:26;;24825:9;24819:4;24815:20;24811:1;24800:9;24796:17;24789:47;24853:131;24979:4;24853:131;:::i;:::-;24845:139;;24743:248;;;:::o;24997:419::-;;25201:2;25190:9;25186:18;25178:26;;25250:9;25244:4;25240:20;25236:1;25225:9;25221:17;25214:47;25278:131;25404:4;25278:131;:::i;:::-;25270:139;;25168:248;;;:::o;25422:419::-;;25626:2;25615:9;25611:18;25603:26;;25675:9;25669:4;25665:20;25661:1;25650:9;25646:17;25639:47;25703:131;25829:4;25703:131;:::i;:::-;25695:139;;25593:248;;;:::o;25847:419::-;;26051:2;26040:9;26036:18;26028:26;;26100:9;26094:4;26090:20;26086:1;26075:9;26071:17;26064:47;26128:131;26254:4;26128:131;:::i;:::-;26120:139;;26018:248;;;:::o;26272:419::-;;26476:2;26465:9;26461:18;26453:26;;26525:9;26519:4;26515:20;26511:1;26500:9;26496:17;26489:47;26553:131;26679:4;26553:131;:::i;:::-;26545:139;;26443:248;;;:::o;26697:419::-;;26901:2;26890:9;26886:18;26878:26;;26950:9;26944:4;26940:20;26936:1;26925:9;26921:17;26914:47;26978:131;27104:4;26978:131;:::i;:::-;26970:139;;26868:248;;;:::o;27122:419::-;;27326:2;27315:9;27311:18;27303:26;;27375:9;27369:4;27365:20;27361:1;27350:9;27346:17;27339:47;27403:131;27529:4;27403:131;:::i;:::-;27395:139;;27293:248;;;:::o;27547:419::-;;27751:2;27740:9;27736:18;27728:26;;27800:9;27794:4;27790:20;27786:1;27775:9;27771:17;27764:47;27828:131;27954:4;27828:131;:::i;:::-;27820:139;;27718:248;;;:::o;27972:419::-;;28176:2;28165:9;28161:18;28153:26;;28225:9;28219:4;28215:20;28211:1;28200:9;28196:17;28189:47;28253:131;28379:4;28253:131;:::i;:::-;28245:139;;28143:248;;;:::o;28397:419::-;;28601:2;28590:9;28586:18;28578:26;;28650:9;28644:4;28640:20;28636:1;28625:9;28621:17;28614:47;28678:131;28804:4;28678:131;:::i;:::-;28670:139;;28568:248;;;:::o;28822:419::-;;29026:2;29015:9;29011:18;29003:26;;29075:9;29069:4;29065:20;29061:1;29050:9;29046:17;29039:47;29103:131;29229:4;29103:131;:::i;:::-;29095:139;;28993:248;;;:::o;29247:419::-;;29451:2;29440:9;29436:18;29428:26;;29500:9;29494:4;29490:20;29486:1;29475:9;29471:17;29464:47;29528:131;29654:4;29528:131;:::i;:::-;29520:139;;29418:248;;;:::o;29672:419::-;;29876:2;29865:9;29861:18;29853:26;;29925:9;29919:4;29915:20;29911:1;29900:9;29896:17;29889:47;29953:131;30079:4;29953:131;:::i;:::-;29945:139;;29843:248;;;:::o;30097:222::-;;30228:2;30217:9;30213:18;30205:26;;30241:71;30309:1;30298:9;30294:17;30285:6;30241:71;:::i;:::-;30195:124;;;;:::o;30325:609::-;;30570:2;30559:9;30555:18;30547:26;;30583:71;30651:1;30640:9;30636:17;30627:6;30583:71;:::i;:::-;30701:9;30695:4;30691:20;30686:2;30675:9;30671:18;30664:48;30729:108;30832:4;30823:6;30729:108;:::i;:::-;30721:116;;30847:80;30923:2;30912:9;30908:18;30899:6;30847:80;:::i;:::-;30537:397;;;;;;:::o;30940:358::-;;31112:2;31101:9;31097:18;31089:26;;31125:71;31193:1;31182:9;31178:17;31169:6;31125:71;:::i;:::-;31206:85;31287:2;31276:9;31272:18;31263:6;31206:85;:::i;:::-;31079:219;;;;;:::o;31304:278::-;;31370:2;31364:9;31354:19;;31412:4;31404:6;31400:17;31519:6;31507:10;31504:22;31483:18;31471:10;31468:34;31465:62;31462:2;;;31530:13;;:::i;:::-;31462:2;31565:10;31561:2;31554:22;31344:238;;;;:::o;31588:306::-;;31755:18;31747:6;31744:30;31741:2;;;31777:13;;:::i;:::-;31741:2;31822:4;31814:6;31810:17;31802:25;;31882:4;31876;31872:15;31864:23;;31670:224;;;:::o;31900:306::-;;32067:18;32059:6;32056:30;32053:2;;;32089:13;;:::i;:::-;32053:2;32134:4;32126:6;32122:17;32114:25;;32194:4;32188;32184:15;32176:23;;31982:224;;;:::o;32212:132::-;;32302:3;32294:11;;32332:4;32327:3;32323:14;32315:22;;32284:60;;;:::o;32350:132::-;;32440:3;32432:11;;32470:4;32465:3;32461:14;32453:22;;32422:60;;;:::o;32488:114::-;;32589:5;32583:12;32573:22;;32562:40;;;:::o;32608:114::-;;32709:5;32703:12;32693:22;;32682:40;;;:::o;32728:113::-;;32830:4;32825:3;32821:14;32813:22;;32803:38;;;:::o;32847:113::-;;32949:4;32944:3;32940:14;32932:22;;32922:38;;;:::o;32966:184::-;;33099:6;33094:3;33087:19;33139:4;33134:3;33130:14;33115:29;;33077:73;;;;:::o;33156:184::-;;33289:6;33284:3;33277:19;33329:4;33324:3;33320:14;33305:29;;33267:73;;;;:::o;33346:169::-;;33464:6;33459:3;33452:19;33504:4;33499:3;33495:14;33480:29;;33442:73;;;;:::o;33521:96::-;;33587:24;33605:5;33587:24;:::i;:::-;33576:35;;33566:51;;;:::o;33623:90::-;;33700:5;33693:13;33686:21;33675:32;;33665:48;;;:::o;33719:77::-;;33785:5;33774:16;;33764:32;;;:::o;33802:141::-;;33883:5;33872:16;;33889:48;33931:5;33889:48;:::i;:::-;33862:81;;;:::o;33949:137::-;;34028:5;34017:16;;34034:46;34074:5;34034:46;:::i;:::-;34007:79;;;:::o;34092:126::-;;34169:42;34162:5;34158:54;34147:65;;34137:81;;;:::o;34224:77::-;;34290:5;34279:16;;34269:32;;;:::o;34307:134::-;;34398:37;34429:5;34398:37;:::i;:::-;34385:50;;34375:66;;;:::o;34447:141::-;;34543:39;34576:5;34543:39;:::i;:::-;34530:52;;34520:68;;;:::o;34594:137::-;;34688:37;34719:5;34688:37;:::i;:::-;34675:50;;34665:66;;;:::o;34737:126::-;;34820:37;34851:5;34820:37;:::i;:::-;34807:50;;34797:66;;;:::o;34869:113::-;;34952:24;34970:5;34952:24;:::i;:::-;34939:37;;34929:53;;;:::o;34988:48::-;35021:9;35042:115;35130:1;35123:5;35120:12;35110:2;;35136:13;;:::i;:::-;35110:2;35100:57;:::o;35163:113::-;35249:1;35242:5;35239:12;35229:2;;35255:13;;:::i;:::-;35229:2;35219:57;:::o;35282:122::-;35355:24;35373:5;35355:24;:::i;:::-;35348:5;35345:35;35335:2;;35394:1;35391;35384:12;35335:2;35325:79;:::o;35410:116::-;35480:21;35495:5;35480:21;:::i;:::-;35473:5;35470:32;35460:2;;35516:1;35513;35506:12;35460:2;35450:76;:::o;35532:122::-;35605:24;35623:5;35605:24;:::i;:::-;35598:5;35595:35;35585:2;;35644:1;35641;35634:12;35585:2;35575:79;:::o;35660:114::-;35748:1;35741:5;35738:12;35728:2;;35764:1;35761;35754:12;35728:2;35718:56;:::o;35780:122::-;35853:24;35871:5;35853:24;:::i;:::-;35846:5;35843:35;35833:2;;35892:1;35889;35882:12;35833:2;35823:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity =0.7.6;\npragma experimental ABIEncoderV2;\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"./Members.sol\";\nimport \"./CreateCohort.sol\";\n\n/**\n * @title CohortFactory\n * Allows on creation of invitations by Enterprise and acceptance of Validators of those \n * invitations. Finally Enterprise can create cohort consisting of invited Validators\n * and Enterprise. \n */\n\ncontract CohortFactory is  AccessControl {\n\n    // Audit types to be used. Two types added for future expansion \n    enum AuditTypes {\n        Financial, System, Rules, NFT, Type5, Type6\n    }\n\n    uint256[] public minValidatorPerCohort = [3,3,3,3,3,3];\n\n    // Invitation structure to hold info about its status\n    struct Invitation {\n        // address enterprise;\n        address validator;\n        uint256 invitationDate;      \n        uint256 acceptanceDate;\n        AuditTypes audits;\n        address cohort;\n        bool deleted;\n    }\n\n    struct Cohorts {\n        address cohort;\n        AuditTypes audits;\n    }\n\n    mapping(address => Cohorts[]) public cohortList;\n    mapping(address => uint256) public cohortMap;\n\n    Members members;                                            // pointer to Members contract1 \n    mapping (address =>  Invitation[]) public invitations;      // invitations list\n    address platformAddress;                                    // address to deposit platform fees\n    address createCohortAddress;\n\n    bytes32 public constant SETTER_ROLE =  keccak256(\"SETTER_ROLE\");\n\n    event ValidatorInvited(address  inviting, address indexed invitee, AuditTypes audits, uint256 invitationNumber, address cohort);\n    event InvitationAccepted(address indexed validator, uint256 invitationNumber);\n    event CohortCreated(address indexed enterprise, address cohort, AuditTypes audits);\n    event UpdateMinValidatorsPerCohort(uint256 minValidatorPerCohort, AuditTypes audits);\n    event ValidatorCleared(address validator, AuditTypes audit, address cohort, address enterprise);\n\n    /// @dev check if caller is a setter     \n    modifier isSetter {\n        require(hasRole(SETTER_ROLE, msg.sender), \"Members:isSetter - Caller is not a setter\");\n\n        _;\n    }\n\n    constructor(Members _members,  address _createCohortAddress ) {\n        members = _members;\n        createCohortAddress = _createCohortAddress;\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender); // \n    }\n   \n    /**\n    * @dev to be called by Governance contract to update new value for min validators per cohort\n    * @param _minValidatorPerCohort new value \n    * @param audits type of validations\n    */\n    function updateMinValidatorsPerCohort(uint256 _minValidatorPerCohort, uint256 audits) public  {\n\n        require(_minValidatorPerCohort != 0, \"CreateCohort:updateMinValidatorsPerCohort - New value for the  min validator per cohort can't be 0\");\n        require(audits <= 5 && audits >=0 , \"Cohort Factory:updateMinValidatorsPerCohort - Audit type has to be <= 5 and >=0\");\n        minValidatorPerCohort[audits] = _minValidatorPerCohort;\n        emit UpdateMinValidatorsPerCohort(_minValidatorPerCohort, AuditTypes(audits));\n    }\n\n    /**\n    * @dev Used by Enterprise to invite validator\n    * @param validator address of the validator to invite\n    * @param audit type of the audit\n    */\n    function inviteValidator(address validator, AuditTypes audit, address cohort) public {\n\n        Invitation memory newInvitation;\n        bool isValidator = members.userMap(validator, Members.UserType(1));\n        bool isEnterprise = members.userMap(msg.sender, Members.UserType(0));\n        (bool invited, ) = isValidatorInvited(msg.sender, validator, audit);\n        require( !invited , \"CohortFactory:inviteValidator - This validator has been already invited for this validation type.\" );\n        require( isEnterprise, \"CohortFactory:inviteValidator - Only Enterprise user can invite Validators.\");\n        require( isValidator, \"CohortFactory:inviteValidator - Only Approved Validators can be invited.\");\n        require( members.deposits(validator) > 0,\"CohortFactory:inviteValidator - This validator has not staked any tokens yet.\");\n        newInvitation.validator = validator;\n        newInvitation.invitationDate = block.timestamp;     \n        newInvitation.audits = audit;   \n        newInvitation.cohort = cohort;\n        invitations[msg.sender].push(newInvitation);\n       \n        emit ValidatorInvited(msg.sender, validator, audit, invitations[msg.sender].length - 1, cohort);\n    }\n\n    /**\n    * @dev Used by Enterprise to invite multiple validators in one call \n    * @param validator address of the validator to invite\n    * @param audit type of the audit\n    */\n    function inviteValidatorMultiple(address[] memory validator, AuditTypes audit, address cohort) public{\n\n        uint256 length = validator.length;\n        require(length <= 256, \"CohortFactory-inviteValidatorMultiple: List too long\");\n        for (uint256 i = 0; i < length; i++) {\n            inviteValidator(validator[i], audit, cohort);\n        }\n    }\n\n    /**\n    * @dev Used by Validator to accept Enterprise invitation\n    * @param enterprise address of the Enterprise who created invitation\n    * @param invitationNumber invitation number\n    */\n    function acceptInvitation(address enterprise, uint256 invitationNumber) public {\n\n        require( invitations[enterprise].length > invitationNumber, \"CohortFactory:acceptInvitation - This invitation doesn't exist\");\n        require( invitations[enterprise][invitationNumber].acceptanceDate == 0, \"CohortFactory:acceptInvitation- This invitation has been accepted already .\");\n        require( invitations[enterprise][invitationNumber].validator == msg.sender, \"CohortFactory:acceptInvitation - You are accepting invitation to which you were not invited or this invitation doesn't exist.\");\n        invitations[enterprise][invitationNumber].acceptanceDate = block.timestamp;\n\n            if (invitations[enterprise][invitationNumber].cohort != address(0)) // adding validator to existing cohort\n                require(\n                    ICohort(invitations[enterprise][invitationNumber].cohort)\n                    .addAdditionalValidator(msg.sender), \n                    \"CohortFactory:inviteValidator - Problem adding new validator\"\n                    );\n\n        emit InvitationAccepted(msg.sender, invitationNumber);\n    }\n\n    /**\n    * @dev Used by Enterprise to remove existing validator\n    * @param validator validator to remove\n    * @param audit type of audit \n    * @param cohort cohort from which validator is removed\n    */\n    function clearInvitationRemoveValidator(address validator, AuditTypes audit, address cohort) public {\n\n        for (uint256 i = 0; i < invitations[msg.sender].length; i++){\n            if (invitations[msg.sender][i].audits == audit && \n                invitations[msg.sender][i].validator ==  validator){\n                invitations[msg.sender][i].deleted = true;\n                require(ICohort(cohort).removeValidator(validator, msg.sender), \n                        \"CohortFactory:clearInvitationValidator - Problem removing validator in Cohort contract\");\n                emit ValidatorCleared(validator, audit, cohort, msg.sender);\n            }\n        }\n    }\n\n    function clearInvitationRemoveValidator(address validator, AuditTypes audit) public {\n\n        for (uint256 i = 0; i < invitations[msg.sender].length; i++){\n            if (invitations[msg.sender][i].audits == audit && \n                invitations[msg.sender][i].validator ==  validator){\n                invitations[msg.sender][i].deleted = true;                \n                emit ValidatorCleared(validator, audit, address(0x0), msg.sender);\n            }\n        }\n    }\n\n    /**\n    * @dev Used by Validator to accept multiple Enterprise invitation\n    * @param enterprise address of the Enterprise who created invitation\n    * @param invitationNumber invitation number\n    */\n    function acceptInvitationMultiple(address[] memory enterprise, uint256[] memory invitationNumber) public{\n\n        uint256 length = enterprise.length;\n        for (uint256 i = 0; i < length; i++) {\n            acceptInvitation(enterprise[i], invitationNumber[i]);\n        }\n    }\n\n    /**\n    * @dev To return invitation count\n    * @param enterprise address of the Enterprise who created invitation\n    * @param audit type\n    * @return count of invitations\n    */\n    function returnInvitationCount(address enterprise, AuditTypes audit) public view returns(uint256) {\n\n        uint256 count;\n\n        for (uint i=0; i < invitations[enterprise].length; ++i ){\n            if (invitations[enterprise][i].audits == audit && \n                invitations[enterprise][i].acceptanceDate != 0 &&\n                !invitations[enterprise][i].deleted)\n                count ++;\n        }\n        return count;\n    }\n\n    /**\n    * @dev Used to determine if validator has been invited and/or if validation has been accepted\n    * @param enterprise inviting party\n    * @param validator address of the validator\n    * @param audits types\n    * @return true if invited\n    * @return true if accepted invitation\n    */\n    function isValidatorInvited(address enterprise, address validator, AuditTypes audits) public view returns (bool, bool) {\n\n        for (uint i=0; i < invitations[enterprise].length; ++i ){\n            if (invitations[enterprise][i].audits == audits && \n                invitations[enterprise][i].validator == validator &&\n                !invitations[enterprise][i].deleted){\n                if (invitations[enterprise][i].acceptanceDate > 0)\n                    return (true, true);\n                return (true, false);\n            }\n        }\n        return (false, false);\n    }\n\n     /**\n    * @dev Used to return list of cohorts for enterprise\n    * @param enterprise inviting party\n    * @return cohort address \n    * @return audit type\n    */\n    function returnCohorts(address enterprise) public view returns (address[] memory, uint256[] memory){\n\n        address[] memory cohort = new address[](cohortList[enterprise].length);\n        uint256[] memory audits = new uint256[](cohortList[enterprise].length);\n\n        for (uint256 i; i < cohortList[enterprise].length; i++){\n            cohort[i] = cohortList[enterprise][i].cohort;\n            audits[i] = uint256(cohortList[enterprise][i].audits);\n        }\n        return (cohort, audits);\n    }\n\n     /**\n     * @dev Function to calculate outstanding validations for enterprise. \n     */   \n    function returnOutstandingValidations() public view returns(uint256) {\n\n         (address[] memory cohorts, ) = returnCohorts(msg.sender);\n         uint totalOutstandingValidations;\n\n         for (uint256 i; i< cohorts.length; i++)\n             totalOutstandingValidations = totalOutstandingValidations + ICohort(cohorts[i]).outstandingValidations();\n\n        return totalOutstandingValidations;\n    }\n\n    /**\n    * @dev Initiate creation a new cohort using create2 methods based on the audit type and enterprise combination\n    * @param audit type\n    */\n    function createCohort(AuditTypes audit) public {\n        address[] memory validatorsList = new address[](returnInvitationCount(msg.sender, audit));\n        uint k;\n        for (uint i=0; i < invitations[msg.sender].length; ++i ){\n            if (invitations[msg.sender][i].audits == audit && invitations[msg.sender][i].acceptanceDate > 0){\n                validatorsList[k] = invitations[msg.sender][i].validator;\n                k++;\n            }\n        }\n        require(k >= minValidatorPerCohort[uint256(audit)], \"CohortFactory:createCohort - Number of validators below required minimum.\");\n\n        address cohortAddress = CreateCohort(createCohortAddress).createCohort(uint256(audit),  validatorsList, msg.sender );\n        cohortList[msg.sender].push();\n        cohortList[msg.sender][cohortList[msg.sender].length - 1].cohort = cohortAddress;\n        cohortList[msg.sender][cohortList[msg.sender].length - 1].audits = audit;\n\n        cohortMap[cohortAddress] = uint256(audit);\n\n        emit CohortCreated(msg.sender, cohortAddress, AuditTypes(audit));\n        \n    }\n}\n",
  "sourcePath": "/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Auditchain/CohortFactory.sol",
  "ast": {
    "absolutePath": "/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Auditchain/CohortFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        7249
      ],
      "Address": [
        9958
      ],
      "AuditToken": [
        1018
      ],
      "Cohort": [
        1983
      ],
      "CohortFactory": [
        3032
      ],
      "Context": [
        9981
      ],
      "CreateCohort": [
        3235
      ],
      "ERC20": [
        8176
      ],
      "ERC20Burnable": [
        8235
      ],
      "EnumerableSet": [
        11033
      ],
      "ICohort": [
        3286
      ],
      "ICohortFactory": [
        3305
      ],
      "IERC20": [
        8313
      ],
      "Locked": [
        6717
      ],
      "Members": [
        4710
      ],
      "MigrationAgent": [
        6728
      ],
      "Pausable": [
        11125
      ],
      "SafeERC20": [
        8526
      ],
      "SafeMath": [
        7673
      ]
    },
    "id": 3033,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1985,
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "id": 1986,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 1987,
        "nodeType": "ImportDirective",
        "scope": 3033,
        "sourceUnit": 7250,
        "src": "90:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Auditchain/Members.sol",
        "file": "./Members.sol",
        "id": 1988,
        "nodeType": "ImportDirective",
        "scope": 3033,
        "sourceUnit": 4711,
        "src": "149:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Auditchain/CreateCohort.sol",
        "file": "./CreateCohort.sol",
        "id": 1989,
        "nodeType": "ImportDirective",
        "scope": 3033,
        "sourceUnit": 3236,
        "src": "173:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1991,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7249,
              "src": "459:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$7249",
                "typeString": "contract AccessControl"
              }
            },
            "id": 1992,
            "nodeType": "InheritanceSpecifier",
            "src": "459:13:2"
          }
        ],
        "contractDependencies": [
          7249,
          9981
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1990,
          "nodeType": "StructuredDocumentation",
          "src": "203:227:2",
          "text": " @title CohortFactory\n Allows on creation of invitations by Enterprise and acceptance of Validators of those \n invitations. Finally Enterprise can create cohort consisting of invited Validators\n and Enterprise. "
        },
        "fullyImplemented": true,
        "id": 3032,
        "linearizedBaseContracts": [
          3032,
          7249,
          9981
        ],
        "name": "CohortFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "CohortFactory.AuditTypes",
            "id": 1999,
            "members": [
              {
                "id": 1993,
                "name": "Financial",
                "nodeType": "EnumValue",
                "src": "575:9:2"
              },
              {
                "id": 1994,
                "name": "System",
                "nodeType": "EnumValue",
                "src": "586:6:2"
              },
              {
                "id": 1995,
                "name": "Rules",
                "nodeType": "EnumValue",
                "src": "594:5:2"
              },
              {
                "id": 1996,
                "name": "NFT",
                "nodeType": "EnumValue",
                "src": "601:3:2"
              },
              {
                "id": 1997,
                "name": "Type5",
                "nodeType": "EnumValue",
                "src": "606:5:2"
              },
              {
                "id": 1998,
                "name": "Type6",
                "nodeType": "EnumValue",
                "src": "613:5:2"
              }
            ],
            "name": "AuditTypes",
            "nodeType": "EnumDefinition",
            "src": "549:75:2"
          },
          {
            "constant": false,
            "functionSelector": "45f49bb0",
            "id": 2009,
            "mutability": "mutable",
            "name": "minValidatorPerCohort",
            "nodeType": "VariableDeclaration",
            "scope": 3032,
            "src": "630:54:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 2000,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "630:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2001,
              "nodeType": "ArrayTypeName",
              "src": "630:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "33",
                  "id": 2002,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "672:1:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 2003,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "674:1:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 2004,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "676:1:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 2005,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "678:1:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 2006,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "680:1:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 2007,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "682:1:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                }
              ],
              "id": 2008,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "671:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint8_$6_memory_ptr",
                "typeString": "uint8[6] memory"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "CohortFactory.Invitation",
            "id": 2022,
            "members": [
              {
                "constant": false,
                "id": 2011,
                "mutability": "mutable",
                "name": "validator",
                "nodeType": "VariableDeclaration",
                "scope": 2022,
                "src": "808:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2010,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "808:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2013,
                "mutability": "mutable",
                "name": "invitationDate",
                "nodeType": "VariableDeclaration",
                "scope": 2022,
                "src": "835:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2012,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "835:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2015,
                "mutability": "mutable",
                "name": "acceptanceDate",
                "nodeType": "VariableDeclaration",
                "scope": 2022,
                "src": "873:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2014,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "873:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2017,
                "mutability": "mutable",
                "name": "audits",
                "nodeType": "VariableDeclaration",
                "scope": 2022,
                "src": "905:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                  "typeString": "enum CohortFactory.AuditTypes"
                },
                "typeName": {
                  "id": 2016,
                  "name": "AuditTypes",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1999,
                  "src": "905:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AuditTypes_$1999",
                    "typeString": "enum CohortFactory.AuditTypes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2019,
                "mutability": "mutable",
                "name": "cohort",
                "nodeType": "VariableDeclaration",
                "scope": 2022,
                "src": "932:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2018,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "932:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2021,
                "mutability": "mutable",
                "name": "deleted",
                "nodeType": "VariableDeclaration",
                "scope": 2022,
                "src": "956:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2020,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "956:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Invitation",
            "nodeType": "StructDefinition",
            "scope": 3032,
            "src": "749:226:2",
            "visibility": "public"
          },
          {
            "canonicalName": "CohortFactory.Cohorts",
            "id": 2027,
            "members": [
              {
                "constant": false,
                "id": 2024,
                "mutability": "mutable",
                "name": "cohort",
                "nodeType": "VariableDeclaration",
                "scope": 2027,
                "src": "1006:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2023,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1006:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2026,
                "mutability": "mutable",
                "name": "audits",
                "nodeType": "VariableDeclaration",
                "scope": 2027,
                "src": "1030:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                  "typeString": "enum CohortFactory.AuditTypes"
                },
                "typeName": {
                  "id": 2025,
                  "name": "AuditTypes",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1999,
                  "src": "1030:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AuditTypes_$1999",
                    "typeString": "enum CohortFactory.AuditTypes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Cohorts",
            "nodeType": "StructDefinition",
            "scope": 3032,
            "src": "981:73:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a70e0393",
            "id": 2032,
            "mutability": "mutable",
            "name": "cohortList",
            "nodeType": "VariableDeclaration",
            "scope": 3032,
            "src": "1060:47:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct CohortFactory.Cohorts[])"
            },
            "typeName": {
              "id": 2031,
              "keyType": {
                "id": 2028,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1068:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1060:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct CohortFactory.Cohorts[])"
              },
              "valueType": {
                "baseType": {
                  "id": 2029,
                  "name": "Cohorts",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2027,
                  "src": "1079:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Cohorts_$2027_storage_ptr",
                    "typeString": "struct CohortFactory.Cohorts"
                  }
                },
                "id": 2030,
                "nodeType": "ArrayTypeName",
                "src": "1079:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage_ptr",
                  "typeString": "struct CohortFactory.Cohorts[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4b524e07",
            "id": 2036,
            "mutability": "mutable",
            "name": "cohortMap",
            "nodeType": "VariableDeclaration",
            "scope": 3032,
            "src": "1113:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2035,
              "keyType": {
                "id": 2033,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1121:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1113:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2034,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1132:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2038,
            "mutability": "mutable",
            "name": "members",
            "nodeType": "VariableDeclaration",
            "scope": 3032,
            "src": "1164:15:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Members_$4710",
              "typeString": "contract Members"
            },
            "typeName": {
              "id": 2037,
              "name": "Members",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4710,
              "src": "1164:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Members_$4710",
                "typeString": "contract Members"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8ffb72f4",
            "id": 2043,
            "mutability": "mutable",
            "name": "invitations",
            "nodeType": "VariableDeclaration",
            "scope": 3032,
            "src": "1261:53:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct CohortFactory.Invitation[])"
            },
            "typeName": {
              "id": 2042,
              "keyType": {
                "id": 2039,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1270:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1261:34:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct CohortFactory.Invitation[])"
              },
              "valueType": {
                "baseType": {
                  "id": 2040,
                  "name": "Invitation",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2022,
                  "src": "1282:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Invitation_$2022_storage_ptr",
                    "typeString": "struct CohortFactory.Invitation"
                  }
                },
                "id": 2041,
                "nodeType": "ArrayTypeName",
                "src": "1282:12:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_ptr",
                  "typeString": "struct CohortFactory.Invitation[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2045,
            "mutability": "mutable",
            "name": "platformAddress",
            "nodeType": "VariableDeclaration",
            "scope": 3032,
            "src": "1345:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2044,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1345:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2047,
            "mutability": "mutable",
            "name": "createCohortAddress",
            "nodeType": "VariableDeclaration",
            "scope": 3032,
            "src": "1445:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2046,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1445:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "a2011b3f",
            "id": 2052,
            "mutability": "constant",
            "name": "SETTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 3032,
            "src": "1479:63:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2048,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1479:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5345545445525f524f4c45",
                  "id": 2050,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1528:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_61c92169ef077349011ff0b1383c894d86c5f0b41d986366b58a6cf31e93beda",
                    "typeString": "literal_string \"SETTER_ROLE\""
                  },
                  "value": "SETTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_61c92169ef077349011ff0b1383c894d86c5f0b41d986366b58a6cf31e93beda",
                    "typeString": "literal_string \"SETTER_ROLE\""
                  }
                ],
                "id": 2049,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1518:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2051,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1518:24:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2064,
            "name": "ValidatorInvited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2054,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "inviting",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "1572:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2056,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "invitee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "1591:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1591:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2058,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "audits",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "1616:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AuditTypes_$1999",
                    "typeString": "enum CohortFactory.AuditTypes"
                  },
                  "typeName": {
                    "id": 2057,
                    "name": "AuditTypes",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1999,
                    "src": "1616:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                      "typeString": "enum CohortFactory.AuditTypes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2060,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "invitationNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "1635:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2062,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cohort",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "1661:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1571:105:2"
            },
            "src": "1549:128:2"
          },
          {
            "anonymous": false,
            "id": 2070,
            "name": "InvitationAccepted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2066,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2070,
                  "src": "1707:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1707:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2068,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "invitationNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 2070,
                  "src": "1734:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1734:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1706:53:2"
            },
            "src": "1682:78:2"
          },
          {
            "anonymous": false,
            "id": 2078,
            "name": "CohortCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2072,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "enterprise",
                  "nodeType": "VariableDeclaration",
                  "scope": 2078,
                  "src": "1785:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1785:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2074,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cohort",
                  "nodeType": "VariableDeclaration",
                  "scope": 2078,
                  "src": "1813:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2076,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "audits",
                  "nodeType": "VariableDeclaration",
                  "scope": 2078,
                  "src": "1829:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AuditTypes_$1999",
                    "typeString": "enum CohortFactory.AuditTypes"
                  },
                  "typeName": {
                    "id": 2075,
                    "name": "AuditTypes",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1999,
                    "src": "1829:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                      "typeString": "enum CohortFactory.AuditTypes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1784:63:2"
            },
            "src": "1765:83:2"
          },
          {
            "anonymous": false,
            "id": 2084,
            "name": "UpdateMinValidatorsPerCohort",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2080,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "minValidatorPerCohort",
                  "nodeType": "VariableDeclaration",
                  "scope": 2084,
                  "src": "1888:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1888:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2082,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "audits",
                  "nodeType": "VariableDeclaration",
                  "scope": 2084,
                  "src": "1919:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AuditTypes_$1999",
                    "typeString": "enum CohortFactory.AuditTypes"
                  },
                  "typeName": {
                    "id": 2081,
                    "name": "AuditTypes",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1999,
                    "src": "1919:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                      "typeString": "enum CohortFactory.AuditTypes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1887:50:2"
            },
            "src": "1853:85:2"
          },
          {
            "anonymous": false,
            "id": 2094,
            "name": "ValidatorCleared",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2086,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "1966:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1966:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2088,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "audit",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "1985:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AuditTypes_$1999",
                    "typeString": "enum CohortFactory.AuditTypes"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "AuditTypes",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1999,
                    "src": "1985:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                      "typeString": "enum CohortFactory.AuditTypes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2090,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cohort",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "2003:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2003:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2092,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "enterprise",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "2019:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1965:73:2"
            },
            "src": "1943:96:2"
          },
          {
            "body": {
              "id": 2107,
              "nodeType": "Block",
              "src": "2109:115:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2099,
                            "name": "SETTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2052,
                            "src": "2135:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2100,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2148:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2148:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2098,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7038,
                          "src": "2127:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 2102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2127:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656d626572733a6973536574746572202d2043616c6c6572206973206e6f74206120736574746572",
                        "id": 2103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2161:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a72327b53a9c7390cded355a3af25aefd509fbf8479cbd3d27372ce9badb6a7e",
                          "typeString": "literal_string \"Members:isSetter - Caller is not a setter\""
                        },
                        "value": "Members:isSetter - Caller is not a setter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a72327b53a9c7390cded355a3af25aefd509fbf8479cbd3d27372ce9badb6a7e",
                          "typeString": "literal_string \"Members:isSetter - Caller is not a setter\""
                        }
                      ],
                      "id": 2097,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2119:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2119:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2105,
                  "nodeType": "ExpressionStatement",
                  "src": "2119:86:2"
                },
                {
                  "id": 2106,
                  "nodeType": "PlaceholderStatement",
                  "src": "2216:1:2"
                }
              ]
            },
            "documentation": {
              "id": 2095,
              "nodeType": "StructuredDocumentation",
              "src": "2045:41:2",
              "text": "@dev check if caller is a setter     "
            },
            "id": 2108,
            "name": "isSetter",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2109:0:2"
            },
            "src": "2091:133:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2129,
              "nodeType": "Block",
              "src": "2292:143:2",
              "statements": [
                {
                  "expression": {
                    "id": 2117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2115,
                      "name": "members",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2038,
                      "src": "2302:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Members_$4710",
                        "typeString": "contract Members"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2116,
                      "name": "_members",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2110,
                      "src": "2312:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Members_$4710",
                        "typeString": "contract Members"
                      }
                    },
                    "src": "2302:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Members_$4710",
                      "typeString": "contract Members"
                    }
                  },
                  "id": 2118,
                  "nodeType": "ExpressionStatement",
                  "src": "2302:18:2"
                },
                {
                  "expression": {
                    "id": 2121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2119,
                      "name": "createCohortAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2047,
                      "src": "2330:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2120,
                      "name": "_createCohortAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2112,
                      "src": "2352:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2330:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2122,
                  "nodeType": "ExpressionStatement",
                  "src": "2330:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2124,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6992,
                        "src": "2393:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 2125,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2413:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2413:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2123,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7175,
                      "src": "2382:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2382:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2128,
                  "nodeType": "ExpressionStatement",
                  "src": "2382:42:2"
                }
              ]
            },
            "id": 2130,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2110,
                  "mutability": "mutable",
                  "name": "_members",
                  "nodeType": "VariableDeclaration",
                  "scope": 2130,
                  "src": "2242:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Members_$4710",
                    "typeString": "contract Members"
                  },
                  "typeName": {
                    "id": 2109,
                    "name": "Members",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4710,
                    "src": "2242:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Members_$4710",
                      "typeString": "contract Members"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2112,
                  "mutability": "mutable",
                  "name": "_createCohortAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2130,
                  "src": "2261:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2241:50:2"
            },
            "returnParameters": {
              "id": 2114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2292:0:2"
            },
            "scope": 3032,
            "src": "2230:205:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2169,
              "nodeType": "Block",
              "src": "2737:435:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2139,
                          "name": "_minValidatorPerCohort",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2133,
                          "src": "2756:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2782:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2756:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "437265617465436f686f72743a7570646174654d696e56616c696461746f7273506572436f686f7274202d204e65772076616c756520666f722074686520206d696e2076616c696461746f722070657220636f686f72742063616e27742062652030",
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2785:100:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_138ce18bc2efbe435ab2c4679044dac294bb49dfea1082dc56fef4b0aaa0f669",
                          "typeString": "literal_string \"CreateCohort:updateMinValidatorsPerCohort - New value for the  min validator per cohort can't be 0\""
                        },
                        "value": "CreateCohort:updateMinValidatorsPerCohort - New value for the  min validator per cohort can't be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_138ce18bc2efbe435ab2c4679044dac294bb49dfea1082dc56fef4b0aaa0f669",
                          "typeString": "literal_string \"CreateCohort:updateMinValidatorsPerCohort - New value for the  min validator per cohort can't be 0\""
                        }
                      ],
                      "id": 2138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2748:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2748:138:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2144,
                  "nodeType": "ExpressionStatement",
                  "src": "2748:138:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2146,
                            "name": "audits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2135,
                            "src": "2904:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 2147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2914:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "2904:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2149,
                            "name": "audits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2135,
                            "src": "2919:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2928:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2919:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2904:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f686f727420466163746f72793a7570646174654d696e56616c696461746f7273506572436f686f7274202d20417564697420747970652068617320746f206265203c3d203520616e64203e3d30",
                        "id": 2153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2932:81:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_439fa259a2c35dedc9a41e59f465fcf0a757ce4d009800d5f7c36de72bbe406a",
                          "typeString": "literal_string \"Cohort Factory:updateMinValidatorsPerCohort - Audit type has to be <= 5 and >=0\""
                        },
                        "value": "Cohort Factory:updateMinValidatorsPerCohort - Audit type has to be <= 5 and >=0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_439fa259a2c35dedc9a41e59f465fcf0a757ce4d009800d5f7c36de72bbe406a",
                          "typeString": "literal_string \"Cohort Factory:updateMinValidatorsPerCohort - Audit type has to be <= 5 and >=0\""
                        }
                      ],
                      "id": 2145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2896:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2896:118:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2155,
                  "nodeType": "ExpressionStatement",
                  "src": "2896:118:2"
                },
                {
                  "expression": {
                    "id": 2160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2156,
                        "name": "minValidatorPerCohort",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2009,
                        "src": "3024:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 2158,
                      "indexExpression": {
                        "id": 2157,
                        "name": "audits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2135,
                        "src": "3046:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3024:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2159,
                      "name": "_minValidatorPerCohort",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2133,
                      "src": "3056:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3024:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2161,
                  "nodeType": "ExpressionStatement",
                  "src": "3024:54:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2163,
                        "name": "_minValidatorPerCohort",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "3122:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2165,
                            "name": "audits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2135,
                            "src": "3157:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2164,
                          "name": "AuditTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1999,
                          "src": "3146:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_AuditTypes_$1999_$",
                            "typeString": "type(enum CohortFactory.AuditTypes)"
                          }
                        },
                        "id": 2166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3146:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AuditTypes_$1999",
                          "typeString": "enum CohortFactory.AuditTypes"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_AuditTypes_$1999",
                          "typeString": "enum CohortFactory.AuditTypes"
                        }
                      ],
                      "id": 2162,
                      "name": "UpdateMinValidatorsPerCohort",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2084,
                      "src": "3093:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_AuditTypes_$1999_$returns$__$",
                        "typeString": "function (uint256,enum CohortFactory.AuditTypes)"
                      }
                    },
                    "id": 2167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3093:72:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2168,
                  "nodeType": "EmitStatement",
                  "src": "3088:77:2"
                }
              ]
            },
            "documentation": {
              "id": 2131,
              "nodeType": "StructuredDocumentation",
              "src": "2444:194:2",
              "text": " @dev to be called by Governance contract to update new value for min validators per cohort\n @param _minValidatorPerCohort new value \n @param audits type of validations"
            },
            "functionSelector": "b9f577b1",
            "id": 2170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateMinValidatorsPerCohort",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2133,
                  "mutability": "mutable",
                  "name": "_minValidatorPerCohort",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "2681:30:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2681:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2135,
                  "mutability": "mutable",
                  "name": "audits",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "2713:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2713:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2680:48:2"
            },
            "returnParameters": {
              "id": 2137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2737:0:2"
            },
            "scope": 3032,
            "src": "2643:529:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2289,
              "nodeType": "Block",
              "src": "3423:1112:2",
              "statements": [
                {
                  "assignments": [
                    2181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2181,
                      "mutability": "mutable",
                      "name": "newInvitation",
                      "nodeType": "VariableDeclaration",
                      "scope": 2289,
                      "src": "3434:31:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Invitation_$2022_memory_ptr",
                        "typeString": "struct CohortFactory.Invitation"
                      },
                      "typeName": {
                        "id": 2180,
                        "name": "Invitation",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2022,
                        "src": "3434:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Invitation_$2022_storage_ptr",
                          "typeString": "struct CohortFactory.Invitation"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2182,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3434:31:2"
                },
                {
                  "assignments": [
                    2184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2184,
                      "mutability": "mutable",
                      "name": "isValidator",
                      "nodeType": "VariableDeclaration",
                      "scope": 2289,
                      "src": "3475:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2183,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3475:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2193,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2187,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2173,
                        "src": "3510:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 2190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3538:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 2188,
                            "name": "Members",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4710,
                            "src": "3521:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Members_$4710_$",
                              "typeString": "type(contract Members)"
                            }
                          },
                          "id": 2189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "UserType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3501,
                          "src": "3521:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UserType_$3501_$",
                            "typeString": "type(enum Members.UserType)"
                          }
                        },
                        "id": 2191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3521:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UserType_$3501",
                          "typeString": "enum Members.UserType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_UserType_$3501",
                          "typeString": "enum Members.UserType"
                        }
                      ],
                      "expression": {
                        "id": 2185,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2038,
                        "src": "3494:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Members_$4710",
                          "typeString": "contract Members"
                        }
                      },
                      "id": 2186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userMap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3513,
                      "src": "3494:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_enum$_UserType_$3501_$returns$_t_bool_$",
                        "typeString": "function (address,enum Members.UserType) view external returns (bool)"
                      }
                    },
                    "id": 2192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3494:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3475:66:2"
                },
                {
                  "assignments": [
                    2195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2195,
                      "mutability": "mutable",
                      "name": "isEnterprise",
                      "nodeType": "VariableDeclaration",
                      "scope": 2289,
                      "src": "3551:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2194,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3551:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2205,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2198,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3587:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3587:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3616:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 2200,
                            "name": "Members",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4710,
                            "src": "3599:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Members_$4710_$",
                              "typeString": "type(contract Members)"
                            }
                          },
                          "id": 2201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "UserType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3501,
                          "src": "3599:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UserType_$3501_$",
                            "typeString": "type(enum Members.UserType)"
                          }
                        },
                        "id": 2203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3599:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UserType_$3501",
                          "typeString": "enum Members.UserType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_enum$_UserType_$3501",
                          "typeString": "enum Members.UserType"
                        }
                      ],
                      "expression": {
                        "id": 2196,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2038,
                        "src": "3571:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Members_$4710",
                          "typeString": "contract Members"
                        }
                      },
                      "id": 2197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userMap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3513,
                      "src": "3571:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_enum$_UserType_$3501_$returns$_t_bool_$",
                        "typeString": "function (address,enum Members.UserType) view external returns (bool)"
                      }
                    },
                    "id": 2204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3571:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3551:68:2"
                },
                {
                  "assignments": [
                    2207,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2207,
                      "mutability": "mutable",
                      "name": "invited",
                      "nodeType": "VariableDeclaration",
                      "scope": 2289,
                      "src": "3630:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2206,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3630:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2214,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2209,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3667:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3667:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2211,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2173,
                        "src": "3679:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2212,
                        "name": "audit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2175,
                        "src": "3690:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AuditTypes_$1999",
                          "typeString": "enum CohortFactory.AuditTypes"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_AuditTypes_$1999",
                          "typeString": "enum CohortFactory.AuditTypes"
                        }
                      ],
                      "id": 2208,
                      "name": "isValidatorInvited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2741,
                      "src": "3648:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_enum$_AuditTypes_$1999_$returns$_t_bool_$_t_bool_$",
                        "typeString": "function (address,address,enum CohortFactory.AuditTypes) view returns (bool,bool)"
                      }
                    },
                    "id": 2213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3648:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
                      "typeString": "tuple(bool,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3629:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3715:8:2",
                        "subExpression": {
                          "id": 2216,
                          "name": "invited",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2207,
                          "src": "3716:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f686f7274466163746f72793a696e7669746556616c696461746f72202d20546869732076616c696461746f7220686173206265656e20616c726561647920696e766974656420666f7220746869732076616c69646174696f6e20747970652e",
                        "id": 2218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3726:99:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6fd86e87db9e2e08ac6552340780a28e848f6c0d697d6cf86dcb9d51e1b421da",
                          "typeString": "literal_string \"CohortFactory:inviteValidator - This validator has been already invited for this validation type.\""
                        },
                        "value": "CohortFactory:inviteValidator - This validator has been already invited for this validation type."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6fd86e87db9e2e08ac6552340780a28e848f6c0d697d6cf86dcb9d51e1b421da",
                          "typeString": "literal_string \"CohortFactory:inviteValidator - This validator has been already invited for this validation type.\""
                        }
                      ],
                      "id": 2215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3706:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3706:121:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2220,
                  "nodeType": "ExpressionStatement",
                  "src": "3706:121:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2222,
                        "name": "isEnterprise",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2195,
                        "src": "3846:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f686f7274466163746f72793a696e7669746556616c696461746f72202d204f6e6c7920456e746572707269736520757365722063616e20696e766974652056616c696461746f72732e",
                        "id": 2223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3860:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e77e0a377146f0cbb727bcc33df33781a2df3863ca61db0d7a180f0d158fe44f",
                          "typeString": "literal_string \"CohortFactory:inviteValidator - Only Enterprise user can invite Validators.\""
                        },
                        "value": "CohortFactory:inviteValidator - Only Enterprise user can invite Validators."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e77e0a377146f0cbb727bcc33df33781a2df3863ca61db0d7a180f0d158fe44f",
                          "typeString": "literal_string \"CohortFactory:inviteValidator - Only Enterprise user can invite Validators.\""
                        }
                      ],
                      "id": 2221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3837:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3837:101:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2225,
                  "nodeType": "ExpressionStatement",
                  "src": "3837:101:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2227,
                        "name": "isValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2184,
                        "src": "3957:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f686f7274466163746f72793a696e7669746556616c696461746f72202d204f6e6c7920417070726f7665642056616c696461746f72732063616e20626520696e76697465642e",
                        "id": 2228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3970:74:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_677833a477637ed71cf914f20c2789e7ba3b5a9c7de9eccec58ba6d44b93b1bb",
                          "typeString": "literal_string \"CohortFactory:inviteValidator - Only Approved Validators can be invited.\""
                        },
                        "value": "CohortFactory:inviteValidator - Only Approved Validators can be invited."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_677833a477637ed71cf914f20c2789e7ba3b5a9c7de9eccec58ba6d44b93b1bb",
                          "typeString": "literal_string \"CohortFactory:inviteValidator - Only Approved Validators can be invited.\""
                        }
                      ],
                      "id": 2226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3948:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3948:97:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2230,
                  "nodeType": "ExpressionStatement",
                  "src": "3948:97:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2234,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2173,
                              "src": "4081:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2232,
                              "name": "members",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2038,
                              "src": "4064:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Members_$4710",
                                "typeString": "contract Members"
                              }
                            },
                            "id": 2233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3436,
                            "src": "4064:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4064:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4094:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4064:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f686f7274466163746f72793a696e7669746556616c696461746f72202d20546869732076616c696461746f7220686173206e6f74207374616b656420616e7920746f6b656e73207965742e",
                        "id": 2238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4096:79:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_063c3b922a3957817a67ee3018d5d722e9238f97e38bf4bc4e101fe06d756c30",
                          "typeString": "literal_string \"CohortFactory:inviteValidator - This validator has not staked any tokens yet.\""
                        },
                        "value": "CohortFactory:inviteValidator - This validator has not staked any tokens yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_063c3b922a3957817a67ee3018d5d722e9238f97e38bf4bc4e101fe06d756c30",
                          "typeString": "literal_string \"CohortFactory:inviteValidator - This validator has not staked any tokens yet.\""
                        }
                      ],
                      "id": 2231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4055:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4055:121:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2240,
                  "nodeType": "ExpressionStatement",
                  "src": "4055:121:2"
                },
                {
                  "expression": {
                    "id": 2245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2241,
                        "name": "newInvitation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "4186:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Invitation_$2022_memory_ptr",
                          "typeString": "struct CohortFactory.Invitation memory"
                        }
                      },
                      "id": 2243,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "validator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2011,
                      "src": "4186:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2244,
                      "name": "validator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2173,
                      "src": "4212:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4186:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2246,
                  "nodeType": "ExpressionStatement",
                  "src": "4186:35:2"
                },
                {
                  "expression": {
                    "id": 2252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2247,
                        "name": "newInvitation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "4231:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Invitation_$2022_memory_ptr",
                          "typeString": "struct CohortFactory.Invitation memory"
                        }
                      },
                      "id": 2249,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "invitationDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2013,
                      "src": "4231:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2250,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4262:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4262:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4231:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2253,
                  "nodeType": "ExpressionStatement",
                  "src": "4231:46:2"
                },
                {
                  "expression": {
                    "id": 2258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2254,
                        "name": "newInvitation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "4292:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Invitation_$2022_memory_ptr",
                          "typeString": "struct CohortFactory.Invitation memory"
                        }
                      },
                      "id": 2256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "audits",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2017,
                      "src": "4292:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AuditTypes_$1999",
                        "typeString": "enum CohortFactory.AuditTypes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2257,
                      "name": "audit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "4315:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AuditTypes_$1999",
                        "typeString": "enum CohortFactory.AuditTypes"
                      }
                    },
                    "src": "4292:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                      "typeString": "enum CohortFactory.AuditTypes"
                    }
                  },
                  "id": 2259,
                  "nodeType": "ExpressionStatement",
                  "src": "4292:28:2"
                },
                {
                  "expression": {
                    "id": 2264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2260,
                        "name": "newInvitation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "4333:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Invitation_$2022_memory_ptr",
                          "typeString": "struct CohortFactory.Invitation memory"
                        }
                      },
                      "id": 2262,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "cohort",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2019,
                      "src": "4333:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2263,
                      "name": "cohort",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2177,
                      "src": "4356:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4333:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2265,
                  "nodeType": "ExpressionStatement",
                  "src": "4333:29:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2271,
                        "name": "newInvitation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "4401:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Invitation_$2022_memory_ptr",
                          "typeString": "struct CohortFactory.Invitation memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Invitation_$2022_memory_ptr",
                          "typeString": "struct CohortFactory.Invitation memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 2266,
                          "name": "invitations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "4372:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                          }
                        },
                        "id": 2269,
                        "indexExpression": {
                          "expression": {
                            "id": 2267,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4384:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4384:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4372:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                          "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                        }
                      },
                      "id": 2270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4372:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Invitation_$2022_storage_$returns$__$",
                        "typeString": "function (struct CohortFactory.Invitation storage ref)"
                      }
                    },
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4372:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2273,
                  "nodeType": "ExpressionStatement",
                  "src": "4372:43:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2275,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4455:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4455:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2277,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2173,
                        "src": "4467:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2278,
                        "name": "audit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2175,
                        "src": "4478:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AuditTypes_$1999",
                          "typeString": "enum CohortFactory.AuditTypes"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2279,
                              "name": "invitations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2043,
                              "src": "4485:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                              }
                            },
                            "id": 2282,
                            "indexExpression": {
                              "expression": {
                                "id": 2280,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4497:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4497:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4485:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                              "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                            }
                          },
                          "id": 2283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4485:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 2284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4518:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4485:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2286,
                        "name": "cohort",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2177,
                        "src": "4521:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_AuditTypes_$1999",
                          "typeString": "enum CohortFactory.AuditTypes"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2274,
                      "name": "ValidatorInvited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2064,
                      "src": "4438:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_enum$_AuditTypes_$1999_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,enum CohortFactory.AuditTypes,uint256,address)"
                      }
                    },
                    "id": 2287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4438:90:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2288,
                  "nodeType": "EmitStatement",
                  "src": "4433:95:2"
                }
              ]
            },
            "documentation": {
              "id": 2171,
              "nodeType": "StructuredDocumentation",
              "src": "3178:155:2",
              "text": " @dev Used by Enterprise to invite validator\n @param validator address of the validator to invite\n @param audit type of the audit"
            },
            "functionSelector": "7689bb7d",
            "id": 2290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inviteValidator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2173,
                  "mutability": "mutable",
                  "name": "validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2290,
                  "src": "3363:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3363:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2175,
                  "mutability": "mutable",
                  "name": "audit",
                  "nodeType": "VariableDeclaration",
                  "scope": 2290,
                  "src": "3382:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AuditTypes_$1999",
                    "typeString": "enum CohortFactory.AuditTypes"
                  },
                  "typeName": {
                    "id": 2174,
                    "name": "AuditTypes",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1999,
                    "src": "3382:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                      "typeString": "enum CohortFactory.AuditTypes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2177,
                  "mutability": "mutable",
                  "name": "cohort",
                  "nodeType": "VariableDeclaration",
                  "scope": 2290,
                  "src": "3400:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3400:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3362:53:2"
            },
            "returnParameters": {
              "id": 2179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3423:0:2"
            },
            "scope": 3032,
            "src": "3338:1197:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2333,
              "nodeType": "Block",
              "src": "4825:254:2",
              "statements": [
                {
                  "assignments": [
                    2302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2302,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 2333,
                      "src": "4836:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2301,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4836:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2305,
                  "initialValue": {
                    "expression": {
                      "id": 2303,
                      "name": "validator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2294,
                      "src": "4853:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 2304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4853:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4836:33:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2307,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2302,
                          "src": "4887:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "323536",
                          "id": 2308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4897:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_256_by_1",
                            "typeString": "int_const 256"
                          },
                          "value": "256"
                        },
                        "src": "4887:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f686f7274466163746f72792d696e7669746556616c696461746f724d756c7469706c653a204c69737420746f6f206c6f6e67",
                        "id": 2310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4902:54:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6addea8f69b9f09bff63a8fd0d0f4ac273224e1a8f6601c0e5c20195de4bdc6b",
                          "typeString": "literal_string \"CohortFactory-inviteValidatorMultiple: List too long\""
                        },
                        "value": "CohortFactory-inviteValidatorMultiple: List too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6addea8f69b9f09bff63a8fd0d0f4ac273224e1a8f6601c0e5c20195de4bdc6b",
                          "typeString": "literal_string \"CohortFactory-inviteValidatorMultiple: List too long\""
                        }
                      ],
                      "id": 2306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4879:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4879:78:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2312,
                  "nodeType": "ExpressionStatement",
                  "src": "4879:78:2"
                },
                {
                  "body": {
                    "id": 2331,
                    "nodeType": "Block",
                    "src": "5004:69:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 2324,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2294,
                                "src": "5034:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 2326,
                              "indexExpression": {
                                "id": 2325,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2314,
                                "src": "5044:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5034:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2327,
                              "name": "audit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2296,
                              "src": "5048:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                "typeString": "enum CohortFactory.AuditTypes"
                              }
                            },
                            {
                              "id": 2328,
                              "name": "cohort",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2298,
                              "src": "5055:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                "typeString": "enum CohortFactory.AuditTypes"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2323,
                            "name": "inviteValidator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2290,
                            "src": "5018:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_AuditTypes_$1999_$_t_address_$returns$__$",
                              "typeString": "function (address,enum CohortFactory.AuditTypes,address)"
                            }
                          },
                          "id": 2329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5018:44:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2330,
                        "nodeType": "ExpressionStatement",
                        "src": "5018:44:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2317,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2314,
                      "src": "4987:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2318,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2302,
                      "src": "4991:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4987:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2332,
                  "initializationExpression": {
                    "assignments": [
                      2314
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2314,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2332,
                        "src": "4972:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2313,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4972:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2316,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4984:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4972:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4999:3:2",
                      "subExpression": {
                        "id": 2320,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2314,
                        "src": "4999:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2322,
                    "nodeType": "ExpressionStatement",
                    "src": "4999:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4967:106:2"
                }
              ]
            },
            "documentation": {
              "id": 2291,
              "nodeType": "StructuredDocumentation",
              "src": "4541:178:2",
              "text": " @dev Used by Enterprise to invite multiple validators in one call \n @param validator address of the validator to invite\n @param audit type of the audit"
            },
            "functionSelector": "ced02c8b",
            "id": 2334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inviteValidatorMultiple",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2294,
                  "mutability": "mutable",
                  "name": "validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "4757:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2292,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4757:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2293,
                    "nodeType": "ArrayTypeName",
                    "src": "4757:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2296,
                  "mutability": "mutable",
                  "name": "audit",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "4785:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AuditTypes_$1999",
                    "typeString": "enum CohortFactory.AuditTypes"
                  },
                  "typeName": {
                    "id": 2295,
                    "name": "AuditTypes",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1999,
                    "src": "4785:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                      "typeString": "enum CohortFactory.AuditTypes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2298,
                  "mutability": "mutable",
                  "name": "cohort",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "4803:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4803:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4756:62:2"
            },
            "returnParameters": {
              "id": 2300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4825:0:2"
            },
            "scope": 3032,
            "src": "4724:355:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2421,
              "nodeType": "Block",
              "src": "5361:1052:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2343,
                              "name": "invitations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2043,
                              "src": "5381:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                              }
                            },
                            "id": 2345,
                            "indexExpression": {
                              "id": 2344,
                              "name": "enterprise",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2337,
                              "src": "5393:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5381:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                              "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                            }
                          },
                          "id": 2346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5381:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 2347,
                          "name": "invitationNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2339,
                          "src": "5414:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5381:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f686f7274466163746f72793a616363657074496e7669746174696f6e202d205468697320696e7669746174696f6e20646f65736e2774206578697374",
                        "id": 2349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5432:64:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26c21c273a116f547bc94c5ca0bb3f3619c1beb14f87d7771c529649816a42b2",
                          "typeString": "literal_string \"CohortFactory:acceptInvitation - This invitation doesn't exist\""
                        },
                        "value": "CohortFactory:acceptInvitation - This invitation doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26c21c273a116f547bc94c5ca0bb3f3619c1beb14f87d7771c529649816a42b2",
                          "typeString": "literal_string \"CohortFactory:acceptInvitation - This invitation doesn't exist\""
                        }
                      ],
                      "id": 2342,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5372:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5372:125:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2351,
                  "nodeType": "ExpressionStatement",
                  "src": "5372:125:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2353,
                                "name": "invitations",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2043,
                                "src": "5516:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                }
                              },
                              "id": 2355,
                              "indexExpression": {
                                "id": 2354,
                                "name": "enterprise",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2337,
                                "src": "5528:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5516:23:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                              }
                            },
                            "id": 2357,
                            "indexExpression": {
                              "id": 2356,
                              "name": "invitationNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2339,
                              "src": "5540:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5516:41:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                              "typeString": "struct CohortFactory.Invitation storage ref"
                            }
                          },
                          "id": 2358,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "acceptanceDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2015,
                          "src": "5516:56:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5576:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5516:61:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f686f7274466163746f72793a616363657074496e7669746174696f6e2d205468697320696e7669746174696f6e20686173206265656e20616363657074656420616c7265616479202e",
                        "id": 2361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5579:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5af81e65e6513e94d4eea7d02f97b048d24ef68c5c10aa5fe907156a0f0fb92b",
                          "typeString": "literal_string \"CohortFactory:acceptInvitation- This invitation has been accepted already .\""
                        },
                        "value": "CohortFactory:acceptInvitation- This invitation has been accepted already ."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5af81e65e6513e94d4eea7d02f97b048d24ef68c5c10aa5fe907156a0f0fb92b",
                          "typeString": "literal_string \"CohortFactory:acceptInvitation- This invitation has been accepted already .\""
                        }
                      ],
                      "id": 2352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5507:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5507:150:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2363,
                  "nodeType": "ExpressionStatement",
                  "src": "5507:150:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2365,
                                "name": "invitations",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2043,
                                "src": "5676:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                }
                              },
                              "id": 2367,
                              "indexExpression": {
                                "id": 2366,
                                "name": "enterprise",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2337,
                                "src": "5688:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5676:23:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                              }
                            },
                            "id": 2369,
                            "indexExpression": {
                              "id": 2368,
                              "name": "invitationNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2339,
                              "src": "5700:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5676:41:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                              "typeString": "struct CohortFactory.Invitation storage ref"
                            }
                          },
                          "id": 2370,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "validator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2011,
                          "src": "5676:51:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2371,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5731:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5731:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5676:65:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f686f7274466163746f72793a616363657074496e7669746174696f6e202d20596f752061726520616363657074696e6720696e7669746174696f6e20746f20776869636820796f752077657265206e6f7420696e7669746564206f72207468697320696e7669746174696f6e20646f65736e27742065786973742e",
                        "id": 2374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5743:127:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a354293b2d701359204e635965701f59237ae47d1d7a71a09361490342b7265c",
                          "typeString": "literal_string \"CohortFactory:acceptInvitation - You are accepting invitation to which you were not invited or this invitation doesn't exist.\""
                        },
                        "value": "CohortFactory:acceptInvitation - You are accepting invitation to which you were not invited or this invitation doesn't exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a354293b2d701359204e635965701f59237ae47d1d7a71a09361490342b7265c",
                          "typeString": "literal_string \"CohortFactory:acceptInvitation - You are accepting invitation to which you were not invited or this invitation doesn't exist.\""
                        }
                      ],
                      "id": 2364,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5667:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5667:204:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2376,
                  "nodeType": "ExpressionStatement",
                  "src": "5667:204:2"
                },
                {
                  "expression": {
                    "id": 2385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2377,
                            "name": "invitations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2043,
                            "src": "5881:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                            }
                          },
                          "id": 2380,
                          "indexExpression": {
                            "id": 2378,
                            "name": "enterprise",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2337,
                            "src": "5893:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5881:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                            "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                          }
                        },
                        "id": 2381,
                        "indexExpression": {
                          "id": 2379,
                          "name": "invitationNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2339,
                          "src": "5905:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5881:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                          "typeString": "struct CohortFactory.Invitation storage ref"
                        }
                      },
                      "id": 2382,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "acceptanceDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2015,
                      "src": "5881:56:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2383,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5940:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5940:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5881:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2386,
                  "nodeType": "ExpressionStatement",
                  "src": "5881:74:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2387,
                            "name": "invitations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2043,
                            "src": "5974:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                            }
                          },
                          "id": 2389,
                          "indexExpression": {
                            "id": 2388,
                            "name": "enterprise",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2337,
                            "src": "5986:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5974:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                            "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                          }
                        },
                        "id": 2391,
                        "indexExpression": {
                          "id": 2390,
                          "name": "invitationNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2339,
                          "src": "5998:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5974:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                          "typeString": "struct CohortFactory.Invitation storage ref"
                        }
                      },
                      "id": 2392,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cohort",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2019,
                      "src": "5974:48:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6034:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6026:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2393,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6026:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6026:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5974:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2414,
                  "nodeType": "IfStatement",
                  "src": "5970:372:2",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2408,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6224:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6224:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 2400,
                                        "name": "invitations",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2043,
                                        "src": "6130:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 2402,
                                      "indexExpression": {
                                        "id": 2401,
                                        "name": "enterprise",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2337,
                                        "src": "6142:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6130:23:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                        "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                      }
                                    },
                                    "id": 2404,
                                    "indexExpression": {
                                      "id": 2403,
                                      "name": "invitationNumber",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2339,
                                      "src": "6154:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6130:41:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                      "typeString": "struct CohortFactory.Invitation storage ref"
                                    }
                                  },
                                  "id": 2405,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "cohort",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2019,
                                  "src": "6130:48:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2399,
                                "name": "ICohort",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3286,
                                "src": "6122:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICohort_$3286_$",
                                  "typeString": "type(contract ICohort)"
                                }
                              },
                              "id": 2406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6122:57:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICohort_$3286",
                                "typeString": "contract ICohort"
                              }
                            },
                            "id": 2407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addAdditionalValidator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3263,
                            "src": "6122:101:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) external returns (bool)"
                            }
                          },
                          "id": 2410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6122:113:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "436f686f7274466163746f72793a696e7669746556616c696461746f72202d2050726f626c656d20616464696e67206e65772076616c696461746f72",
                          "id": 2411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6258:62:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_669689d28b6791ae2d682549090a87958066ead5e77b6a40f07e9433f7690650",
                            "typeString": "literal_string \"CohortFactory:inviteValidator - Problem adding new validator\""
                          },
                          "value": "CohortFactory:inviteValidator - Problem adding new validator"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_669689d28b6791ae2d682549090a87958066ead5e77b6a40f07e9433f7690650",
                            "typeString": "literal_string \"CohortFactory:inviteValidator - Problem adding new validator\""
                          }
                        ],
                        "id": 2398,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "6093:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6093:249:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2413,
                    "nodeType": "ExpressionStatement",
                    "src": "6093:249:2"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2416,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6377:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6377:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2418,
                        "name": "invitationNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2339,
                        "src": "6389:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2415,
                      "name": "InvitationAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2070,
                      "src": "6358:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6358:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2420,
                  "nodeType": "EmitStatement",
                  "src": "6353:53:2"
                }
              ]
            },
            "documentation": {
              "id": 2335,
              "nodeType": "StructuredDocumentation",
              "src": "5085:192:2",
              "text": " @dev Used by Validator to accept Enterprise invitation\n @param enterprise address of the Enterprise who created invitation\n @param invitationNumber invitation number"
            },
            "functionSelector": "0ea02160",
            "id": 2422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptInvitation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2337,
                  "mutability": "mutable",
                  "name": "enterprise",
                  "nodeType": "VariableDeclaration",
                  "scope": 2422,
                  "src": "5308:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5308:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2339,
                  "mutability": "mutable",
                  "name": "invitationNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 2422,
                  "src": "5328:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5328:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5307:46:2"
            },
            "returnParameters": {
              "id": 2341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5361:0:2"
            },
            "scope": 3032,
            "src": "5282:1131:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2499,
              "nodeType": "Block",
              "src": "6729:566:2",
              "statements": [
                {
                  "body": {
                    "id": 2497,
                    "nodeType": "Block",
                    "src": "6800:489:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_AuditTypes_$1999",
                              "typeString": "enum CohortFactory.AuditTypes"
                            },
                            "id": 2454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2446,
                                    "name": "invitations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2043,
                                    "src": "6818:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 2449,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2447,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "6830:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2448,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6830:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6818:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                    "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                  }
                                },
                                "id": 2451,
                                "indexExpression": {
                                  "id": 2450,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2433,
                                  "src": "6842:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6818:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                  "typeString": "struct CohortFactory.Invitation storage ref"
                                }
                              },
                              "id": 2452,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "audits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2017,
                              "src": "6818:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                "typeString": "enum CohortFactory.AuditTypes"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2453,
                              "name": "audit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2427,
                              "src": "6855:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                "typeString": "enum CohortFactory.AuditTypes"
                              }
                            },
                            "src": "6818:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2455,
                                    "name": "invitations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2043,
                                    "src": "6881:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 2458,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2456,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "6893:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2457,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6893:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6881:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                    "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                  }
                                },
                                "id": 2460,
                                "indexExpression": {
                                  "id": 2459,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2433,
                                  "src": "6905:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6881:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                  "typeString": "struct CohortFactory.Invitation storage ref"
                                }
                              },
                              "id": 2461,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "validator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2011,
                              "src": "6881:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2462,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2425,
                              "src": "6922:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6881:50:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6818:113:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2496,
                        "nodeType": "IfStatement",
                        "src": "6814:465:2",
                        "trueBody": {
                          "id": 2495,
                          "nodeType": "Block",
                          "src": "6932:347:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 2473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 2465,
                                        "name": "invitations",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2043,
                                        "src": "6950:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 2469,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 2466,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "6962:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 2467,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "6962:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6950:23:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                        "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                      }
                                    },
                                    "id": 2470,
                                    "indexExpression": {
                                      "id": 2468,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2433,
                                      "src": "6974:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6950:26:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                      "typeString": "struct CohortFactory.Invitation storage ref"
                                    }
                                  },
                                  "id": 2471,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "deleted",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2021,
                                  "src": "6950:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 2472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6987:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "6950:41:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2474,
                              "nodeType": "ExpressionStatement",
                              "src": "6950:41:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2480,
                                        "name": "validator",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2425,
                                        "src": "7049:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 2481,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "7060:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 2482,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "7060:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 2477,
                                            "name": "cohort",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2429,
                                            "src": "7025:6:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 2476,
                                          "name": "ICohort",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3286,
                                          "src": "7017:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ICohort_$3286_$",
                                            "typeString": "type(contract ICohort)"
                                          }
                                        },
                                        "id": 2478,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7017:15:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ICohort_$3286",
                                          "typeString": "contract ICohort"
                                        }
                                      },
                                      "id": 2479,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "removeValidator",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3272,
                                      "src": "7017:31:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_bool_$",
                                        "typeString": "function (address,address) external returns (bool)"
                                      }
                                    },
                                    "id": 2483,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7017:54:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "436f686f7274466163746f72793a636c656172496e7669746174696f6e56616c696461746f72202d2050726f626c656d2072656d6f76696e672076616c696461746f7220696e20436f686f727420636f6e7472616374",
                                    "id": 2484,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7098:88:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_87916c74f88a06d65f718ff024424ef5e606e441482d68995a776e1dd4039ef7",
                                      "typeString": "literal_string \"CohortFactory:clearInvitationValidator - Problem removing validator in Cohort contract\""
                                    },
                                    "value": "CohortFactory:clearInvitationValidator - Problem removing validator in Cohort contract"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_87916c74f88a06d65f718ff024424ef5e606e441482d68995a776e1dd4039ef7",
                                      "typeString": "literal_string \"CohortFactory:clearInvitationValidator - Problem removing validator in Cohort contract\""
                                    }
                                  ],
                                  "id": 2475,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "7009:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7009:178:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2486,
                              "nodeType": "ExpressionStatement",
                              "src": "7009:178:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2488,
                                    "name": "validator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2425,
                                    "src": "7227:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2489,
                                    "name": "audit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2427,
                                    "src": "7238:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                      "typeString": "enum CohortFactory.AuditTypes"
                                    }
                                  },
                                  {
                                    "id": 2490,
                                    "name": "cohort",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2429,
                                    "src": "7245:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2491,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "7253:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2492,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7253:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                      "typeString": "enum CohortFactory.AuditTypes"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 2487,
                                  "name": "ValidatorCleared",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2094,
                                  "src": "7210:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_AuditTypes_$1999_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (address,enum CohortFactory.AuditTypes,address,address)"
                                  }
                                },
                                "id": 2493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7210:54:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2494,
                              "nodeType": "EmitStatement",
                              "src": "7205:59:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2436,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2433,
                      "src": "6760:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2437,
                          "name": "invitations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "6764:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                          }
                        },
                        "id": 2440,
                        "indexExpression": {
                          "expression": {
                            "id": 2438,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6776:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6776:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6764:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                          "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                        }
                      },
                      "id": 2441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6764:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6760:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2498,
                  "initializationExpression": {
                    "assignments": [
                      2433
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2433,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2498,
                        "src": "6745:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2432,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6745:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2435,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6757:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6745:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6796:3:2",
                      "subExpression": {
                        "id": 2443,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2433,
                        "src": "6796:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2445,
                    "nodeType": "ExpressionStatement",
                    "src": "6796:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6740:549:2"
                }
              ]
            },
            "documentation": {
              "id": 2423,
              "nodeType": "StructuredDocumentation",
              "src": "6419:205:2",
              "text": " @dev Used by Enterprise to remove existing validator\n @param validator validator to remove\n @param audit type of audit \n @param cohort cohort from which validator is removed"
            },
            "functionSelector": "8e02c1f4",
            "id": 2500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "clearInvitationRemoveValidator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2425,
                  "mutability": "mutable",
                  "name": "validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2500,
                  "src": "6669:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6669:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2427,
                  "mutability": "mutable",
                  "name": "audit",
                  "nodeType": "VariableDeclaration",
                  "scope": 2500,
                  "src": "6688:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AuditTypes_$1999",
                    "typeString": "enum CohortFactory.AuditTypes"
                  },
                  "typeName": {
                    "id": 2426,
                    "name": "AuditTypes",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1999,
                    "src": "6688:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                      "typeString": "enum CohortFactory.AuditTypes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2429,
                  "mutability": "mutable",
                  "name": "cohort",
                  "nodeType": "VariableDeclaration",
                  "scope": 2500,
                  "src": "6706:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6706:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6668:53:2"
            },
            "returnParameters": {
              "id": 2431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6729:0:2"
            },
            "scope": 3032,
            "src": "6629:666:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2565,
              "nodeType": "Block",
              "src": "7385:392:2",
              "statements": [
                {
                  "body": {
                    "id": 2563,
                    "nodeType": "Block",
                    "src": "7456:315:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_AuditTypes_$1999",
                              "typeString": "enum CohortFactory.AuditTypes"
                            },
                            "id": 2529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2521,
                                    "name": "invitations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2043,
                                    "src": "7474:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 2524,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2522,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "7486:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2523,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7486:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7474:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                    "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                  }
                                },
                                "id": 2526,
                                "indexExpression": {
                                  "id": 2525,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2508,
                                  "src": "7498:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7474:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                  "typeString": "struct CohortFactory.Invitation storage ref"
                                }
                              },
                              "id": 2527,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "audits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2017,
                              "src": "7474:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                "typeString": "enum CohortFactory.AuditTypes"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2528,
                              "name": "audit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2504,
                              "src": "7511:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                "typeString": "enum CohortFactory.AuditTypes"
                              }
                            },
                            "src": "7474:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2530,
                                    "name": "invitations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2043,
                                    "src": "7537:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 2533,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2531,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "7549:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2532,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7549:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7537:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                    "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                  }
                                },
                                "id": 2535,
                                "indexExpression": {
                                  "id": 2534,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2508,
                                  "src": "7561:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7537:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                  "typeString": "struct CohortFactory.Invitation storage ref"
                                }
                              },
                              "id": 2536,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "validator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2011,
                              "src": "7537:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2537,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2502,
                              "src": "7578:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7537:50:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7474:113:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2562,
                        "nodeType": "IfStatement",
                        "src": "7470:291:2",
                        "trueBody": {
                          "id": 2561,
                          "nodeType": "Block",
                          "src": "7588:173:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 2548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 2540,
                                        "name": "invitations",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2043,
                                        "src": "7606:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 2544,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 2541,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "7618:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 2542,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "7618:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7606:23:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                        "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                      }
                                    },
                                    "id": 2545,
                                    "indexExpression": {
                                      "id": 2543,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2508,
                                      "src": "7630:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7606:26:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                      "typeString": "struct CohortFactory.Invitation storage ref"
                                    }
                                  },
                                  "id": 2546,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "deleted",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2021,
                                  "src": "7606:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 2547,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7643:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "7606:41:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2549,
                              "nodeType": "ExpressionStatement",
                              "src": "7606:41:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2551,
                                    "name": "validator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2502,
                                    "src": "7703:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2552,
                                    "name": "audit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2504,
                                    "src": "7714:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                      "typeString": "enum CohortFactory.AuditTypes"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "307830",
                                        "id": 2555,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7729:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0x0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 2554,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7721:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2553,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7721:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2556,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7721:12:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2557,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "7735:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2558,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7735:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                      "typeString": "enum CohortFactory.AuditTypes"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 2550,
                                  "name": "ValidatorCleared",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2094,
                                  "src": "7686:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_AuditTypes_$1999_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (address,enum CohortFactory.AuditTypes,address,address)"
                                  }
                                },
                                "id": 2559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7686:60:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2560,
                              "nodeType": "EmitStatement",
                              "src": "7681:65:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2511,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2508,
                      "src": "7416:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2512,
                          "name": "invitations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "7420:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                          }
                        },
                        "id": 2515,
                        "indexExpression": {
                          "expression": {
                            "id": 2513,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7432:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7432:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7420:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                          "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                        }
                      },
                      "id": 2516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7420:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7416:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2564,
                  "initializationExpression": {
                    "assignments": [
                      2508
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2508,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2564,
                        "src": "7401:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2507,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7401:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2510,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7413:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7401:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7452:3:2",
                      "subExpression": {
                        "id": 2518,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2508,
                        "src": "7452:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2520,
                    "nodeType": "ExpressionStatement",
                    "src": "7452:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "7396:375:2"
                }
              ]
            },
            "functionSelector": "265fe4e7",
            "id": 2566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "clearInvitationRemoveValidator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2502,
                  "mutability": "mutable",
                  "name": "validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2566,
                  "src": "7341:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7341:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2504,
                  "mutability": "mutable",
                  "name": "audit",
                  "nodeType": "VariableDeclaration",
                  "scope": 2566,
                  "src": "7360:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AuditTypes_$1999",
                    "typeString": "enum CohortFactory.AuditTypes"
                  },
                  "typeName": {
                    "id": 2503,
                    "name": "AuditTypes",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1999,
                    "src": "7360:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                      "typeString": "enum CohortFactory.AuditTypes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7340:37:2"
            },
            "returnParameters": {
              "id": 2506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7385:0:2"
            },
            "scope": 3032,
            "src": "7301:476:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2602,
              "nodeType": "Block",
              "src": "8093:175:2",
              "statements": [
                {
                  "assignments": [
                    2577
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2577,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 2602,
                      "src": "8104:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2576,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8104:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2580,
                  "initialValue": {
                    "expression": {
                      "id": 2578,
                      "name": "enterprise",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2570,
                      "src": "8121:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "8121:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8104:34:2"
                },
                {
                  "body": {
                    "id": 2600,
                    "nodeType": "Block",
                    "src": "8185:77:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 2592,
                                "name": "enterprise",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2570,
                                "src": "8216:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 2594,
                              "indexExpression": {
                                "id": 2593,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2582,
                                "src": "8227:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8216:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 2595,
                                "name": "invitationNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2573,
                                "src": "8231:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 2597,
                              "indexExpression": {
                                "id": 2596,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2582,
                                "src": "8248:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8231:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2591,
                            "name": "acceptInvitation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2422,
                            "src": "8199:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8199:52:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2599,
                        "nodeType": "ExpressionStatement",
                        "src": "8199:52:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2585,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2582,
                      "src": "8168:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2586,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2577,
                      "src": "8172:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8168:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2601,
                  "initializationExpression": {
                    "assignments": [
                      2582
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2582,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2601,
                        "src": "8153:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2581,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8153:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2584,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8165:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8153:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8180:3:2",
                      "subExpression": {
                        "id": 2588,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "8180:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2590,
                    "nodeType": "ExpressionStatement",
                    "src": "8180:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "8148:114:2"
                }
              ]
            },
            "documentation": {
              "id": 2567,
              "nodeType": "StructuredDocumentation",
              "src": "7783:201:2",
              "text": " @dev Used by Validator to accept multiple Enterprise invitation\n @param enterprise address of the Enterprise who created invitation\n @param invitationNumber invitation number"
            },
            "functionSelector": "0939a997",
            "id": 2603,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptInvitationMultiple",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2570,
                  "mutability": "mutable",
                  "name": "enterprise",
                  "nodeType": "VariableDeclaration",
                  "scope": 2603,
                  "src": "8023:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2568,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8023:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2569,
                    "nodeType": "ArrayTypeName",
                    "src": "8023:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2573,
                  "mutability": "mutable",
                  "name": "invitationNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 2603,
                  "src": "8052:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2571,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8052:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2572,
                    "nodeType": "ArrayTypeName",
                    "src": "8052:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8022:64:2"
            },
            "returnParameters": {
              "id": 2575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8093:0:2"
            },
            "scope": 3032,
            "src": "7989:279:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2662,
              "nodeType": "Block",
              "src": "8557:338:2",
              "statements": [
                {
                  "assignments": [
                    2614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2614,
                      "mutability": "mutable",
                      "name": "count",
                      "nodeType": "VariableDeclaration",
                      "scope": 2662,
                      "src": "8568:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2613,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8568:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2615,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8568:13:2"
                },
                {
                  "body": {
                    "id": 2658,
                    "nodeType": "Block",
                    "src": "8648:219:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                "typeString": "enum CohortFactory.AuditTypes"
                              },
                              "id": 2636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2629,
                                      "name": "invitations",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2043,
                                      "src": "8666:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 2631,
                                    "indexExpression": {
                                      "id": 2630,
                                      "name": "enterprise",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2606,
                                      "src": "8678:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8666:23:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                      "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                    }
                                  },
                                  "id": 2633,
                                  "indexExpression": {
                                    "id": 2632,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2617,
                                    "src": "8690:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8666:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                    "typeString": "struct CohortFactory.Invitation storage ref"
                                  }
                                },
                                "id": 2634,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "audits",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2017,
                                "src": "8666:33:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                  "typeString": "enum CohortFactory.AuditTypes"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2635,
                                "name": "audit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2608,
                                "src": "8703:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                  "typeString": "enum CohortFactory.AuditTypes"
                                }
                              },
                              "src": "8666:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2637,
                                      "name": "invitations",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2043,
                                      "src": "8729:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 2639,
                                    "indexExpression": {
                                      "id": 2638,
                                      "name": "enterprise",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2606,
                                      "src": "8741:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8729:23:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                      "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                    }
                                  },
                                  "id": 2641,
                                  "indexExpression": {
                                    "id": 2640,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2617,
                                    "src": "8753:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8729:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                    "typeString": "struct CohortFactory.Invitation storage ref"
                                  }
                                },
                                "id": 2642,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "acceptanceDate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2015,
                                "src": "8729:41:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8774:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8729:46:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "8666:109:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 2652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "8795:35:2",
                            "subExpression": {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2646,
                                    "name": "invitations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2043,
                                    "src": "8796:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 2648,
                                  "indexExpression": {
                                    "id": 2647,
                                    "name": "enterprise",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2606,
                                    "src": "8808:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8796:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                    "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                  }
                                },
                                "id": 2650,
                                "indexExpression": {
                                  "id": 2649,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2617,
                                  "src": "8820:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8796:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                  "typeString": "struct CohortFactory.Invitation storage ref"
                                }
                              },
                              "id": 2651,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deleted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2021,
                              "src": "8796:34:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8666:164:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2657,
                        "nodeType": "IfStatement",
                        "src": "8662:194:2",
                        "trueBody": {
                          "expression": {
                            "id": 2655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8848:8:2",
                            "subExpression": {
                              "id": 2654,
                              "name": "count",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2614,
                              "src": "8848:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2656,
                          "nodeType": "ExpressionStatement",
                          "src": "8848:8:2"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2620,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2617,
                      "src": "8607:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2621,
                          "name": "invitations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "8611:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                          }
                        },
                        "id": 2623,
                        "indexExpression": {
                          "id": 2622,
                          "name": "enterprise",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2606,
                          "src": "8623:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8611:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                          "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                        }
                      },
                      "id": 2624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8611:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8607:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2659,
                  "initializationExpression": {
                    "assignments": [
                      2617
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2617,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2659,
                        "src": "8597:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2616,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8597:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2619,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8604:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8597:8:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "8643:3:2",
                      "subExpression": {
                        "id": 2626,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2617,
                        "src": "8645:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2628,
                    "nodeType": "ExpressionStatement",
                    "src": "8643:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "8592:275:2"
                },
                {
                  "expression": {
                    "id": 2660,
                    "name": "count",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2614,
                    "src": "8883:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2612,
                  "id": 2661,
                  "nodeType": "Return",
                  "src": "8876:12:2"
                }
              ]
            },
            "documentation": {
              "id": 2604,
              "nodeType": "StructuredDocumentation",
              "src": "8274:180:2",
              "text": " @dev To return invitation count\n @param enterprise address of the Enterprise who created invitation\n @param audit type\n @return count of invitations"
            },
            "functionSelector": "247e28b3",
            "id": 2663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnInvitationCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2606,
                  "mutability": "mutable",
                  "name": "enterprise",
                  "nodeType": "VariableDeclaration",
                  "scope": 2663,
                  "src": "8490:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8490:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2608,
                  "mutability": "mutable",
                  "name": "audit",
                  "nodeType": "VariableDeclaration",
                  "scope": 2663,
                  "src": "8510:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AuditTypes_$1999",
                    "typeString": "enum CohortFactory.AuditTypes"
                  },
                  "typeName": {
                    "id": 2607,
                    "name": "AuditTypes",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1999,
                    "src": "8510:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                      "typeString": "enum CohortFactory.AuditTypes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8489:38:2"
            },
            "returnParameters": {
              "id": 2612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2611,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2663,
                  "src": "8548:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8548:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8547:9:2"
            },
            "scope": 3032,
            "src": "8459:436:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2740,
              "nodeType": "Block",
              "src": "9318:462:2",
              "statements": [
                {
                  "body": {
                    "id": 2734,
                    "nodeType": "Block",
                    "src": "9385:358:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                "typeString": "enum CohortFactory.AuditTypes"
                              },
                              "id": 2697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2690,
                                      "name": "invitations",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2043,
                                      "src": "9403:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 2692,
                                    "indexExpression": {
                                      "id": 2691,
                                      "name": "enterprise",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2666,
                                      "src": "9415:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9403:23:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                      "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                    }
                                  },
                                  "id": 2694,
                                  "indexExpression": {
                                    "id": 2693,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2678,
                                    "src": "9427:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9403:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                    "typeString": "struct CohortFactory.Invitation storage ref"
                                  }
                                },
                                "id": 2695,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "audits",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2017,
                                "src": "9403:33:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                  "typeString": "enum CohortFactory.AuditTypes"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2696,
                                "name": "audits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2670,
                                "src": "9440:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                  "typeString": "enum CohortFactory.AuditTypes"
                                }
                              },
                              "src": "9403:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2698,
                                      "name": "invitations",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2043,
                                      "src": "9467:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 2700,
                                    "indexExpression": {
                                      "id": 2699,
                                      "name": "enterprise",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2666,
                                      "src": "9479:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9467:23:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                      "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                    }
                                  },
                                  "id": 2702,
                                  "indexExpression": {
                                    "id": 2701,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2678,
                                    "src": "9491:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9467:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                    "typeString": "struct CohortFactory.Invitation storage ref"
                                  }
                                },
                                "id": 2703,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "validator",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2011,
                                "src": "9467:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2704,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2668,
                                "src": "9507:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "9467:49:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9403:113:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 2713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9536:35:2",
                            "subExpression": {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2707,
                                    "name": "invitations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2043,
                                    "src": "9537:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 2709,
                                  "indexExpression": {
                                    "id": 2708,
                                    "name": "enterprise",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2666,
                                    "src": "9549:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9537:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                    "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                  }
                                },
                                "id": 2711,
                                "indexExpression": {
                                  "id": 2710,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2678,
                                  "src": "9561:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9537:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                  "typeString": "struct CohortFactory.Invitation storage ref"
                                }
                              },
                              "id": 2712,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deleted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2021,
                              "src": "9537:34:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9403:168:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2733,
                        "nodeType": "IfStatement",
                        "src": "9399:334:2",
                        "trueBody": {
                          "id": 2732,
                          "nodeType": "Block",
                          "src": "9572:161:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 2715,
                                        "name": "invitations",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2043,
                                        "src": "9594:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 2717,
                                      "indexExpression": {
                                        "id": 2716,
                                        "name": "enterprise",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2666,
                                        "src": "9606:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9594:23:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                        "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                      }
                                    },
                                    "id": 2719,
                                    "indexExpression": {
                                      "id": 2718,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2678,
                                      "src": "9618:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9594:26:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                      "typeString": "struct CohortFactory.Invitation storage ref"
                                    }
                                  },
                                  "id": 2720,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "acceptanceDate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2015,
                                  "src": "9594:41:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2721,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9638:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "9594:45:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2727,
                              "nodeType": "IfStatement",
                              "src": "9590:90:2",
                              "trueBody": {
                                "expression": {
                                  "components": [
                                    {
                                      "hexValue": "74727565",
                                      "id": 2723,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9669:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    {
                                      "hexValue": "74727565",
                                      "id": 2724,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9675:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    }
                                  ],
                                  "id": 2725,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9668:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
                                    "typeString": "tuple(bool,bool)"
                                  }
                                },
                                "functionReturnParameters": 2676,
                                "id": 2726,
                                "nodeType": "Return",
                                "src": "9661:19:2"
                              }
                            },
                            {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "74727565",
                                    "id": 2728,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9706:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 2729,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9712:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  }
                                ],
                                "id": 2730,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9705:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
                                  "typeString": "tuple(bool,bool)"
                                }
                              },
                              "functionReturnParameters": 2676,
                              "id": 2731,
                              "nodeType": "Return",
                              "src": "9698:20:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2681,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2678,
                      "src": "9344:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2682,
                          "name": "invitations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "9348:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                          }
                        },
                        "id": 2684,
                        "indexExpression": {
                          "id": 2683,
                          "name": "enterprise",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2666,
                          "src": "9360:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9348:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                          "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                        }
                      },
                      "id": 2685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9348:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9344:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2735,
                  "initializationExpression": {
                    "assignments": [
                      2678
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2678,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2735,
                        "src": "9334:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2677,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9334:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2680,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9341:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9334:8:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "9380:3:2",
                      "subExpression": {
                        "id": 2687,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2678,
                        "src": "9382:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2689,
                    "nodeType": "ExpressionStatement",
                    "src": "9380:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "9329:414:2"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9760:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 2737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9767:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 2738,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9759:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
                      "typeString": "tuple(bool,bool)"
                    }
                  },
                  "functionReturnParameters": 2676,
                  "id": 2739,
                  "nodeType": "Return",
                  "src": "9752:21:2"
                }
              ]
            },
            "documentation": {
              "id": 2664,
              "nodeType": "StructuredDocumentation",
              "src": "8901:293:2",
              "text": " @dev Used to determine if validator has been invited and/or if validation has been accepted\n @param enterprise inviting party\n @param validator address of the validator\n @param audits types\n @return true if invited\n @return true if accepted invitation"
            },
            "functionSelector": "1f94fc3a",
            "id": 2741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidatorInvited",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2666,
                  "mutability": "mutable",
                  "name": "enterprise",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "9227:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9227:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2668,
                  "mutability": "mutable",
                  "name": "validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "9247:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9247:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2670,
                  "mutability": "mutable",
                  "name": "audits",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "9266:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AuditTypes_$1999",
                    "typeString": "enum CohortFactory.AuditTypes"
                  },
                  "typeName": {
                    "id": 2669,
                    "name": "AuditTypes",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1999,
                    "src": "9266:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                      "typeString": "enum CohortFactory.AuditTypes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9226:58:2"
            },
            "returnParameters": {
              "id": 2676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2673,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "9306:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9306:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2675,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "9312:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2674,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9312:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9305:12:2"
            },
            "scope": 3032,
            "src": "9199:581:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2824,
              "nodeType": "Block",
              "src": "10052:402:2",
              "statements": [
                {
                  "assignments": [
                    2757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2757,
                      "mutability": "mutable",
                      "name": "cohort",
                      "nodeType": "VariableDeclaration",
                      "scope": 2824,
                      "src": "10063:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2755,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10063:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2756,
                        "nodeType": "ArrayTypeName",
                        "src": "10063:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2766,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2761,
                            "name": "cohortList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2032,
                            "src": "10103:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)"
                            }
                          },
                          "id": 2763,
                          "indexExpression": {
                            "id": 2762,
                            "name": "enterprise",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2744,
                            "src": "10114:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10103:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage",
                            "typeString": "struct CohortFactory.Cohorts storage ref[] storage ref"
                          }
                        },
                        "id": 2764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "10103:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10089:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2758,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10093:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2759,
                        "nodeType": "ArrayTypeName",
                        "src": "10093:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 2765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10089:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10063:70:2"
                },
                {
                  "assignments": [
                    2771
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2771,
                      "mutability": "mutable",
                      "name": "audits",
                      "nodeType": "VariableDeclaration",
                      "scope": 2824,
                      "src": "10143:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2769,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10143:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2770,
                        "nodeType": "ArrayTypeName",
                        "src": "10143:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2780,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2775,
                            "name": "cohortList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2032,
                            "src": "10183:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)"
                            }
                          },
                          "id": 2777,
                          "indexExpression": {
                            "id": 2776,
                            "name": "enterprise",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2744,
                            "src": "10194:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10183:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage",
                            "typeString": "struct CohortFactory.Cohorts storage ref[] storage ref"
                          }
                        },
                        "id": 2778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "10183:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10169:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2772,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10173:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2773,
                        "nodeType": "ArrayTypeName",
                        "src": "10173:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 2779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10169:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10143:70:2"
                },
                {
                  "body": {
                    "id": 2818,
                    "nodeType": "Block",
                    "src": "10279:136:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 2802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2793,
                              "name": "cohort",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2757,
                              "src": "10293:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2795,
                            "indexExpression": {
                              "id": 2794,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2782,
                              "src": "10300:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10293:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2796,
                                  "name": "cohortList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2032,
                                  "src": "10305:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)"
                                  }
                                },
                                "id": 2798,
                                "indexExpression": {
                                  "id": 2797,
                                  "name": "enterprise",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2744,
                                  "src": "10316:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10305:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage",
                                  "typeString": "struct CohortFactory.Cohorts storage ref[] storage ref"
                                }
                              },
                              "id": 2800,
                              "indexExpression": {
                                "id": 2799,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2782,
                                "src": "10328:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10305:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Cohorts_$2027_storage",
                                "typeString": "struct CohortFactory.Cohorts storage ref"
                              }
                            },
                            "id": 2801,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cohort",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2024,
                            "src": "10305:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10293:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2803,
                        "nodeType": "ExpressionStatement",
                        "src": "10293:44:2"
                      },
                      {
                        "expression": {
                          "id": 2816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2804,
                              "name": "audits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2771,
                              "src": "10351:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2806,
                            "indexExpression": {
                              "id": 2805,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2782,
                              "src": "10358:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10351:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2809,
                                      "name": "cohortList",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2032,
                                      "src": "10371:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 2811,
                                    "indexExpression": {
                                      "id": 2810,
                                      "name": "enterprise",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2744,
                                      "src": "10382:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10371:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage",
                                      "typeString": "struct CohortFactory.Cohorts storage ref[] storage ref"
                                    }
                                  },
                                  "id": 2813,
                                  "indexExpression": {
                                    "id": 2812,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2782,
                                    "src": "10394:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10371:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Cohorts_$2027_storage",
                                    "typeString": "struct CohortFactory.Cohorts storage ref"
                                  }
                                },
                                "id": 2814,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "audits",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2026,
                                "src": "10371:32:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                  "typeString": "enum CohortFactory.AuditTypes"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                  "typeString": "enum CohortFactory.AuditTypes"
                                }
                              ],
                              "id": 2808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10363:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2807,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10363:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10363:41:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10351:53:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2817,
                        "nodeType": "ExpressionStatement",
                        "src": "10351:53:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2784,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2782,
                      "src": "10240:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2785,
                          "name": "cohortList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2032,
                          "src": "10244:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)"
                          }
                        },
                        "id": 2787,
                        "indexExpression": {
                          "id": 2786,
                          "name": "enterprise",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2744,
                          "src": "10255:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10244:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage",
                          "typeString": "struct CohortFactory.Cohorts storage ref[] storage ref"
                        }
                      },
                      "id": 2788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10244:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10240:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2819,
                  "initializationExpression": {
                    "assignments": [
                      2782
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2782,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2819,
                        "src": "10229:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2781,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10229:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2783,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10229:9:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10275:3:2",
                      "subExpression": {
                        "id": 2790,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2782,
                        "src": "10275:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2792,
                    "nodeType": "ExpressionStatement",
                    "src": "10275:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "10224:191:2"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 2820,
                        "name": "cohort",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2757,
                        "src": "10432:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 2821,
                        "name": "audits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2771,
                        "src": "10440:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 2822,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10431:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 2752,
                  "id": 2823,
                  "nodeType": "Return",
                  "src": "10424:23:2"
                }
              ]
            },
            "documentation": {
              "id": 2742,
              "nodeType": "StructuredDocumentation",
              "src": "9787:161:2",
              "text": " @dev Used to return list of cohorts for enterprise\n @param enterprise inviting party\n @return cohort address \n @return audit type"
            },
            "functionSelector": "87247dea",
            "id": 2825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnCohorts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2744,
                  "mutability": "mutable",
                  "name": "enterprise",
                  "nodeType": "VariableDeclaration",
                  "scope": 2825,
                  "src": "9976:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9976:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9975:20:2"
            },
            "returnParameters": {
              "id": 2752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2748,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2825,
                  "src": "10017:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2746,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10017:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2747,
                    "nodeType": "ArrayTypeName",
                    "src": "10017:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2751,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2825,
                  "src": "10035:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2749,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10035:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2750,
                    "nodeType": "ArrayTypeName",
                    "src": "10035:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10016:36:2"
            },
            "scope": 3032,
            "src": "9953:501:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2869,
              "nodeType": "Block",
              "src": "10624:332:2",
              "statements": [
                {
                  "assignments": [
                    2835,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2835,
                      "mutability": "mutable",
                      "name": "cohorts",
                      "nodeType": "VariableDeclaration",
                      "scope": 2869,
                      "src": "10637:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10637:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2834,
                        "nodeType": "ArrayTypeName",
                        "src": "10637:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2840,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2837,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10681:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10681:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2836,
                      "name": "returnCohorts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2825,
                      "src": "10667:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address) view returns (address[] memory,uint256[] memory)"
                      }
                    },
                    "id": 2839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10667:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10636:56:2"
                },
                {
                  "assignments": [
                    2842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2842,
                      "mutability": "mutable",
                      "name": "totalOutstandingValidations",
                      "nodeType": "VariableDeclaration",
                      "scope": 2869,
                      "src": "10703:32:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2841,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10703:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2843,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10703:32:2"
                },
                {
                  "body": {
                    "expression": {
                      "id": 2864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2854,
                        "name": "totalOutstandingValidations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2842,
                        "src": "10800:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2855,
                          "name": "totalOutstandingValidations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2842,
                          "src": "10830:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 2857,
                                    "name": "cohorts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2835,
                                    "src": "10868:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 2859,
                                  "indexExpression": {
                                    "id": 2858,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2845,
                                    "src": "10876:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10868:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2856,
                                "name": "ICohort",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3286,
                                "src": "10860:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICohort_$3286_$",
                                  "typeString": "type(contract ICohort)"
                                }
                              },
                              "id": 2860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10860:19:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICohort_$3286",
                                "typeString": "contract ICohort"
                              }
                            },
                            "id": 2861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "outstandingValidations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3250,
                            "src": "10860:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10860:44:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10830:74:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10800:104:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2865,
                    "nodeType": "ExpressionStatement",
                    "src": "10800:104:2"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2847,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2845,
                      "src": "10763:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2848,
                        "name": "cohorts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2835,
                        "src": "10766:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10766:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10763:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2866,
                  "initializationExpression": {
                    "assignments": [
                      2845
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2845,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2866,
                        "src": "10752:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2844,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10752:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2846,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10752:9:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10782:3:2",
                      "subExpression": {
                        "id": 2851,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2845,
                        "src": "10782:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2853,
                    "nodeType": "ExpressionStatement",
                    "src": "10782:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "10747:157:2"
                },
                {
                  "expression": {
                    "id": 2867,
                    "name": "totalOutstandingValidations",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2842,
                    "src": "10922:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2830,
                  "id": 2868,
                  "nodeType": "Return",
                  "src": "10915:34:2"
                }
              ]
            },
            "documentation": {
              "id": 2826,
              "nodeType": "StructuredDocumentation",
              "src": "10461:86:2",
              "text": " @dev Function to calculate outstanding validations for enterprise. "
            },
            "functionSelector": "c535124e",
            "id": 2870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnOutstandingValidations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10592:2:2"
            },
            "returnParameters": {
              "id": 2830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2829,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2870,
                  "src": "10615:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10615:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10614:9:2"
            },
            "scope": 3032,
            "src": "10555:401:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3030,
              "nodeType": "Block",
              "src": "11163:1029:2",
              "statements": [
                {
                  "assignments": [
                    2880
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2880,
                      "mutability": "mutable",
                      "name": "validatorsList",
                      "nodeType": "VariableDeclaration",
                      "scope": 3030,
                      "src": "11173:31:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2878,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11173:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2879,
                        "nodeType": "ArrayTypeName",
                        "src": "11173:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2890,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2885,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "11243:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11243:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 2887,
                            "name": "audit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2873,
                            "src": "11255:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_AuditTypes_$1999",
                              "typeString": "enum CohortFactory.AuditTypes"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_enum$_AuditTypes_$1999",
                              "typeString": "enum CohortFactory.AuditTypes"
                            }
                          ],
                          "id": 2884,
                          "name": "returnInvitationCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2663,
                          "src": "11221:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_AuditTypes_$1999_$returns$_t_uint256_$",
                            "typeString": "function (address,enum CohortFactory.AuditTypes) view returns (uint256)"
                          }
                        },
                        "id": 2888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11221:40:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11207:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2881,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11211:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2882,
                        "nodeType": "ArrayTypeName",
                        "src": "11211:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 2889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11207:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11173:89:2"
                },
                {
                  "assignments": [
                    2892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2892,
                      "mutability": "mutable",
                      "name": "k",
                      "nodeType": "VariableDeclaration",
                      "scope": 3030,
                      "src": "11272:6:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2891,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11272:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2893,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11272:6:2"
                },
                {
                  "body": {
                    "id": 2944,
                    "nodeType": "Block",
                    "src": "11344:230:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_AuditTypes_$1999",
                              "typeString": "enum CohortFactory.AuditTypes"
                            },
                            "id": 2916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2908,
                                    "name": "invitations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2043,
                                    "src": "11362:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 2911,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2909,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "11374:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2910,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "11374:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11362:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                    "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                  }
                                },
                                "id": 2913,
                                "indexExpression": {
                                  "id": 2912,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2895,
                                  "src": "11386:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11362:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                  "typeString": "struct CohortFactory.Invitation storage ref"
                                }
                              },
                              "id": 2914,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "audits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2017,
                              "src": "11362:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                "typeString": "enum CohortFactory.AuditTypes"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2915,
                              "name": "audit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2873,
                              "src": "11399:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                "typeString": "enum CohortFactory.AuditTypes"
                              }
                            },
                            "src": "11362:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2917,
                                    "name": "invitations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2043,
                                    "src": "11408:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 2920,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2918,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "11420:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2919,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "11420:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11408:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                    "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                  }
                                },
                                "id": 2922,
                                "indexExpression": {
                                  "id": 2921,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2895,
                                  "src": "11432:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11408:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                  "typeString": "struct CohortFactory.Invitation storage ref"
                                }
                              },
                              "id": 2923,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "acceptanceDate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2015,
                              "src": "11408:41:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11452:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11408:45:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11362:91:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2943,
                        "nodeType": "IfStatement",
                        "src": "11358:206:2",
                        "trueBody": {
                          "id": 2942,
                          "nodeType": "Block",
                          "src": "11454:110:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 2937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2927,
                                    "name": "validatorsList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2880,
                                    "src": "11472:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 2929,
                                  "indexExpression": {
                                    "id": 2928,
                                    "name": "k",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2892,
                                    "src": "11487:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11472:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 2930,
                                        "name": "invitations",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2043,
                                        "src": "11492:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 2933,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 2931,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "11504:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 2932,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "11504:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11492:23:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                                        "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                                      }
                                    },
                                    "id": 2935,
                                    "indexExpression": {
                                      "id": 2934,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2895,
                                      "src": "11516:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11492:26:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Invitation_$2022_storage",
                                      "typeString": "struct CohortFactory.Invitation storage ref"
                                    }
                                  },
                                  "id": 2936,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "validator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2011,
                                  "src": "11492:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "11472:56:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2938,
                              "nodeType": "ExpressionStatement",
                              "src": "11472:56:2"
                            },
                            {
                              "expression": {
                                "id": 2940,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "11546:3:2",
                                "subExpression": {
                                  "id": 2939,
                                  "name": "k",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2892,
                                  "src": "11546:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2941,
                              "nodeType": "ExpressionStatement",
                              "src": "11546:3:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2898,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2895,
                      "src": "11303:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2899,
                          "name": "invitations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "11307:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)"
                          }
                        },
                        "id": 2902,
                        "indexExpression": {
                          "expression": {
                            "id": 2900,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "11319:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11319:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11307:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Invitation_$2022_storage_$dyn_storage",
                          "typeString": "struct CohortFactory.Invitation storage ref[] storage ref"
                        }
                      },
                      "id": 2903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11307:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11303:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2945,
                  "initializationExpression": {
                    "assignments": [
                      2895
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2895,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2945,
                        "src": "11293:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2894,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11293:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2897,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11300:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11293:8:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "11339:3:2",
                      "subExpression": {
                        "id": 2905,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "11341:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2907,
                    "nodeType": "ExpressionStatement",
                    "src": "11339:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "11288:286:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2947,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2892,
                          "src": "11591:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2948,
                            "name": "minValidatorPerCohort",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2009,
                            "src": "11596:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 2953,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 2951,
                                "name": "audit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2873,
                                "src": "11626:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                  "typeString": "enum CohortFactory.AuditTypes"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                  "typeString": "enum CohortFactory.AuditTypes"
                                }
                              ],
                              "id": 2950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11618:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2949,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11618:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11618:14:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11596:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11591:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f686f7274466163746f72793a637265617465436f686f7274202d204e756d626572206f662076616c696461746f72732062656c6f77207265717569726564206d696e696d756d2e",
                        "id": 2955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11635:75:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4103d5738ff40af2052004e0adc3aba7a7b54ef75ff53086451b82c0ec1beda9",
                          "typeString": "literal_string \"CohortFactory:createCohort - Number of validators below required minimum.\""
                        },
                        "value": "CohortFactory:createCohort - Number of validators below required minimum."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4103d5738ff40af2052004e0adc3aba7a7b54ef75ff53086451b82c0ec1beda9",
                          "typeString": "literal_string \"CohortFactory:createCohort - Number of validators below required minimum.\""
                        }
                      ],
                      "id": 2946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11583:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11583:128:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2957,
                  "nodeType": "ExpressionStatement",
                  "src": "11583:128:2"
                },
                {
                  "assignments": [
                    2959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2959,
                      "mutability": "mutable",
                      "name": "cohortAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3030,
                      "src": "11722:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2958,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11722:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2972,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2966,
                            "name": "audit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2873,
                            "src": "11801:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_AuditTypes_$1999",
                              "typeString": "enum CohortFactory.AuditTypes"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_AuditTypes_$1999",
                              "typeString": "enum CohortFactory.AuditTypes"
                            }
                          ],
                          "id": 2965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11793:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 2964,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11793:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11793:14:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2968,
                        "name": "validatorsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2880,
                        "src": "11810:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 2969,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11826:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11826:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2961,
                            "name": "createCohortAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2047,
                            "src": "11759:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2960,
                          "name": "CreateCohort",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3235,
                          "src": "11746:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CreateCohort_$3235_$",
                            "typeString": "type(contract CreateCohort)"
                          }
                        },
                        "id": 2962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11746:33:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CreateCohort_$3235",
                          "typeString": "contract CreateCohort"
                        }
                      },
                      "id": 2963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createCohort",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3234,
                      "src": "11746:46:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_address_$",
                        "typeString": "function (uint256,address[] memory,address) external returns (address)"
                      }
                    },
                    "id": 2971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11746:92:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11722:116:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 2973,
                          "name": "cohortList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2032,
                          "src": "11848:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)"
                          }
                        },
                        "id": 2976,
                        "indexExpression": {
                          "expression": {
                            "id": 2974,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "11859:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11859:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11848:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage",
                          "typeString": "struct CohortFactory.Cohorts storage ref[] storage ref"
                        }
                      },
                      "id": 2977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "11848:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$__$returns$_t_struct$_Cohorts_$2027_storage_$",
                        "typeString": "function () returns (struct CohortFactory.Cohorts storage ref)"
                      }
                    },
                    "id": 2978,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11848:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Cohorts_$2027_storage",
                      "typeString": "struct CohortFactory.Cohorts storage ref"
                    }
                  },
                  "id": 2979,
                  "nodeType": "ExpressionStatement",
                  "src": "11848:29:2"
                },
                {
                  "expression": {
                    "id": 2994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2980,
                            "name": "cohortList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2032,
                            "src": "11887:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)"
                            }
                          },
                          "id": 2990,
                          "indexExpression": {
                            "expression": {
                              "id": 2981,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "11898:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11898:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11887:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage",
                            "typeString": "struct CohortFactory.Cohorts storage ref[] storage ref"
                          }
                        },
                        "id": 2991,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2983,
                                "name": "cohortList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2032,
                                "src": "11910:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)"
                                }
                              },
                              "id": 2986,
                              "indexExpression": {
                                "expression": {
                                  "id": 2984,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "11921:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2985,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "11921:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11910:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage",
                                "typeString": "struct CohortFactory.Cohorts storage ref[] storage ref"
                              }
                            },
                            "id": 2987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11910:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 2988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11942:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "11910:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11887:57:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cohorts_$2027_storage",
                          "typeString": "struct CohortFactory.Cohorts storage ref"
                        }
                      },
                      "id": 2992,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "cohort",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2024,
                      "src": "11887:64:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2993,
                      "name": "cohortAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2959,
                      "src": "11954:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11887:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2995,
                  "nodeType": "ExpressionStatement",
                  "src": "11887:80:2"
                },
                {
                  "expression": {
                    "id": 3010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2996,
                            "name": "cohortList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2032,
                            "src": "11977:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)"
                            }
                          },
                          "id": 3006,
                          "indexExpression": {
                            "expression": {
                              "id": 2997,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "11988:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11988:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11977:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage",
                            "typeString": "struct CohortFactory.Cohorts storage ref[] storage ref"
                          }
                        },
                        "id": 3007,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2999,
                                "name": "cohortList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2032,
                                "src": "12000:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)"
                                }
                              },
                              "id": 3002,
                              "indexExpression": {
                                "expression": {
                                  "id": 3000,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "12011:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "12011:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12000:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Cohorts_$2027_storage_$dyn_storage",
                                "typeString": "struct CohortFactory.Cohorts storage ref[] storage ref"
                              }
                            },
                            "id": 3003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "12000:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 3004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12032:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "12000:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11977:57:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cohorts_$2027_storage",
                          "typeString": "struct CohortFactory.Cohorts storage ref"
                        }
                      },
                      "id": 3008,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "audits",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2026,
                      "src": "11977:64:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AuditTypes_$1999",
                        "typeString": "enum CohortFactory.AuditTypes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3009,
                      "name": "audit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2873,
                      "src": "12044:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AuditTypes_$1999",
                        "typeString": "enum CohortFactory.AuditTypes"
                      }
                    },
                    "src": "11977:72:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                      "typeString": "enum CohortFactory.AuditTypes"
                    }
                  },
                  "id": 3011,
                  "nodeType": "ExpressionStatement",
                  "src": "11977:72:2"
                },
                {
                  "expression": {
                    "id": 3019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3012,
                        "name": "cohortMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2036,
                        "src": "12060:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3014,
                      "indexExpression": {
                        "id": 3013,
                        "name": "cohortAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2959,
                        "src": "12070:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12060:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3017,
                          "name": "audit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2873,
                          "src": "12095:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AuditTypes_$1999",
                            "typeString": "enum CohortFactory.AuditTypes"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_AuditTypes_$1999",
                            "typeString": "enum CohortFactory.AuditTypes"
                          }
                        ],
                        "id": 3016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12087:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 3015,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12087:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12087:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12060:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3020,
                  "nodeType": "ExpressionStatement",
                  "src": "12060:41:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3022,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12131:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12131:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3024,
                        "name": "cohortAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2959,
                        "src": "12143:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3026,
                            "name": "audit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2873,
                            "src": "12169:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_AuditTypes_$1999",
                              "typeString": "enum CohortFactory.AuditTypes"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_AuditTypes_$1999",
                              "typeString": "enum CohortFactory.AuditTypes"
                            }
                          ],
                          "id": 3025,
                          "name": "AuditTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1999,
                          "src": "12158:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_AuditTypes_$1999_$",
                            "typeString": "type(enum CohortFactory.AuditTypes)"
                          }
                        },
                        "id": 3027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12158:17:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AuditTypes_$1999",
                          "typeString": "enum CohortFactory.AuditTypes"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_AuditTypes_$1999",
                          "typeString": "enum CohortFactory.AuditTypes"
                        }
                      ],
                      "id": 3021,
                      "name": "CohortCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2078,
                      "src": "12117:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_enum$_AuditTypes_$1999_$returns$__$",
                        "typeString": "function (address,address,enum CohortFactory.AuditTypes)"
                      }
                    },
                    "id": 3028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12117:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3029,
                  "nodeType": "EmitStatement",
                  "src": "12112:64:2"
                }
              ]
            },
            "documentation": {
              "id": 2871,
              "nodeType": "StructuredDocumentation",
              "src": "10962:149:2",
              "text": " @dev Initiate creation a new cohort using create2 methods based on the audit type and enterprise combination\n @param audit type"
            },
            "functionSelector": "7c915c86",
            "id": 3031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCohort",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2873,
                  "mutability": "mutable",
                  "name": "audit",
                  "nodeType": "VariableDeclaration",
                  "scope": 3031,
                  "src": "11138:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AuditTypes_$1999",
                    "typeString": "enum CohortFactory.AuditTypes"
                  },
                  "typeName": {
                    "id": 2872,
                    "name": "AuditTypes",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1999,
                    "src": "11138:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                      "typeString": "enum CohortFactory.AuditTypes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11137:18:2"
            },
            "returnParameters": {
              "id": 2875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11163:0:2"
            },
            "scope": 3032,
            "src": "11116:1076:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3033,
        "src": "432:11762:2"
      }
    ],
    "src": "32:12163:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Auditchain/CohortFactory.sol",
      "exportedSymbols": {
        "AccessControl": [
          7249
        ],
        "Address": [
          9958
        ],
        "AuditToken": [
          1018
        ],
        "Cohort": [
          1983
        ],
        "CohortFactory": [
          3032
        ],
        "Context": [
          9981
        ],
        "CreateCohort": [
          3235
        ],
        "ERC20": [
          8176
        ],
        "ERC20Burnable": [
          8235
        ],
        "EnumerableSet": [
          11033
        ],
        "ICohort": [
          3286
        ],
        "ICohortFactory": [
          3305
        ],
        "IERC20": [
          8313
        ],
        "Locked": [
          6717
        ],
        "Members": [
          4710
        ],
        "MigrationAgent": [
          6728
        ],
        "Pausable": [
          11125
        ],
        "SafeERC20": [
          8526
        ],
        "SafeMath": [
          7673
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "=",
            "0.7",
            ".6"
          ]
        },
        "id": 1985,
        "name": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1986,
        "name": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "attributes": {
          "SourceUnit": 7250,
          "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
          "file": "@openzeppelin/contracts/access/AccessControl.sol",
          "scope": 3033,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1987,
        "name": "ImportDirective",
        "src": "90:58:2"
      },
      {
        "attributes": {
          "SourceUnit": 4711,
          "absolutePath": "/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Auditchain/Members.sol",
          "file": "./Members.sol",
          "scope": 3033,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1988,
        "name": "ImportDirective",
        "src": "149:23:2"
      },
      {
        "attributes": {
          "SourceUnit": 3236,
          "absolutePath": "/home/bogdan/Ethereum/Projects/TGE/Core-Smart-Contracts-v1/contracts/Auditchain/CreateCohort.sol",
          "file": "./CreateCohort.sol",
          "scope": 3033,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1989,
        "name": "ImportDirective",
        "src": "173:28:2"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            7249,
            9981
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            3032,
            7249,
            9981
          ],
          "name": "CohortFactory",
          "scope": 3033
        },
        "children": [
          {
            "attributes": {
              "text": " @title CohortFactory\n Allows on creation of invitations by Enterprise and acceptance of Validators of those \n invitations. Finally Enterprise can create cohort consisting of invited Validators\n and Enterprise. "
            },
            "id": 1990,
            "name": "StructuredDocumentation",
            "src": "203:227:2"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "AccessControl",
                  "referencedDeclaration": 7249,
                  "type": "contract AccessControl"
                },
                "id": 1991,
                "name": "UserDefinedTypeName",
                "src": "459:13:2"
              }
            ],
            "id": 1992,
            "name": "InheritanceSpecifier",
            "src": "459:13:2"
          },
          {
            "attributes": {
              "canonicalName": "CohortFactory.AuditTypes",
              "name": "AuditTypes"
            },
            "children": [
              {
                "attributes": {
                  "name": "Financial"
                },
                "id": 1993,
                "name": "EnumValue",
                "src": "575:9:2"
              },
              {
                "attributes": {
                  "name": "System"
                },
                "id": 1994,
                "name": "EnumValue",
                "src": "586:6:2"
              },
              {
                "attributes": {
                  "name": "Rules"
                },
                "id": 1995,
                "name": "EnumValue",
                "src": "594:5:2"
              },
              {
                "attributes": {
                  "name": "NFT"
                },
                "id": 1996,
                "name": "EnumValue",
                "src": "601:3:2"
              },
              {
                "attributes": {
                  "name": "Type5"
                },
                "id": 1997,
                "name": "EnumValue",
                "src": "606:5:2"
              },
              {
                "attributes": {
                  "name": "Type6"
                },
                "id": 1998,
                "name": "EnumValue",
                "src": "613:5:2"
              }
            ],
            "id": 1999,
            "name": "EnumDefinition",
            "src": "549:75:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "45f49bb0",
              "mutability": "mutable",
              "name": "minValidatorPerCohort",
              "scope": 3032,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256[]",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "uint256[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 2000,
                    "name": "ElementaryTypeName",
                    "src": "630:7:2"
                  }
                ],
                "id": 2001,
                "name": "ArrayTypeName",
                "src": "630:9:2"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isInlineArray": true,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "type": "uint8[6] memory"
                },
                "children": [
                  {
                    "attributes": {
                      "hexvalue": "33",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 3",
                      "value": "3"
                    },
                    "id": 2002,
                    "name": "Literal",
                    "src": "672:1:2"
                  },
                  {
                    "attributes": {
                      "hexvalue": "33",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 3",
                      "value": "3"
                    },
                    "id": 2003,
                    "name": "Literal",
                    "src": "674:1:2"
                  },
                  {
                    "attributes": {
                      "hexvalue": "33",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 3",
                      "value": "3"
                    },
                    "id": 2004,
                    "name": "Literal",
                    "src": "676:1:2"
                  },
                  {
                    "attributes": {
                      "hexvalue": "33",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 3",
                      "value": "3"
                    },
                    "id": 2005,
                    "name": "Literal",
                    "src": "678:1:2"
                  },
                  {
                    "attributes": {
                      "hexvalue": "33",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 3",
                      "value": "3"
                    },
                    "id": 2006,
                    "name": "Literal",
                    "src": "680:1:2"
                  },
                  {
                    "attributes": {
                      "hexvalue": "33",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 3",
                      "value": "3"
                    },
                    "id": 2007,
                    "name": "Literal",
                    "src": "682:1:2"
                  }
                ],
                "id": 2008,
                "name": "TupleExpression",
                "src": "671:13:2"
              }
            ],
            "id": 2009,
            "name": "VariableDeclaration",
            "src": "630:54:2"
          },
          {
            "attributes": {
              "canonicalName": "CohortFactory.Invitation",
              "name": "Invitation",
              "scope": 3032,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "validator",
                  "scope": 2022,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 2010,
                    "name": "ElementaryTypeName",
                    "src": "808:7:2"
                  }
                ],
                "id": 2011,
                "name": "VariableDeclaration",
                "src": "808:17:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "invitationDate",
                  "scope": 2022,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 2012,
                    "name": "ElementaryTypeName",
                    "src": "835:7:2"
                  }
                ],
                "id": 2013,
                "name": "VariableDeclaration",
                "src": "835:22:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "acceptanceDate",
                  "scope": 2022,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 2014,
                    "name": "ElementaryTypeName",
                    "src": "873:7:2"
                  }
                ],
                "id": 2015,
                "name": "VariableDeclaration",
                "src": "873:22:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "audits",
                  "scope": 2022,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum CohortFactory.AuditTypes",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "AuditTypes",
                      "referencedDeclaration": 1999,
                      "type": "enum CohortFactory.AuditTypes"
                    },
                    "id": 2016,
                    "name": "UserDefinedTypeName",
                    "src": "905:10:2"
                  }
                ],
                "id": 2017,
                "name": "VariableDeclaration",
                "src": "905:17:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "cohort",
                  "scope": 2022,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 2018,
                    "name": "ElementaryTypeName",
                    "src": "932:7:2"
                  }
                ],
                "id": 2019,
                "name": "VariableDeclaration",
                "src": "932:14:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "deleted",
                  "scope": 2022,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 2020,
                    "name": "ElementaryTypeName",
                    "src": "956:4:2"
                  }
                ],
                "id": 2021,
                "name": "VariableDeclaration",
                "src": "956:12:2"
              }
            ],
            "id": 2022,
            "name": "StructDefinition",
            "src": "749:226:2"
          },
          {
            "attributes": {
              "canonicalName": "CohortFactory.Cohorts",
              "name": "Cohorts",
              "scope": 3032,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "cohort",
                  "scope": 2027,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 2023,
                    "name": "ElementaryTypeName",
                    "src": "1006:7:2"
                  }
                ],
                "id": 2024,
                "name": "VariableDeclaration",
                "src": "1006:14:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "audits",
                  "scope": 2027,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum CohortFactory.AuditTypes",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "AuditTypes",
                      "referencedDeclaration": 1999,
                      "type": "enum CohortFactory.AuditTypes"
                    },
                    "id": 2025,
                    "name": "UserDefinedTypeName",
                    "src": "1030:10:2"
                  }
                ],
                "id": 2026,
                "name": "VariableDeclaration",
                "src": "1030:17:2"
              }
            ],
            "id": 2027,
            "name": "StructDefinition",
            "src": "981:73:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "a70e0393",
              "mutability": "mutable",
              "name": "cohortList",
              "scope": 3032,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct CohortFactory.Cohorts[])",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct CohortFactory.Cohorts[])"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 2028,
                    "name": "ElementaryTypeName",
                    "src": "1068:7:2"
                  },
                  {
                    "attributes": {
                      "type": "struct CohortFactory.Cohorts[]"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Cohorts",
                          "referencedDeclaration": 2027,
                          "type": "struct CohortFactory.Cohorts"
                        },
                        "id": 2029,
                        "name": "UserDefinedTypeName",
                        "src": "1079:7:2"
                      }
                    ],
                    "id": 2030,
                    "name": "ArrayTypeName",
                    "src": "1079:9:2"
                  }
                ],
                "id": 2031,
                "name": "Mapping",
                "src": "1060:29:2"
              }
            ],
            "id": 2032,
            "name": "VariableDeclaration",
            "src": "1060:47:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "4b524e07",
              "mutability": "mutable",
              "name": "cohortMap",
              "scope": 3032,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 2033,
                    "name": "ElementaryTypeName",
                    "src": "1121:7:2"
                  },
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 2034,
                    "name": "ElementaryTypeName",
                    "src": "1132:7:2"
                  }
                ],
                "id": 2035,
                "name": "Mapping",
                "src": "1113:27:2"
              }
            ],
            "id": 2036,
            "name": "VariableDeclaration",
            "src": "1113:44:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "members",
              "scope": 3032,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Members",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "Members",
                  "referencedDeclaration": 4710,
                  "type": "contract Members"
                },
                "id": 2037,
                "name": "UserDefinedTypeName",
                "src": "1164:7:2"
              }
            ],
            "id": 2038,
            "name": "VariableDeclaration",
            "src": "1164:15:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "8ffb72f4",
              "mutability": "mutable",
              "name": "invitations",
              "scope": 3032,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct CohortFactory.Invitation[])",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct CohortFactory.Invitation[])"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 2039,
                    "name": "ElementaryTypeName",
                    "src": "1270:7:2"
                  },
                  {
                    "attributes": {
                      "type": "struct CohortFactory.Invitation[]"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Invitation",
                          "referencedDeclaration": 2022,
                          "type": "struct CohortFactory.Invitation"
                        },
                        "id": 2040,
                        "name": "UserDefinedTypeName",
                        "src": "1282:10:2"
                      }
                    ],
                    "id": 2041,
                    "name": "ArrayTypeName",
                    "src": "1282:12:2"
                  }
                ],
                "id": 2042,
                "name": "Mapping",
                "src": "1261:34:2"
              }
            ],
            "id": 2043,
            "name": "VariableDeclaration",
            "src": "1261:53:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "platformAddress",
              "scope": 3032,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 2044,
                "name": "ElementaryTypeName",
                "src": "1345:7:2"
              }
            ],
            "id": 2045,
            "name": "VariableDeclaration",
            "src": "1345:23:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "createCohortAddress",
              "scope": 3032,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 2046,
                "name": "ElementaryTypeName",
                "src": "1445:7:2"
              }
            ],
            "id": 2047,
            "name": "VariableDeclaration",
            "src": "1445:27:2"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "a2011b3f",
              "mutability": "constant",
              "name": "SETTER_ROLE",
              "scope": 3032,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 2048,
                "name": "ElementaryTypeName",
                "src": "1479:7:2"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "bytes32",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_61c92169ef077349011ff0b1383c894d86c5f0b41d986366b58a6cf31e93beda",
                          "typeString": "literal_string \"SETTER_ROLE\""
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 4294967288,
                      "type": "function (bytes memory) pure returns (bytes32)",
                      "value": "keccak256"
                    },
                    "id": 2049,
                    "name": "Identifier",
                    "src": "1518:9:2"
                  },
                  {
                    "attributes": {
                      "hexvalue": "5345545445525f524f4c45",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"SETTER_ROLE\"",
                      "value": "SETTER_ROLE"
                    },
                    "id": 2050,
                    "name": "Literal",
                    "src": "1528:13:2"
                  }
                ],
                "id": 2051,
                "name": "FunctionCall",
                "src": "1518:24:2"
              }
            ],
            "id": 2052,
            "name": "VariableDeclaration",
            "src": "1479:63:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "ValidatorInvited"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "inviting",
                      "scope": 2064,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2053,
                        "name": "ElementaryTypeName",
                        "src": "1572:7:2"
                      }
                    ],
                    "id": 2054,
                    "name": "VariableDeclaration",
                    "src": "1572:17:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "invitee",
                      "scope": 2064,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2055,
                        "name": "ElementaryTypeName",
                        "src": "1591:7:2"
                      }
                    ],
                    "id": 2056,
                    "name": "VariableDeclaration",
                    "src": "1591:23:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "audits",
                      "scope": 2064,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum CohortFactory.AuditTypes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "AuditTypes",
                          "referencedDeclaration": 1999,
                          "type": "enum CohortFactory.AuditTypes"
                        },
                        "id": 2057,
                        "name": "UserDefinedTypeName",
                        "src": "1616:10:2"
                      }
                    ],
                    "id": 2058,
                    "name": "VariableDeclaration",
                    "src": "1616:17:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "invitationNumber",
                      "scope": 2064,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2059,
                        "name": "ElementaryTypeName",
                        "src": "1635:7:2"
                      }
                    ],
                    "id": 2060,
                    "name": "VariableDeclaration",
                    "src": "1635:24:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "cohort",
                      "scope": 2064,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2061,
                        "name": "ElementaryTypeName",
                        "src": "1661:7:2"
                      }
                    ],
                    "id": 2062,
                    "name": "VariableDeclaration",
                    "src": "1661:14:2"
                  }
                ],
                "id": 2063,
                "name": "ParameterList",
                "src": "1571:105:2"
              }
            ],
            "id": 2064,
            "name": "EventDefinition",
            "src": "1549:128:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "InvitationAccepted"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "validator",
                      "scope": 2070,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2065,
                        "name": "ElementaryTypeName",
                        "src": "1707:7:2"
                      }
                    ],
                    "id": 2066,
                    "name": "VariableDeclaration",
                    "src": "1707:25:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "invitationNumber",
                      "scope": 2070,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2067,
                        "name": "ElementaryTypeName",
                        "src": "1734:7:2"
                      }
                    ],
                    "id": 2068,
                    "name": "VariableDeclaration",
                    "src": "1734:24:2"
                  }
                ],
                "id": 2069,
                "name": "ParameterList",
                "src": "1706:53:2"
              }
            ],
            "id": 2070,
            "name": "EventDefinition",
            "src": "1682:78:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "CohortCreated"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "enterprise",
                      "scope": 2078,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2071,
                        "name": "ElementaryTypeName",
                        "src": "1785:7:2"
                      }
                    ],
                    "id": 2072,
                    "name": "VariableDeclaration",
                    "src": "1785:26:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "cohort",
                      "scope": 2078,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2073,
                        "name": "ElementaryTypeName",
                        "src": "1813:7:2"
                      }
                    ],
                    "id": 2074,
                    "name": "VariableDeclaration",
                    "src": "1813:14:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "audits",
                      "scope": 2078,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum CohortFactory.AuditTypes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "AuditTypes",
                          "referencedDeclaration": 1999,
                          "type": "enum CohortFactory.AuditTypes"
                        },
                        "id": 2075,
                        "name": "UserDefinedTypeName",
                        "src": "1829:10:2"
                      }
                    ],
                    "id": 2076,
                    "name": "VariableDeclaration",
                    "src": "1829:17:2"
                  }
                ],
                "id": 2077,
                "name": "ParameterList",
                "src": "1784:63:2"
              }
            ],
            "id": 2078,
            "name": "EventDefinition",
            "src": "1765:83:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "UpdateMinValidatorsPerCohort"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "minValidatorPerCohort",
                      "scope": 2084,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2079,
                        "name": "ElementaryTypeName",
                        "src": "1888:7:2"
                      }
                    ],
                    "id": 2080,
                    "name": "VariableDeclaration",
                    "src": "1888:29:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "audits",
                      "scope": 2084,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum CohortFactory.AuditTypes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "AuditTypes",
                          "referencedDeclaration": 1999,
                          "type": "enum CohortFactory.AuditTypes"
                        },
                        "id": 2081,
                        "name": "UserDefinedTypeName",
                        "src": "1919:10:2"
                      }
                    ],
                    "id": 2082,
                    "name": "VariableDeclaration",
                    "src": "1919:17:2"
                  }
                ],
                "id": 2083,
                "name": "ParameterList",
                "src": "1887:50:2"
              }
            ],
            "id": 2084,
            "name": "EventDefinition",
            "src": "1853:85:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "ValidatorCleared"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "validator",
                      "scope": 2094,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2085,
                        "name": "ElementaryTypeName",
                        "src": "1966:7:2"
                      }
                    ],
                    "id": 2086,
                    "name": "VariableDeclaration",
                    "src": "1966:17:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "audit",
                      "scope": 2094,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum CohortFactory.AuditTypes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "AuditTypes",
                          "referencedDeclaration": 1999,
                          "type": "enum CohortFactory.AuditTypes"
                        },
                        "id": 2087,
                        "name": "UserDefinedTypeName",
                        "src": "1985:10:2"
                      }
                    ],
                    "id": 2088,
                    "name": "VariableDeclaration",
                    "src": "1985:16:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "cohort",
                      "scope": 2094,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2089,
                        "name": "ElementaryTypeName",
                        "src": "2003:7:2"
                      }
                    ],
                    "id": 2090,
                    "name": "VariableDeclaration",
                    "src": "2003:14:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "enterprise",
                      "scope": 2094,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2091,
                        "name": "ElementaryTypeName",
                        "src": "2019:7:2"
                      }
                    ],
                    "id": 2092,
                    "name": "VariableDeclaration",
                    "src": "2019:18:2"
                  }
                ],
                "id": 2093,
                "name": "ParameterList",
                "src": "1965:73:2"
              }
            ],
            "id": 2094,
            "name": "EventDefinition",
            "src": "1943:96:2"
          },
          {
            "attributes": {
              "name": "isSetter",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev check if caller is a setter     "
                },
                "id": 2095,
                "name": "StructuredDocumentation",
                "src": "2045:41:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2096,
                "name": "ParameterList",
                "src": "2109:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a72327b53a9c7390cded355a3af25aefd509fbf8479cbd3d27372ce9badb6a7e",
                                  "typeString": "literal_string \"Members:isSetter - Caller is not a setter\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2097,
                            "name": "Identifier",
                            "src": "2119:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7038,
                                  "type": "function (bytes32,address) view returns (bool)",
                                  "value": "hasRole"
                                },
                                "id": 2098,
                                "name": "Identifier",
                                "src": "2127:7:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2052,
                                  "type": "bytes32",
                                  "value": "SETTER_ROLE"
                                },
                                "id": 2099,
                                "name": "Identifier",
                                "src": "2135:11:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 2100,
                                    "name": "Identifier",
                                    "src": "2148:3:2"
                                  }
                                ],
                                "id": 2101,
                                "name": "MemberAccess",
                                "src": "2148:10:2"
                              }
                            ],
                            "id": 2102,
                            "name": "FunctionCall",
                            "src": "2127:32:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d656d626572733a6973536574746572202d2043616c6c6572206973206e6f74206120736574746572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Members:isSetter - Caller is not a setter\"",
                              "value": "Members:isSetter - Caller is not a setter"
                            },
                            "id": 2103,
                            "name": "Literal",
                            "src": "2161:43:2"
                          }
                        ],
                        "id": 2104,
                        "name": "FunctionCall",
                        "src": "2119:86:2"
                      }
                    ],
                    "id": 2105,
                    "name": "ExpressionStatement",
                    "src": "2119:86:2"
                  },
                  {
                    "id": 2106,
                    "name": "PlaceholderStatement",
                    "src": "2216:1:2"
                  }
                ],
                "id": 2107,
                "name": "Block",
                "src": "2109:115:2"
              }
            ],
            "id": 2108,
            "name": "ModifierDefinition",
            "src": "2091:133:2"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 3032,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_members",
                      "scope": 2130,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract Members",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Members",
                          "referencedDeclaration": 4710,
                          "type": "contract Members"
                        },
                        "id": 2109,
                        "name": "UserDefinedTypeName",
                        "src": "2242:7:2"
                      }
                    ],
                    "id": 2110,
                    "name": "VariableDeclaration",
                    "src": "2242:16:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_createCohortAddress",
                      "scope": 2130,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2111,
                        "name": "ElementaryTypeName",
                        "src": "2261:7:2"
                      }
                    ],
                    "id": 2112,
                    "name": "VariableDeclaration",
                    "src": "2261:28:2"
                  }
                ],
                "id": 2113,
                "name": "ParameterList",
                "src": "2241:50:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2114,
                "name": "ParameterList",
                "src": "2292:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Members"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2038,
                              "type": "contract Members",
                              "value": "members"
                            },
                            "id": 2115,
                            "name": "Identifier",
                            "src": "2302:7:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2110,
                              "type": "contract Members",
                              "value": "_members"
                            },
                            "id": 2116,
                            "name": "Identifier",
                            "src": "2312:8:2"
                          }
                        ],
                        "id": 2117,
                        "name": "Assignment",
                        "src": "2302:18:2"
                      }
                    ],
                    "id": 2118,
                    "name": "ExpressionStatement",
                    "src": "2302:18:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2047,
                              "type": "address",
                              "value": "createCohortAddress"
                            },
                            "id": 2119,
                            "name": "Identifier",
                            "src": "2330:19:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2112,
                              "type": "address",
                              "value": "_createCohortAddress"
                            },
                            "id": 2120,
                            "name": "Identifier",
                            "src": "2352:20:2"
                          }
                        ],
                        "id": 2121,
                        "name": "Assignment",
                        "src": "2330:42:2"
                      }
                    ],
                    "id": 2122,
                    "name": "ExpressionStatement",
                    "src": "2330:42:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7175,
                              "type": "function (bytes32,address)",
                              "value": "_setupRole"
                            },
                            "id": 2123,
                            "name": "Identifier",
                            "src": "2382:10:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6992,
                              "type": "bytes32",
                              "value": "DEFAULT_ADMIN_ROLE"
                            },
                            "id": 2124,
                            "name": "Identifier",
                            "src": "2393:18:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 2125,
                                "name": "Identifier",
                                "src": "2413:3:2"
                              }
                            ],
                            "id": 2126,
                            "name": "MemberAccess",
                            "src": "2413:10:2"
                          }
                        ],
                        "id": 2127,
                        "name": "FunctionCall",
                        "src": "2382:42:2"
                      }
                    ],
                    "id": 2128,
                    "name": "ExpressionStatement",
                    "src": "2382:42:2"
                  }
                ],
                "id": 2129,
                "name": "Block",
                "src": "2292:143:2"
              }
            ],
            "id": 2130,
            "name": "FunctionDefinition",
            "src": "2230:205:2"
          },
          {
            "attributes": {
              "functionSelector": "b9f577b1",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "updateMinValidatorsPerCohort",
              "scope": 3032,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev to be called by Governance contract to update new value for min validators per cohort\n @param _minValidatorPerCohort new value \n @param audits type of validations"
                },
                "id": 2131,
                "name": "StructuredDocumentation",
                "src": "2444:194:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_minValidatorPerCohort",
                      "scope": 2170,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2132,
                        "name": "ElementaryTypeName",
                        "src": "2681:7:2"
                      }
                    ],
                    "id": 2133,
                    "name": "VariableDeclaration",
                    "src": "2681:30:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "audits",
                      "scope": 2170,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2134,
                        "name": "ElementaryTypeName",
                        "src": "2713:7:2"
                      }
                    ],
                    "id": 2135,
                    "name": "VariableDeclaration",
                    "src": "2713:14:2"
                  }
                ],
                "id": 2136,
                "name": "ParameterList",
                "src": "2680:48:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2137,
                "name": "ParameterList",
                "src": "2737:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_138ce18bc2efbe435ab2c4679044dac294bb49dfea1082dc56fef4b0aaa0f669",
                                  "typeString": "literal_string \"CreateCohort:updateMinValidatorsPerCohort - New value for the  min validator per cohort can't be 0\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2138,
                            "name": "Identifier",
                            "src": "2748:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2133,
                                  "type": "uint256",
                                  "value": "_minValidatorPerCohort"
                                },
                                "id": 2139,
                                "name": "Identifier",
                                "src": "2756:22:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2140,
                                "name": "Literal",
                                "src": "2782:1:2"
                              }
                            ],
                            "id": 2141,
                            "name": "BinaryOperation",
                            "src": "2756:27:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "437265617465436f686f72743a7570646174654d696e56616c696461746f7273506572436f686f7274202d204e65772076616c756520666f722074686520206d696e2076616c696461746f722070657220636f686f72742063616e27742062652030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"CreateCohort:updateMinValidatorsPerCohort - New value for the  min validator per cohort can't be 0\"",
                              "value": "CreateCohort:updateMinValidatorsPerCohort - New value for the  min validator per cohort can't be 0"
                            },
                            "id": 2142,
                            "name": "Literal",
                            "src": "2785:100:2"
                          }
                        ],
                        "id": 2143,
                        "name": "FunctionCall",
                        "src": "2748:138:2"
                      }
                    ],
                    "id": 2144,
                    "name": "ExpressionStatement",
                    "src": "2748:138:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_439fa259a2c35dedc9a41e59f465fcf0a757ce4d009800d5f7c36de72bbe406a",
                                  "typeString": "literal_string \"Cohort Factory:updateMinValidatorsPerCohort - Audit type has to be <= 5 and >=0\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2145,
                            "name": "Identifier",
                            "src": "2896:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "&&",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2135,
                                      "type": "uint256",
                                      "value": "audits"
                                    },
                                    "id": 2146,
                                    "name": "Identifier",
                                    "src": "2904:6:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "35",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 5",
                                      "value": "5"
                                    },
                                    "id": 2147,
                                    "name": "Literal",
                                    "src": "2914:1:2"
                                  }
                                ],
                                "id": 2148,
                                "name": "BinaryOperation",
                                "src": "2904:11:2"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2135,
                                      "type": "uint256",
                                      "value": "audits"
                                    },
                                    "id": 2149,
                                    "name": "Identifier",
                                    "src": "2919:6:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 2150,
                                    "name": "Literal",
                                    "src": "2928:1:2"
                                  }
                                ],
                                "id": 2151,
                                "name": "BinaryOperation",
                                "src": "2919:10:2"
                              }
                            ],
                            "id": 2152,
                            "name": "BinaryOperation",
                            "src": "2904:25:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "436f686f727420466163746f72793a7570646174654d696e56616c696461746f7273506572436f686f7274202d20417564697420747970652068617320746f206265203c3d203520616e64203e3d30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Cohort Factory:updateMinValidatorsPerCohort - Audit type has to be <= 5 and >=0\"",
                              "value": "Cohort Factory:updateMinValidatorsPerCohort - Audit type has to be <= 5 and >=0"
                            },
                            "id": 2153,
                            "name": "Literal",
                            "src": "2932:81:2"
                          }
                        ],
                        "id": 2154,
                        "name": "FunctionCall",
                        "src": "2896:118:2"
                      }
                    ],
                    "id": 2155,
                    "name": "ExpressionStatement",
                    "src": "2896:118:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2009,
                                  "type": "uint256[] storage ref",
                                  "value": "minValidatorPerCohort"
                                },
                                "id": 2156,
                                "name": "Identifier",
                                "src": "3024:21:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2135,
                                  "type": "uint256",
                                  "value": "audits"
                                },
                                "id": 2157,
                                "name": "Identifier",
                                "src": "3046:6:2"
                              }
                            ],
                            "id": 2158,
                            "name": "IndexAccess",
                            "src": "3024:29:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2133,
                              "type": "uint256",
                              "value": "_minValidatorPerCohort"
                            },
                            "id": 2159,
                            "name": "Identifier",
                            "src": "3056:22:2"
                          }
                        ],
                        "id": 2160,
                        "name": "Assignment",
                        "src": "3024:54:2"
                      }
                    ],
                    "id": 2161,
                    "name": "ExpressionStatement",
                    "src": "3024:54:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                  "typeString": "enum CohortFactory.AuditTypes"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2084,
                              "type": "function (uint256,enum CohortFactory.AuditTypes)",
                              "value": "UpdateMinValidatorsPerCohort"
                            },
                            "id": 2162,
                            "name": "Identifier",
                            "src": "3093:28:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2133,
                              "type": "uint256",
                              "value": "_minValidatorPerCohort"
                            },
                            "id": 2163,
                            "name": "Identifier",
                            "src": "3122:22:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "enum CohortFactory.AuditTypes",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1999,
                                  "type": "type(enum CohortFactory.AuditTypes)",
                                  "value": "AuditTypes"
                                },
                                "id": 2164,
                                "name": "Identifier",
                                "src": "3146:10:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2135,
                                  "type": "uint256",
                                  "value": "audits"
                                },
                                "id": 2165,
                                "name": "Identifier",
                                "src": "3157:6:2"
                              }
                            ],
                            "id": 2166,
                            "name": "FunctionCall",
                            "src": "3146:18:2"
                          }
                        ],
                        "id": 2167,
                        "name": "FunctionCall",
                        "src": "3093:72:2"
                      }
                    ],
                    "id": 2168,
                    "name": "EmitStatement",
                    "src": "3088:77:2"
                  }
                ],
                "id": 2169,
                "name": "Block",
                "src": "2737:435:2"
              }
            ],
            "id": 2170,
            "name": "FunctionDefinition",
            "src": "2643:529:2"
          },
          {
            "attributes": {
              "functionSelector": "7689bb7d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "inviteValidator",
              "scope": 3032,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Used by Enterprise to invite validator\n @param validator address of the validator to invite\n @param audit type of the audit"
                },
                "id": 2171,
                "name": "StructuredDocumentation",
                "src": "3178:155:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "validator",
                      "scope": 2290,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2172,
                        "name": "ElementaryTypeName",
                        "src": "3363:7:2"
                      }
                    ],
                    "id": 2173,
                    "name": "VariableDeclaration",
                    "src": "3363:17:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "audit",
                      "scope": 2290,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum CohortFactory.AuditTypes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "AuditTypes",
                          "referencedDeclaration": 1999,
                          "type": "enum CohortFactory.AuditTypes"
                        },
                        "id": 2174,
                        "name": "UserDefinedTypeName",
                        "src": "3382:10:2"
                      }
                    ],
                    "id": 2175,
                    "name": "VariableDeclaration",
                    "src": "3382:16:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "cohort",
                      "scope": 2290,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2176,
                        "name": "ElementaryTypeName",
                        "src": "3400:7:2"
                      }
                    ],
                    "id": 2177,
                    "name": "VariableDeclaration",
                    "src": "3400:14:2"
                  }
                ],
                "id": 2178,
                "name": "ParameterList",
                "src": "3362:53:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2179,
                "name": "ParameterList",
                "src": "3423:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2181
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "newInvitation",
                          "scope": 2289,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct CohortFactory.Invitation",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Invitation",
                              "referencedDeclaration": 2022,
                              "type": "struct CohortFactory.Invitation"
                            },
                            "id": 2180,
                            "name": "UserDefinedTypeName",
                            "src": "3434:10:2"
                          }
                        ],
                        "id": 2181,
                        "name": "VariableDeclaration",
                        "src": "3434:31:2"
                      }
                    ],
                    "id": 2182,
                    "name": "VariableDeclarationStatement",
                    "src": "3434:31:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2184
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "isValidator",
                          "scope": 2289,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 2183,
                            "name": "ElementaryTypeName",
                            "src": "3475:4:2"
                          }
                        ],
                        "id": 2184,
                        "name": "VariableDeclaration",
                        "src": "3475:16:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_enum$_UserType_$3501",
                                  "typeString": "enum Members.UserType"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "userMap",
                              "referencedDeclaration": 3513,
                              "type": "function (address,enum Members.UserType) view external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2038,
                                  "type": "contract Members",
                                  "value": "members"
                                },
                                "id": 2185,
                                "name": "Identifier",
                                "src": "3494:7:2"
                              }
                            ],
                            "id": 2186,
                            "name": "MemberAccess",
                            "src": "3494:15:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2173,
                              "type": "address",
                              "value": "validator"
                            },
                            "id": 2187,
                            "name": "Identifier",
                            "src": "3510:9:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "enum Members.UserType",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "UserType",
                                  "referencedDeclaration": 3501,
                                  "type": "type(enum Members.UserType)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4710,
                                      "type": "type(contract Members)",
                                      "value": "Members"
                                    },
                                    "id": 2188,
                                    "name": "Identifier",
                                    "src": "3521:7:2"
                                  }
                                ],
                                "id": 2189,
                                "name": "MemberAccess",
                                "src": "3521:16:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 2190,
                                "name": "Literal",
                                "src": "3538:1:2"
                              }
                            ],
                            "id": 2191,
                            "name": "FunctionCall",
                            "src": "3521:19:2"
                          }
                        ],
                        "id": 2192,
                        "name": "FunctionCall",
                        "src": "3494:47:2"
                      }
                    ],
                    "id": 2193,
                    "name": "VariableDeclarationStatement",
                    "src": "3475:66:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2195
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "isEnterprise",
                          "scope": 2289,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 2194,
                            "name": "ElementaryTypeName",
                            "src": "3551:4:2"
                          }
                        ],
                        "id": 2195,
                        "name": "VariableDeclaration",
                        "src": "3551:17:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_enum$_UserType_$3501",
                                  "typeString": "enum Members.UserType"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "userMap",
                              "referencedDeclaration": 3513,
                              "type": "function (address,enum Members.UserType) view external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2038,
                                  "type": "contract Members",
                                  "value": "members"
                                },
                                "id": 2196,
                                "name": "Identifier",
                                "src": "3571:7:2"
                              }
                            ],
                            "id": 2197,
                            "name": "MemberAccess",
                            "src": "3571:15:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 2198,
                                "name": "Identifier",
                                "src": "3587:3:2"
                              }
                            ],
                            "id": 2199,
                            "name": "MemberAccess",
                            "src": "3587:10:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "enum Members.UserType",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "UserType",
                                  "referencedDeclaration": 3501,
                                  "type": "type(enum Members.UserType)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4710,
                                      "type": "type(contract Members)",
                                      "value": "Members"
                                    },
                                    "id": 2200,
                                    "name": "Identifier",
                                    "src": "3599:7:2"
                                  }
                                ],
                                "id": 2201,
                                "name": "MemberAccess",
                                "src": "3599:16:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2202,
                                "name": "Literal",
                                "src": "3616:1:2"
                              }
                            ],
                            "id": 2203,
                            "name": "FunctionCall",
                            "src": "3599:19:2"
                          }
                        ],
                        "id": 2204,
                        "name": "FunctionCall",
                        "src": "3571:48:2"
                      }
                    ],
                    "id": 2205,
                    "name": "VariableDeclarationStatement",
                    "src": "3551:68:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2207,
                        null
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "invited",
                          "scope": 2289,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 2206,
                            "name": "ElementaryTypeName",
                            "src": "3630:4:2"
                          }
                        ],
                        "id": 2207,
                        "name": "VariableDeclaration",
                        "src": "3630:12:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple(bool,bool)",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                  "typeString": "enum CohortFactory.AuditTypes"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2741,
                              "type": "function (address,address,enum CohortFactory.AuditTypes) view returns (bool,bool)",
                              "value": "isValidatorInvited"
                            },
                            "id": 2208,
                            "name": "Identifier",
                            "src": "3648:18:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 2209,
                                "name": "Identifier",
                                "src": "3667:3:2"
                              }
                            ],
                            "id": 2210,
                            "name": "MemberAccess",
                            "src": "3667:10:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2173,
                              "type": "address",
                              "value": "validator"
                            },
                            "id": 2211,
                            "name": "Identifier",
                            "src": "3679:9:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2175,
                              "type": "enum CohortFactory.AuditTypes",
                              "value": "audit"
                            },
                            "id": 2212,
                            "name": "Identifier",
                            "src": "3690:5:2"
                          }
                        ],
                        "id": 2213,
                        "name": "FunctionCall",
                        "src": "3648:48:2"
                      }
                    ],
                    "id": 2214,
                    "name": "VariableDeclarationStatement",
                    "src": "3629:67:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6fd86e87db9e2e08ac6552340780a28e848f6c0d697d6cf86dcb9d51e1b421da",
                                  "typeString": "literal_string \"CohortFactory:inviteValidator - This validator has been already invited for this validation type.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2215,
                            "name": "Identifier",
                            "src": "3706:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2207,
                                  "type": "bool",
                                  "value": "invited"
                                },
                                "id": 2216,
                                "name": "Identifier",
                                "src": "3716:7:2"
                              }
                            ],
                            "id": 2217,
                            "name": "UnaryOperation",
                            "src": "3715:8:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "436f686f7274466163746f72793a696e7669746556616c696461746f72202d20546869732076616c696461746f7220686173206265656e20616c726561647920696e766974656420666f7220746869732076616c69646174696f6e20747970652e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"CohortFactory:inviteValidator - This validator has been already invited for this validation type.\"",
                              "value": "CohortFactory:inviteValidator - This validator has been already invited for this validation type."
                            },
                            "id": 2218,
                            "name": "Literal",
                            "src": "3726:99:2"
                          }
                        ],
                        "id": 2219,
                        "name": "FunctionCall",
                        "src": "3706:121:2"
                      }
                    ],
                    "id": 2220,
                    "name": "ExpressionStatement",
                    "src": "3706:121:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e77e0a377146f0cbb727bcc33df33781a2df3863ca61db0d7a180f0d158fe44f",
                                  "typeString": "literal_string \"CohortFactory:inviteValidator - Only Enterprise user can invite Validators.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2221,
                            "name": "Identifier",
                            "src": "3837:7:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2195,
                              "type": "bool",
                              "value": "isEnterprise"
                            },
                            "id": 2222,
                            "name": "Identifier",
                            "src": "3846:12:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "436f686f7274466163746f72793a696e7669746556616c696461746f72202d204f6e6c7920456e746572707269736520757365722063616e20696e766974652056616c696461746f72732e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"CohortFactory:inviteValidator - Only Enterprise user can invite Validators.\"",
                              "value": "CohortFactory:inviteValidator - Only Enterprise user can invite Validators."
                            },
                            "id": 2223,
                            "name": "Literal",
                            "src": "3860:77:2"
                          }
                        ],
                        "id": 2224,
                        "name": "FunctionCall",
                        "src": "3837:101:2"
                      }
                    ],
                    "id": 2225,
                    "name": "ExpressionStatement",
                    "src": "3837:101:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_677833a477637ed71cf914f20c2789e7ba3b5a9c7de9eccec58ba6d44b93b1bb",
                                  "typeString": "literal_string \"CohortFactory:inviteValidator - Only Approved Validators can be invited.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2226,
                            "name": "Identifier",
                            "src": "3948:7:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2184,
                              "type": "bool",
                              "value": "isValidator"
                            },
                            "id": 2227,
                            "name": "Identifier",
                            "src": "3957:11:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "436f686f7274466163746f72793a696e7669746556616c696461746f72202d204f6e6c7920417070726f7665642056616c696461746f72732063616e20626520696e76697465642e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"CohortFactory:inviteValidator - Only Approved Validators can be invited.\"",
                              "value": "CohortFactory:inviteValidator - Only Approved Validators can be invited."
                            },
                            "id": 2228,
                            "name": "Literal",
                            "src": "3970:74:2"
                          }
                        ],
                        "id": 2229,
                        "name": "FunctionCall",
                        "src": "3948:97:2"
                      }
                    ],
                    "id": 2230,
                    "name": "ExpressionStatement",
                    "src": "3948:97:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_063c3b922a3957817a67ee3018d5d722e9238f97e38bf4bc4e101fe06d756c30",
                                  "typeString": "literal_string \"CohortFactory:inviteValidator - This validator has not staked any tokens yet.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2231,
                            "name": "Identifier",
                            "src": "4055:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "deposits",
                                      "referencedDeclaration": 3436,
                                      "type": "function (address) view external returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2038,
                                          "type": "contract Members",
                                          "value": "members"
                                        },
                                        "id": 2232,
                                        "name": "Identifier",
                                        "src": "4064:7:2"
                                      }
                                    ],
                                    "id": 2233,
                                    "name": "MemberAccess",
                                    "src": "4064:16:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2173,
                                      "type": "address",
                                      "value": "validator"
                                    },
                                    "id": 2234,
                                    "name": "Identifier",
                                    "src": "4081:9:2"
                                  }
                                ],
                                "id": 2235,
                                "name": "FunctionCall",
                                "src": "4064:27:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2236,
                                "name": "Literal",
                                "src": "4094:1:2"
                              }
                            ],
                            "id": 2237,
                            "name": "BinaryOperation",
                            "src": "4064:31:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "436f686f7274466163746f72793a696e7669746556616c696461746f72202d20546869732076616c696461746f7220686173206e6f74207374616b656420616e7920746f6b656e73207965742e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"CohortFactory:inviteValidator - This validator has not staked any tokens yet.\"",
                              "value": "CohortFactory:inviteValidator - This validator has not staked any tokens yet."
                            },
                            "id": 2238,
                            "name": "Literal",
                            "src": "4096:79:2"
                          }
                        ],
                        "id": 2239,
                        "name": "FunctionCall",
                        "src": "4055:121:2"
                      }
                    ],
                    "id": 2240,
                    "name": "ExpressionStatement",
                    "src": "4055:121:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "validator",
                              "referencedDeclaration": 2011,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2181,
                                  "type": "struct CohortFactory.Invitation memory",
                                  "value": "newInvitation"
                                },
                                "id": 2241,
                                "name": "Identifier",
                                "src": "4186:13:2"
                              }
                            ],
                            "id": 2243,
                            "name": "MemberAccess",
                            "src": "4186:23:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2173,
                              "type": "address",
                              "value": "validator"
                            },
                            "id": 2244,
                            "name": "Identifier",
                            "src": "4212:9:2"
                          }
                        ],
                        "id": 2245,
                        "name": "Assignment",
                        "src": "4186:35:2"
                      }
                    ],
                    "id": 2246,
                    "name": "ExpressionStatement",
                    "src": "4186:35:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "invitationDate",
                              "referencedDeclaration": 2013,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2181,
                                  "type": "struct CohortFactory.Invitation memory",
                                  "value": "newInvitation"
                                },
                                "id": 2247,
                                "name": "Identifier",
                                "src": "4231:13:2"
                              }
                            ],
                            "id": 2249,
                            "name": "MemberAccess",
                            "src": "4231:28:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967292,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 2250,
                                "name": "Identifier",
                                "src": "4262:5:2"
                              }
                            ],
                            "id": 2251,
                            "name": "MemberAccess",
                            "src": "4262:15:2"
                          }
                        ],
                        "id": 2252,
                        "name": "Assignment",
                        "src": "4231:46:2"
                      }
                    ],
                    "id": 2253,
                    "name": "ExpressionStatement",
                    "src": "4231:46:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum CohortFactory.AuditTypes"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "audits",
                              "referencedDeclaration": 2017,
                              "type": "enum CohortFactory.AuditTypes"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2181,
                                  "type": "struct CohortFactory.Invitation memory",
                                  "value": "newInvitation"
                                },
                                "id": 2254,
                                "name": "Identifier",
                                "src": "4292:13:2"
                              }
                            ],
                            "id": 2256,
                            "name": "MemberAccess",
                            "src": "4292:20:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2175,
                              "type": "enum CohortFactory.AuditTypes",
                              "value": "audit"
                            },
                            "id": 2257,
                            "name": "Identifier",
                            "src": "4315:5:2"
                          }
                        ],
                        "id": 2258,
                        "name": "Assignment",
                        "src": "4292:28:2"
                      }
                    ],
                    "id": 2259,
                    "name": "ExpressionStatement",
                    "src": "4292:28:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "cohort",
                              "referencedDeclaration": 2019,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2181,
                                  "type": "struct CohortFactory.Invitation memory",
                                  "value": "newInvitation"
                                },
                                "id": 2260,
                                "name": "Identifier",
                                "src": "4333:13:2"
                              }
                            ],
                            "id": 2262,
                            "name": "MemberAccess",
                            "src": "4333:20:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2177,
                              "type": "address",
                              "value": "cohort"
                            },
                            "id": 2263,
                            "name": "Identifier",
                            "src": "4356:6:2"
                          }
                        ],
                        "id": 2264,
                        "name": "Assignment",
                        "src": "4333:29:2"
                      }
                    ],
                    "id": 2265,
                    "name": "ExpressionStatement",
                    "src": "4333:29:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Invitation_$2022_memory_ptr",
                                  "typeString": "struct CohortFactory.Invitation memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "type": "function (struct CohortFactory.Invitation storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2043,
                                      "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                      "value": "invitations"
                                    },
                                    "id": 2266,
                                    "name": "Identifier",
                                    "src": "4372:11:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 2267,
                                        "name": "Identifier",
                                        "src": "4384:3:2"
                                      }
                                    ],
                                    "id": 2268,
                                    "name": "MemberAccess",
                                    "src": "4384:10:2"
                                  }
                                ],
                                "id": 2269,
                                "name": "IndexAccess",
                                "src": "4372:23:2"
                              }
                            ],
                            "id": 2270,
                            "name": "MemberAccess",
                            "src": "4372:28:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2181,
                              "type": "struct CohortFactory.Invitation memory",
                              "value": "newInvitation"
                            },
                            "id": 2271,
                            "name": "Identifier",
                            "src": "4401:13:2"
                          }
                        ],
                        "id": 2272,
                        "name": "FunctionCall",
                        "src": "4372:43:2"
                      }
                    ],
                    "id": 2273,
                    "name": "ExpressionStatement",
                    "src": "4372:43:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                  "typeString": "enum CohortFactory.AuditTypes"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2064,
                              "type": "function (address,address,enum CohortFactory.AuditTypes,uint256,address)",
                              "value": "ValidatorInvited"
                            },
                            "id": 2274,
                            "name": "Identifier",
                            "src": "4438:16:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 2275,
                                "name": "Identifier",
                                "src": "4455:3:2"
                              }
                            ],
                            "id": 2276,
                            "name": "MemberAccess",
                            "src": "4455:10:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2173,
                              "type": "address",
                              "value": "validator"
                            },
                            "id": 2277,
                            "name": "Identifier",
                            "src": "4467:9:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2175,
                              "type": "enum CohortFactory.AuditTypes",
                              "value": "audit"
                            },
                            "id": 2278,
                            "name": "Identifier",
                            "src": "4478:5:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "-",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2043,
                                          "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                          "value": "invitations"
                                        },
                                        "id": 2279,
                                        "name": "Identifier",
                                        "src": "4485:11:2"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 2280,
                                            "name": "Identifier",
                                            "src": "4497:3:2"
                                          }
                                        ],
                                        "id": 2281,
                                        "name": "MemberAccess",
                                        "src": "4497:10:2"
                                      }
                                    ],
                                    "id": 2282,
                                    "name": "IndexAccess",
                                    "src": "4485:23:2"
                                  }
                                ],
                                "id": 2283,
                                "name": "MemberAccess",
                                "src": "4485:30:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 2284,
                                "name": "Literal",
                                "src": "4518:1:2"
                              }
                            ],
                            "id": 2285,
                            "name": "BinaryOperation",
                            "src": "4485:34:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2177,
                              "type": "address",
                              "value": "cohort"
                            },
                            "id": 2286,
                            "name": "Identifier",
                            "src": "4521:6:2"
                          }
                        ],
                        "id": 2287,
                        "name": "FunctionCall",
                        "src": "4438:90:2"
                      }
                    ],
                    "id": 2288,
                    "name": "EmitStatement",
                    "src": "4433:95:2"
                  }
                ],
                "id": 2289,
                "name": "Block",
                "src": "3423:1112:2"
              }
            ],
            "id": 2290,
            "name": "FunctionDefinition",
            "src": "3338:1197:2"
          },
          {
            "attributes": {
              "functionSelector": "ced02c8b",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "inviteValidatorMultiple",
              "scope": 3032,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Used by Enterprise to invite multiple validators in one call \n @param validator address of the validator to invite\n @param audit type of the audit"
                },
                "id": 2291,
                "name": "StructuredDocumentation",
                "src": "4541:178:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "validator",
                      "scope": 2334,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 2292,
                            "name": "ElementaryTypeName",
                            "src": "4757:7:2"
                          }
                        ],
                        "id": 2293,
                        "name": "ArrayTypeName",
                        "src": "4757:9:2"
                      }
                    ],
                    "id": 2294,
                    "name": "VariableDeclaration",
                    "src": "4757:26:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "audit",
                      "scope": 2334,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum CohortFactory.AuditTypes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "AuditTypes",
                          "referencedDeclaration": 1999,
                          "type": "enum CohortFactory.AuditTypes"
                        },
                        "id": 2295,
                        "name": "UserDefinedTypeName",
                        "src": "4785:10:2"
                      }
                    ],
                    "id": 2296,
                    "name": "VariableDeclaration",
                    "src": "4785:16:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "cohort",
                      "scope": 2334,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2297,
                        "name": "ElementaryTypeName",
                        "src": "4803:7:2"
                      }
                    ],
                    "id": 2298,
                    "name": "VariableDeclaration",
                    "src": "4803:14:2"
                  }
                ],
                "id": 2299,
                "name": "ParameterList",
                "src": "4756:62:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2300,
                "name": "ParameterList",
                "src": "4825:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2302
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "length",
                          "scope": 2333,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2301,
                            "name": "ElementaryTypeName",
                            "src": "4836:7:2"
                          }
                        ],
                        "id": 2302,
                        "name": "VariableDeclaration",
                        "src": "4836:14:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "length",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2294,
                              "type": "address[] memory",
                              "value": "validator"
                            },
                            "id": 2303,
                            "name": "Identifier",
                            "src": "4853:9:2"
                          }
                        ],
                        "id": 2304,
                        "name": "MemberAccess",
                        "src": "4853:16:2"
                      }
                    ],
                    "id": 2305,
                    "name": "VariableDeclarationStatement",
                    "src": "4836:33:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6addea8f69b9f09bff63a8fd0d0f4ac273224e1a8f6601c0e5c20195de4bdc6b",
                                  "typeString": "literal_string \"CohortFactory-inviteValidatorMultiple: List too long\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2306,
                            "name": "Identifier",
                            "src": "4879:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2302,
                                  "type": "uint256",
                                  "value": "length"
                                },
                                "id": 2307,
                                "name": "Identifier",
                                "src": "4887:6:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "323536",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 256",
                                  "value": "256"
                                },
                                "id": 2308,
                                "name": "Literal",
                                "src": "4897:3:2"
                              }
                            ],
                            "id": 2309,
                            "name": "BinaryOperation",
                            "src": "4887:13:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "436f686f7274466163746f72792d696e7669746556616c696461746f724d756c7469706c653a204c69737420746f6f206c6f6e67",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"CohortFactory-inviteValidatorMultiple: List too long\"",
                              "value": "CohortFactory-inviteValidatorMultiple: List too long"
                            },
                            "id": 2310,
                            "name": "Literal",
                            "src": "4902:54:2"
                          }
                        ],
                        "id": 2311,
                        "name": "FunctionCall",
                        "src": "4879:78:2"
                      }
                    ],
                    "id": 2312,
                    "name": "ExpressionStatement",
                    "src": "4879:78:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            2314
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 2332,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 2313,
                                "name": "ElementaryTypeName",
                                "src": "4972:7:2"
                              }
                            ],
                            "id": 2314,
                            "name": "VariableDeclaration",
                            "src": "4972:9:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 2315,
                            "name": "Literal",
                            "src": "4984:1:2"
                          }
                        ],
                        "id": 2316,
                        "name": "VariableDeclarationStatement",
                        "src": "4972:13:2"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2314,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 2317,
                            "name": "Identifier",
                            "src": "4987:1:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2302,
                              "type": "uint256",
                              "value": "length"
                            },
                            "id": 2318,
                            "name": "Identifier",
                            "src": "4991:6:2"
                          }
                        ],
                        "id": 2319,
                        "name": "BinaryOperation",
                        "src": "4987:10:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2314,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 2320,
                                "name": "Identifier",
                                "src": "4999:1:2"
                              }
                            ],
                            "id": 2321,
                            "name": "UnaryOperation",
                            "src": "4999:3:2"
                          }
                        ],
                        "id": 2322,
                        "name": "ExpressionStatement",
                        "src": "4999:3:2"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                          "typeString": "enum CohortFactory.AuditTypes"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2290,
                                      "type": "function (address,enum CohortFactory.AuditTypes,address)",
                                      "value": "inviteValidator"
                                    },
                                    "id": 2323,
                                    "name": "Identifier",
                                    "src": "5018:15:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "address"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2294,
                                          "type": "address[] memory",
                                          "value": "validator"
                                        },
                                        "id": 2324,
                                        "name": "Identifier",
                                        "src": "5034:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2314,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 2325,
                                        "name": "Identifier",
                                        "src": "5044:1:2"
                                      }
                                    ],
                                    "id": 2326,
                                    "name": "IndexAccess",
                                    "src": "5034:12:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2296,
                                      "type": "enum CohortFactory.AuditTypes",
                                      "value": "audit"
                                    },
                                    "id": 2327,
                                    "name": "Identifier",
                                    "src": "5048:5:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2298,
                                      "type": "address",
                                      "value": "cohort"
                                    },
                                    "id": 2328,
                                    "name": "Identifier",
                                    "src": "5055:6:2"
                                  }
                                ],
                                "id": 2329,
                                "name": "FunctionCall",
                                "src": "5018:44:2"
                              }
                            ],
                            "id": 2330,
                            "name": "ExpressionStatement",
                            "src": "5018:44:2"
                          }
                        ],
                        "id": 2331,
                        "name": "Block",
                        "src": "5004:69:2"
                      }
                    ],
                    "id": 2332,
                    "name": "ForStatement",
                    "src": "4967:106:2"
                  }
                ],
                "id": 2333,
                "name": "Block",
                "src": "4825:254:2"
              }
            ],
            "id": 2334,
            "name": "FunctionDefinition",
            "src": "4724:355:2"
          },
          {
            "attributes": {
              "functionSelector": "0ea02160",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "acceptInvitation",
              "scope": 3032,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Used by Validator to accept Enterprise invitation\n @param enterprise address of the Enterprise who created invitation\n @param invitationNumber invitation number"
                },
                "id": 2335,
                "name": "StructuredDocumentation",
                "src": "5085:192:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "enterprise",
                      "scope": 2422,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2336,
                        "name": "ElementaryTypeName",
                        "src": "5308:7:2"
                      }
                    ],
                    "id": 2337,
                    "name": "VariableDeclaration",
                    "src": "5308:18:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "invitationNumber",
                      "scope": 2422,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2338,
                        "name": "ElementaryTypeName",
                        "src": "5328:7:2"
                      }
                    ],
                    "id": 2339,
                    "name": "VariableDeclaration",
                    "src": "5328:24:2"
                  }
                ],
                "id": 2340,
                "name": "ParameterList",
                "src": "5307:46:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2341,
                "name": "ParameterList",
                "src": "5361:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_26c21c273a116f547bc94c5ca0bb3f3619c1beb14f87d7771c529649816a42b2",
                                  "typeString": "literal_string \"CohortFactory:acceptInvitation - This invitation doesn't exist\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2342,
                            "name": "Identifier",
                            "src": "5372:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2043,
                                          "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                          "value": "invitations"
                                        },
                                        "id": 2343,
                                        "name": "Identifier",
                                        "src": "5381:11:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2337,
                                          "type": "address",
                                          "value": "enterprise"
                                        },
                                        "id": 2344,
                                        "name": "Identifier",
                                        "src": "5393:10:2"
                                      }
                                    ],
                                    "id": 2345,
                                    "name": "IndexAccess",
                                    "src": "5381:23:2"
                                  }
                                ],
                                "id": 2346,
                                "name": "MemberAccess",
                                "src": "5381:30:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2339,
                                  "type": "uint256",
                                  "value": "invitationNumber"
                                },
                                "id": 2347,
                                "name": "Identifier",
                                "src": "5414:16:2"
                              }
                            ],
                            "id": 2348,
                            "name": "BinaryOperation",
                            "src": "5381:49:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "436f686f7274466163746f72793a616363657074496e7669746174696f6e202d205468697320696e7669746174696f6e20646f65736e2774206578697374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"CohortFactory:acceptInvitation - This invitation doesn't exist\"",
                              "value": "CohortFactory:acceptInvitation - This invitation doesn't exist"
                            },
                            "id": 2349,
                            "name": "Literal",
                            "src": "5432:64:2"
                          }
                        ],
                        "id": 2350,
                        "name": "FunctionCall",
                        "src": "5372:125:2"
                      }
                    ],
                    "id": 2351,
                    "name": "ExpressionStatement",
                    "src": "5372:125:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5af81e65e6513e94d4eea7d02f97b048d24ef68c5c10aa5fe907156a0f0fb92b",
                                  "typeString": "literal_string \"CohortFactory:acceptInvitation- This invitation has been accepted already .\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2352,
                            "name": "Identifier",
                            "src": "5507:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "acceptanceDate",
                                  "referencedDeclaration": 2015,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct CohortFactory.Invitation storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2043,
                                              "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                              "value": "invitations"
                                            },
                                            "id": 2353,
                                            "name": "Identifier",
                                            "src": "5516:11:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2337,
                                              "type": "address",
                                              "value": "enterprise"
                                            },
                                            "id": 2354,
                                            "name": "Identifier",
                                            "src": "5528:10:2"
                                          }
                                        ],
                                        "id": 2355,
                                        "name": "IndexAccess",
                                        "src": "5516:23:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2339,
                                          "type": "uint256",
                                          "value": "invitationNumber"
                                        },
                                        "id": 2356,
                                        "name": "Identifier",
                                        "src": "5540:16:2"
                                      }
                                    ],
                                    "id": 2357,
                                    "name": "IndexAccess",
                                    "src": "5516:41:2"
                                  }
                                ],
                                "id": 2358,
                                "name": "MemberAccess",
                                "src": "5516:56:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2359,
                                "name": "Literal",
                                "src": "5576:1:2"
                              }
                            ],
                            "id": 2360,
                            "name": "BinaryOperation",
                            "src": "5516:61:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "436f686f7274466163746f72793a616363657074496e7669746174696f6e2d205468697320696e7669746174696f6e20686173206265656e20616363657074656420616c7265616479202e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"CohortFactory:acceptInvitation- This invitation has been accepted already .\"",
                              "value": "CohortFactory:acceptInvitation- This invitation has been accepted already ."
                            },
                            "id": 2361,
                            "name": "Literal",
                            "src": "5579:77:2"
                          }
                        ],
                        "id": 2362,
                        "name": "FunctionCall",
                        "src": "5507:150:2"
                      }
                    ],
                    "id": 2363,
                    "name": "ExpressionStatement",
                    "src": "5507:150:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a354293b2d701359204e635965701f59237ae47d1d7a71a09361490342b7265c",
                                  "typeString": "literal_string \"CohortFactory:acceptInvitation - You are accepting invitation to which you were not invited or this invitation doesn't exist.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2364,
                            "name": "Identifier",
                            "src": "5667:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "validator",
                                  "referencedDeclaration": 2011,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct CohortFactory.Invitation storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2043,
                                              "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                              "value": "invitations"
                                            },
                                            "id": 2365,
                                            "name": "Identifier",
                                            "src": "5676:11:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2337,
                                              "type": "address",
                                              "value": "enterprise"
                                            },
                                            "id": 2366,
                                            "name": "Identifier",
                                            "src": "5688:10:2"
                                          }
                                        ],
                                        "id": 2367,
                                        "name": "IndexAccess",
                                        "src": "5676:23:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2339,
                                          "type": "uint256",
                                          "value": "invitationNumber"
                                        },
                                        "id": 2368,
                                        "name": "Identifier",
                                        "src": "5700:16:2"
                                      }
                                    ],
                                    "id": 2369,
                                    "name": "IndexAccess",
                                    "src": "5676:41:2"
                                  }
                                ],
                                "id": 2370,
                                "name": "MemberAccess",
                                "src": "5676:51:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 2371,
                                    "name": "Identifier",
                                    "src": "5731:3:2"
                                  }
                                ],
                                "id": 2372,
                                "name": "MemberAccess",
                                "src": "5731:10:2"
                              }
                            ],
                            "id": 2373,
                            "name": "BinaryOperation",
                            "src": "5676:65:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "436f686f7274466163746f72793a616363657074496e7669746174696f6e202d20596f752061726520616363657074696e6720696e7669746174696f6e20746f20776869636820796f752077657265206e6f7420696e7669746564206f72207468697320696e7669746174696f6e20646f65736e27742065786973742e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"CohortFactory:acceptInvitation - You are accepting invitation to which you were not invited or this invitation doesn't exist.\"",
                              "value": "CohortFactory:acceptInvitation - You are accepting invitation to which you were not invited or this invitation doesn't exist."
                            },
                            "id": 2374,
                            "name": "Literal",
                            "src": "5743:127:2"
                          }
                        ],
                        "id": 2375,
                        "name": "FunctionCall",
                        "src": "5667:204:2"
                      }
                    ],
                    "id": 2376,
                    "name": "ExpressionStatement",
                    "src": "5667:204:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "acceptanceDate",
                              "referencedDeclaration": 2015,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CohortFactory.Invitation storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2043,
                                          "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                          "value": "invitations"
                                        },
                                        "id": 2377,
                                        "name": "Identifier",
                                        "src": "5881:11:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2337,
                                          "type": "address",
                                          "value": "enterprise"
                                        },
                                        "id": 2378,
                                        "name": "Identifier",
                                        "src": "5893:10:2"
                                      }
                                    ],
                                    "id": 2380,
                                    "name": "IndexAccess",
                                    "src": "5881:23:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2339,
                                      "type": "uint256",
                                      "value": "invitationNumber"
                                    },
                                    "id": 2379,
                                    "name": "Identifier",
                                    "src": "5905:16:2"
                                  }
                                ],
                                "id": 2381,
                                "name": "IndexAccess",
                                "src": "5881:41:2"
                              }
                            ],
                            "id": 2382,
                            "name": "MemberAccess",
                            "src": "5881:56:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967292,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 2383,
                                "name": "Identifier",
                                "src": "5940:5:2"
                              }
                            ],
                            "id": 2384,
                            "name": "MemberAccess",
                            "src": "5940:15:2"
                          }
                        ],
                        "id": 2385,
                        "name": "Assignment",
                        "src": "5881:74:2"
                      }
                    ],
                    "id": 2386,
                    "name": "ExpressionStatement",
                    "src": "5881:74:2"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "cohort",
                              "referencedDeclaration": 2019,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CohortFactory.Invitation storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2043,
                                          "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                          "value": "invitations"
                                        },
                                        "id": 2387,
                                        "name": "Identifier",
                                        "src": "5974:11:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2337,
                                          "type": "address",
                                          "value": "enterprise"
                                        },
                                        "id": 2388,
                                        "name": "Identifier",
                                        "src": "5986:10:2"
                                      }
                                    ],
                                    "id": 2389,
                                    "name": "IndexAccess",
                                    "src": "5974:23:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2339,
                                      "type": "uint256",
                                      "value": "invitationNumber"
                                    },
                                    "id": 2390,
                                    "name": "Identifier",
                                    "src": "5998:16:2"
                                  }
                                ],
                                "id": 2391,
                                "name": "IndexAccess",
                                "src": "5974:41:2"
                              }
                            ],
                            "id": 2392,
                            "name": "MemberAccess",
                            "src": "5974:48:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 2393,
                                    "name": "ElementaryTypeName",
                                    "src": "6026:7:2"
                                  }
                                ],
                                "id": 2394,
                                "name": "ElementaryTypeNameExpression",
                                "src": "6026:7:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2395,
                                "name": "Literal",
                                "src": "6034:1:2"
                              }
                            ],
                            "id": 2396,
                            "name": "FunctionCall",
                            "src": "6026:10:2"
                          }
                        ],
                        "id": 2397,
                        "name": "BinaryOperation",
                        "src": "5974:62:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_669689d28b6791ae2d682549090a87958066ead5e77b6a40f07e9433f7690650",
                                      "typeString": "literal_string \"CohortFactory:inviteValidator - Problem adding new validator\""
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "type": "function (bool,string memory) pure",
                                  "value": "require"
                                },
                                "id": 2398,
                                "name": "Identifier",
                                "src": "6093:7:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "addAdditionalValidator",
                                      "referencedDeclaration": 3263,
                                      "type": "function (address) external returns (bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "contract ICohort",
                                          "type_conversion": true
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 3286,
                                              "type": "type(contract ICohort)",
                                              "value": "ICohort"
                                            },
                                            "id": 2399,
                                            "name": "Identifier",
                                            "src": "6122:7:2"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "cohort",
                                              "referencedDeclaration": 2019,
                                              "type": "address"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2043,
                                                          "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                          "value": "invitations"
                                                        },
                                                        "id": 2400,
                                                        "name": "Identifier",
                                                        "src": "6130:11:2"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2337,
                                                          "type": "address",
                                                          "value": "enterprise"
                                                        },
                                                        "id": 2401,
                                                        "name": "Identifier",
                                                        "src": "6142:10:2"
                                                      }
                                                    ],
                                                    "id": 2402,
                                                    "name": "IndexAccess",
                                                    "src": "6130:23:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2339,
                                                      "type": "uint256",
                                                      "value": "invitationNumber"
                                                    },
                                                    "id": 2403,
                                                    "name": "Identifier",
                                                    "src": "6154:16:2"
                                                  }
                                                ],
                                                "id": 2404,
                                                "name": "IndexAccess",
                                                "src": "6130:41:2"
                                              }
                                            ],
                                            "id": 2405,
                                            "name": "MemberAccess",
                                            "src": "6130:48:2"
                                          }
                                        ],
                                        "id": 2406,
                                        "name": "FunctionCall",
                                        "src": "6122:57:2"
                                      }
                                    ],
                                    "id": 2407,
                                    "name": "MemberAccess",
                                    "src": "6122:101:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 2408,
                                        "name": "Identifier",
                                        "src": "6224:3:2"
                                      }
                                    ],
                                    "id": 2409,
                                    "name": "MemberAccess",
                                    "src": "6224:10:2"
                                  }
                                ],
                                "id": 2410,
                                "name": "FunctionCall",
                                "src": "6122:113:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "436f686f7274466163746f72793a696e7669746556616c696461746f72202d2050726f626c656d20616464696e67206e65772076616c696461746f72",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "string",
                                  "type": "literal_string \"CohortFactory:inviteValidator - Problem adding new validator\"",
                                  "value": "CohortFactory:inviteValidator - Problem adding new validator"
                                },
                                "id": 2411,
                                "name": "Literal",
                                "src": "6258:62:2"
                              }
                            ],
                            "id": 2412,
                            "name": "FunctionCall",
                            "src": "6093:249:2"
                          }
                        ],
                        "id": 2413,
                        "name": "ExpressionStatement",
                        "src": "6093:249:2"
                      }
                    ],
                    "id": 2414,
                    "name": "IfStatement",
                    "src": "5970:372:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2070,
                              "type": "function (address,uint256)",
                              "value": "InvitationAccepted"
                            },
                            "id": 2415,
                            "name": "Identifier",
                            "src": "6358:18:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 2416,
                                "name": "Identifier",
                                "src": "6377:3:2"
                              }
                            ],
                            "id": 2417,
                            "name": "MemberAccess",
                            "src": "6377:10:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2339,
                              "type": "uint256",
                              "value": "invitationNumber"
                            },
                            "id": 2418,
                            "name": "Identifier",
                            "src": "6389:16:2"
                          }
                        ],
                        "id": 2419,
                        "name": "FunctionCall",
                        "src": "6358:48:2"
                      }
                    ],
                    "id": 2420,
                    "name": "EmitStatement",
                    "src": "6353:53:2"
                  }
                ],
                "id": 2421,
                "name": "Block",
                "src": "5361:1052:2"
              }
            ],
            "id": 2422,
            "name": "FunctionDefinition",
            "src": "5282:1131:2"
          },
          {
            "attributes": {
              "functionSelector": "8e02c1f4",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "clearInvitationRemoveValidator",
              "scope": 3032,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Used by Enterprise to remove existing validator\n @param validator validator to remove\n @param audit type of audit \n @param cohort cohort from which validator is removed"
                },
                "id": 2423,
                "name": "StructuredDocumentation",
                "src": "6419:205:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "validator",
                      "scope": 2500,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2424,
                        "name": "ElementaryTypeName",
                        "src": "6669:7:2"
                      }
                    ],
                    "id": 2425,
                    "name": "VariableDeclaration",
                    "src": "6669:17:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "audit",
                      "scope": 2500,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum CohortFactory.AuditTypes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "AuditTypes",
                          "referencedDeclaration": 1999,
                          "type": "enum CohortFactory.AuditTypes"
                        },
                        "id": 2426,
                        "name": "UserDefinedTypeName",
                        "src": "6688:10:2"
                      }
                    ],
                    "id": 2427,
                    "name": "VariableDeclaration",
                    "src": "6688:16:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "cohort",
                      "scope": 2500,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2428,
                        "name": "ElementaryTypeName",
                        "src": "6706:7:2"
                      }
                    ],
                    "id": 2429,
                    "name": "VariableDeclaration",
                    "src": "6706:14:2"
                  }
                ],
                "id": 2430,
                "name": "ParameterList",
                "src": "6668:53:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2431,
                "name": "ParameterList",
                "src": "6729:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            2433
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 2498,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 2432,
                                "name": "ElementaryTypeName",
                                "src": "6745:7:2"
                              }
                            ],
                            "id": 2433,
                            "name": "VariableDeclaration",
                            "src": "6745:9:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 2434,
                            "name": "Literal",
                            "src": "6757:1:2"
                          }
                        ],
                        "id": 2435,
                        "name": "VariableDeclarationStatement",
                        "src": "6745:13:2"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2433,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 2436,
                            "name": "Identifier",
                            "src": "6760:1:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2043,
                                      "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                      "value": "invitations"
                                    },
                                    "id": 2437,
                                    "name": "Identifier",
                                    "src": "6764:11:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 2438,
                                        "name": "Identifier",
                                        "src": "6776:3:2"
                                      }
                                    ],
                                    "id": 2439,
                                    "name": "MemberAccess",
                                    "src": "6776:10:2"
                                  }
                                ],
                                "id": 2440,
                                "name": "IndexAccess",
                                "src": "6764:23:2"
                              }
                            ],
                            "id": 2441,
                            "name": "MemberAccess",
                            "src": "6764:30:2"
                          }
                        ],
                        "id": 2442,
                        "name": "BinaryOperation",
                        "src": "6760:34:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2433,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 2443,
                                "name": "Identifier",
                                "src": "6796:1:2"
                              }
                            ],
                            "id": 2444,
                            "name": "UnaryOperation",
                            "src": "6796:3:2"
                          }
                        ],
                        "id": 2445,
                        "name": "ExpressionStatement",
                        "src": "6796:3:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {},
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "&&",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                        "typeString": "enum CohortFactory.AuditTypes"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "audits",
                                          "referencedDeclaration": 2017,
                                          "type": "enum CohortFactory.AuditTypes"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CohortFactory.Invitation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2043,
                                                      "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                      "value": "invitations"
                                                    },
                                                    "id": 2446,
                                                    "name": "Identifier",
                                                    "src": "6818:11:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "sender",
                                                      "type": "address payable"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 4294967281,
                                                          "type": "msg",
                                                          "value": "msg"
                                                        },
                                                        "id": 2447,
                                                        "name": "Identifier",
                                                        "src": "6830:3:2"
                                                      }
                                                    ],
                                                    "id": 2448,
                                                    "name": "MemberAccess",
                                                    "src": "6830:10:2"
                                                  }
                                                ],
                                                "id": 2449,
                                                "name": "IndexAccess",
                                                "src": "6818:23:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2433,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 2450,
                                                "name": "Identifier",
                                                "src": "6842:1:2"
                                              }
                                            ],
                                            "id": 2451,
                                            "name": "IndexAccess",
                                            "src": "6818:26:2"
                                          }
                                        ],
                                        "id": 2452,
                                        "name": "MemberAccess",
                                        "src": "6818:33:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2427,
                                          "type": "enum CohortFactory.AuditTypes",
                                          "value": "audit"
                                        },
                                        "id": 2453,
                                        "name": "Identifier",
                                        "src": "6855:5:2"
                                      }
                                    ],
                                    "id": 2454,
                                    "name": "BinaryOperation",
                                    "src": "6818:42:2"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "validator",
                                          "referencedDeclaration": 2011,
                                          "type": "address"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CohortFactory.Invitation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2043,
                                                      "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                      "value": "invitations"
                                                    },
                                                    "id": 2455,
                                                    "name": "Identifier",
                                                    "src": "6881:11:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "sender",
                                                      "type": "address payable"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 4294967281,
                                                          "type": "msg",
                                                          "value": "msg"
                                                        },
                                                        "id": 2456,
                                                        "name": "Identifier",
                                                        "src": "6893:3:2"
                                                      }
                                                    ],
                                                    "id": 2457,
                                                    "name": "MemberAccess",
                                                    "src": "6893:10:2"
                                                  }
                                                ],
                                                "id": 2458,
                                                "name": "IndexAccess",
                                                "src": "6881:23:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2433,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 2459,
                                                "name": "Identifier",
                                                "src": "6905:1:2"
                                              }
                                            ],
                                            "id": 2460,
                                            "name": "IndexAccess",
                                            "src": "6881:26:2"
                                          }
                                        ],
                                        "id": 2461,
                                        "name": "MemberAccess",
                                        "src": "6881:36:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2425,
                                          "type": "address",
                                          "value": "validator"
                                        },
                                        "id": 2462,
                                        "name": "Identifier",
                                        "src": "6922:9:2"
                                      }
                                    ],
                                    "id": 2463,
                                    "name": "BinaryOperation",
                                    "src": "6881:50:2"
                                  }
                                ],
                                "id": 2464,
                                "name": "BinaryOperation",
                                "src": "6818:113:2"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "member_name": "deleted",
                                              "referencedDeclaration": 2021,
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2043,
                                                          "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                          "value": "invitations"
                                                        },
                                                        "id": 2465,
                                                        "name": "Identifier",
                                                        "src": "6950:11:2"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "sender",
                                                          "type": "address payable"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 4294967281,
                                                              "type": "msg",
                                                              "value": "msg"
                                                            },
                                                            "id": 2466,
                                                            "name": "Identifier",
                                                            "src": "6962:3:2"
                                                          }
                                                        ],
                                                        "id": 2467,
                                                        "name": "MemberAccess",
                                                        "src": "6962:10:2"
                                                      }
                                                    ],
                                                    "id": 2469,
                                                    "name": "IndexAccess",
                                                    "src": "6950:23:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2433,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 2468,
                                                    "name": "Identifier",
                                                    "src": "6974:1:2"
                                                  }
                                                ],
                                                "id": 2470,
                                                "name": "IndexAccess",
                                                "src": "6950:26:2"
                                              }
                                            ],
                                            "id": 2471,
                                            "name": "MemberAccess",
                                            "src": "6950:34:2"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "74727565",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "bool",
                                              "type": "bool",
                                              "value": "true"
                                            },
                                            "id": 2472,
                                            "name": "Literal",
                                            "src": "6987:4:2"
                                          }
                                        ],
                                        "id": 2473,
                                        "name": "Assignment",
                                        "src": "6950:41:2"
                                      }
                                    ],
                                    "id": 2474,
                                    "name": "ExpressionStatement",
                                    "src": "6950:41:2"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "tuple()",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                {
                                                  "typeIdentifier": "t_stringliteral_87916c74f88a06d65f718ff024424ef5e606e441482d68995a776e1dd4039ef7",
                                                  "typeString": "literal_string \"CohortFactory:clearInvitationValidator - Problem removing validator in Cohort contract\""
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                              ],
                                              "referencedDeclaration": 4294967278,
                                              "type": "function (bool,string memory) pure",
                                              "value": "require"
                                            },
                                            "id": 2475,
                                            "name": "Identifier",
                                            "src": "7009:7:2"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "tryCall": false,
                                              "type": "bool",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_address_payable",
                                                      "typeString": "address payable"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "removeValidator",
                                                  "referencedDeclaration": 3272,
                                                  "type": "function (address,address) external returns (bool)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "isStructConstructorCall": false,
                                                      "lValueRequested": false,
                                                      "names": [
                                                        null
                                                      ],
                                                      "tryCall": false,
                                                      "type": "contract ICohort",
                                                      "type_conversion": true
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          ],
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 3286,
                                                          "type": "type(contract ICohort)",
                                                          "value": "ICohort"
                                                        },
                                                        "id": 2476,
                                                        "name": "Identifier",
                                                        "src": "7017:7:2"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2429,
                                                          "type": "address",
                                                          "value": "cohort"
                                                        },
                                                        "id": 2477,
                                                        "name": "Identifier",
                                                        "src": "7025:6:2"
                                                      }
                                                    ],
                                                    "id": 2478,
                                                    "name": "FunctionCall",
                                                    "src": "7017:15:2"
                                                  }
                                                ],
                                                "id": 2479,
                                                "name": "MemberAccess",
                                                "src": "7017:31:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2425,
                                                  "type": "address",
                                                  "value": "validator"
                                                },
                                                "id": 2480,
                                                "name": "Identifier",
                                                "src": "7049:9:2"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 4294967281,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 2481,
                                                    "name": "Identifier",
                                                    "src": "7060:3:2"
                                                  }
                                                ],
                                                "id": 2482,
                                                "name": "MemberAccess",
                                                "src": "7060:10:2"
                                              }
                                            ],
                                            "id": 2483,
                                            "name": "FunctionCall",
                                            "src": "7017:54:2"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "436f686f7274466163746f72793a636c656172496e7669746174696f6e56616c696461746f72202d2050726f626c656d2072656d6f76696e672076616c696461746f7220696e20436f686f727420636f6e7472616374",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "string",
                                              "type": "literal_string \"CohortFactory:clearInvitationValidator - Problem removing validator in Cohort contract\"",
                                              "value": "CohortFactory:clearInvitationValidator - Problem removing validator in Cohort contract"
                                            },
                                            "id": 2484,
                                            "name": "Literal",
                                            "src": "7098:88:2"
                                          }
                                        ],
                                        "id": 2485,
                                        "name": "FunctionCall",
                                        "src": "7009:178:2"
                                      }
                                    ],
                                    "id": 2486,
                                    "name": "ExpressionStatement",
                                    "src": "7009:178:2"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "tuple()",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                                  "typeString": "enum CohortFactory.AuditTypes"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2094,
                                              "type": "function (address,enum CohortFactory.AuditTypes,address,address)",
                                              "value": "ValidatorCleared"
                                            },
                                            "id": 2487,
                                            "name": "Identifier",
                                            "src": "7210:16:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2425,
                                              "type": "address",
                                              "value": "validator"
                                            },
                                            "id": 2488,
                                            "name": "Identifier",
                                            "src": "7227:9:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2427,
                                              "type": "enum CohortFactory.AuditTypes",
                                              "value": "audit"
                                            },
                                            "id": 2489,
                                            "name": "Identifier",
                                            "src": "7238:5:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2429,
                                              "type": "address",
                                              "value": "cohort"
                                            },
                                            "id": 2490,
                                            "name": "Identifier",
                                            "src": "7245:6:2"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 4294967281,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 2491,
                                                "name": "Identifier",
                                                "src": "7253:3:2"
                                              }
                                            ],
                                            "id": 2492,
                                            "name": "MemberAccess",
                                            "src": "7253:10:2"
                                          }
                                        ],
                                        "id": 2493,
                                        "name": "FunctionCall",
                                        "src": "7210:54:2"
                                      }
                                    ],
                                    "id": 2494,
                                    "name": "EmitStatement",
                                    "src": "7205:59:2"
                                  }
                                ],
                                "id": 2495,
                                "name": "Block",
                                "src": "6932:347:2"
                              }
                            ],
                            "id": 2496,
                            "name": "IfStatement",
                            "src": "6814:465:2"
                          }
                        ],
                        "id": 2497,
                        "name": "Block",
                        "src": "6800:489:2"
                      }
                    ],
                    "id": 2498,
                    "name": "ForStatement",
                    "src": "6740:549:2"
                  }
                ],
                "id": 2499,
                "name": "Block",
                "src": "6729:566:2"
              }
            ],
            "id": 2500,
            "name": "FunctionDefinition",
            "src": "6629:666:2"
          },
          {
            "attributes": {
              "functionSelector": "265fe4e7",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "clearInvitationRemoveValidator",
              "scope": 3032,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "validator",
                      "scope": 2566,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2501,
                        "name": "ElementaryTypeName",
                        "src": "7341:7:2"
                      }
                    ],
                    "id": 2502,
                    "name": "VariableDeclaration",
                    "src": "7341:17:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "audit",
                      "scope": 2566,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum CohortFactory.AuditTypes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "AuditTypes",
                          "referencedDeclaration": 1999,
                          "type": "enum CohortFactory.AuditTypes"
                        },
                        "id": 2503,
                        "name": "UserDefinedTypeName",
                        "src": "7360:10:2"
                      }
                    ],
                    "id": 2504,
                    "name": "VariableDeclaration",
                    "src": "7360:16:2"
                  }
                ],
                "id": 2505,
                "name": "ParameterList",
                "src": "7340:37:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2506,
                "name": "ParameterList",
                "src": "7385:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            2508
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 2564,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 2507,
                                "name": "ElementaryTypeName",
                                "src": "7401:7:2"
                              }
                            ],
                            "id": 2508,
                            "name": "VariableDeclaration",
                            "src": "7401:9:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 2509,
                            "name": "Literal",
                            "src": "7413:1:2"
                          }
                        ],
                        "id": 2510,
                        "name": "VariableDeclarationStatement",
                        "src": "7401:13:2"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2508,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 2511,
                            "name": "Identifier",
                            "src": "7416:1:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2043,
                                      "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                      "value": "invitations"
                                    },
                                    "id": 2512,
                                    "name": "Identifier",
                                    "src": "7420:11:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 2513,
                                        "name": "Identifier",
                                        "src": "7432:3:2"
                                      }
                                    ],
                                    "id": 2514,
                                    "name": "MemberAccess",
                                    "src": "7432:10:2"
                                  }
                                ],
                                "id": 2515,
                                "name": "IndexAccess",
                                "src": "7420:23:2"
                              }
                            ],
                            "id": 2516,
                            "name": "MemberAccess",
                            "src": "7420:30:2"
                          }
                        ],
                        "id": 2517,
                        "name": "BinaryOperation",
                        "src": "7416:34:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2508,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 2518,
                                "name": "Identifier",
                                "src": "7452:1:2"
                              }
                            ],
                            "id": 2519,
                            "name": "UnaryOperation",
                            "src": "7452:3:2"
                          }
                        ],
                        "id": 2520,
                        "name": "ExpressionStatement",
                        "src": "7452:3:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {},
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "&&",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                        "typeString": "enum CohortFactory.AuditTypes"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "audits",
                                          "referencedDeclaration": 2017,
                                          "type": "enum CohortFactory.AuditTypes"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CohortFactory.Invitation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2043,
                                                      "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                      "value": "invitations"
                                                    },
                                                    "id": 2521,
                                                    "name": "Identifier",
                                                    "src": "7474:11:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "sender",
                                                      "type": "address payable"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 4294967281,
                                                          "type": "msg",
                                                          "value": "msg"
                                                        },
                                                        "id": 2522,
                                                        "name": "Identifier",
                                                        "src": "7486:3:2"
                                                      }
                                                    ],
                                                    "id": 2523,
                                                    "name": "MemberAccess",
                                                    "src": "7486:10:2"
                                                  }
                                                ],
                                                "id": 2524,
                                                "name": "IndexAccess",
                                                "src": "7474:23:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2508,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 2525,
                                                "name": "Identifier",
                                                "src": "7498:1:2"
                                              }
                                            ],
                                            "id": 2526,
                                            "name": "IndexAccess",
                                            "src": "7474:26:2"
                                          }
                                        ],
                                        "id": 2527,
                                        "name": "MemberAccess",
                                        "src": "7474:33:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2504,
                                          "type": "enum CohortFactory.AuditTypes",
                                          "value": "audit"
                                        },
                                        "id": 2528,
                                        "name": "Identifier",
                                        "src": "7511:5:2"
                                      }
                                    ],
                                    "id": 2529,
                                    "name": "BinaryOperation",
                                    "src": "7474:42:2"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "validator",
                                          "referencedDeclaration": 2011,
                                          "type": "address"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CohortFactory.Invitation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2043,
                                                      "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                      "value": "invitations"
                                                    },
                                                    "id": 2530,
                                                    "name": "Identifier",
                                                    "src": "7537:11:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "sender",
                                                      "type": "address payable"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 4294967281,
                                                          "type": "msg",
                                                          "value": "msg"
                                                        },
                                                        "id": 2531,
                                                        "name": "Identifier",
                                                        "src": "7549:3:2"
                                                      }
                                                    ],
                                                    "id": 2532,
                                                    "name": "MemberAccess",
                                                    "src": "7549:10:2"
                                                  }
                                                ],
                                                "id": 2533,
                                                "name": "IndexAccess",
                                                "src": "7537:23:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2508,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 2534,
                                                "name": "Identifier",
                                                "src": "7561:1:2"
                                              }
                                            ],
                                            "id": 2535,
                                            "name": "IndexAccess",
                                            "src": "7537:26:2"
                                          }
                                        ],
                                        "id": 2536,
                                        "name": "MemberAccess",
                                        "src": "7537:36:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2502,
                                          "type": "address",
                                          "value": "validator"
                                        },
                                        "id": 2537,
                                        "name": "Identifier",
                                        "src": "7578:9:2"
                                      }
                                    ],
                                    "id": 2538,
                                    "name": "BinaryOperation",
                                    "src": "7537:50:2"
                                  }
                                ],
                                "id": 2539,
                                "name": "BinaryOperation",
                                "src": "7474:113:2"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "member_name": "deleted",
                                              "referencedDeclaration": 2021,
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2043,
                                                          "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                          "value": "invitations"
                                                        },
                                                        "id": 2540,
                                                        "name": "Identifier",
                                                        "src": "7606:11:2"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "sender",
                                                          "type": "address payable"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 4294967281,
                                                              "type": "msg",
                                                              "value": "msg"
                                                            },
                                                            "id": 2541,
                                                            "name": "Identifier",
                                                            "src": "7618:3:2"
                                                          }
                                                        ],
                                                        "id": 2542,
                                                        "name": "MemberAccess",
                                                        "src": "7618:10:2"
                                                      }
                                                    ],
                                                    "id": 2544,
                                                    "name": "IndexAccess",
                                                    "src": "7606:23:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2508,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 2543,
                                                    "name": "Identifier",
                                                    "src": "7630:1:2"
                                                  }
                                                ],
                                                "id": 2545,
                                                "name": "IndexAccess",
                                                "src": "7606:26:2"
                                              }
                                            ],
                                            "id": 2546,
                                            "name": "MemberAccess",
                                            "src": "7606:34:2"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "74727565",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "bool",
                                              "type": "bool",
                                              "value": "true"
                                            },
                                            "id": 2547,
                                            "name": "Literal",
                                            "src": "7643:4:2"
                                          }
                                        ],
                                        "id": 2548,
                                        "name": "Assignment",
                                        "src": "7606:41:2"
                                      }
                                    ],
                                    "id": 2549,
                                    "name": "ExpressionStatement",
                                    "src": "7606:41:2"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "tuple()",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                                  "typeString": "enum CohortFactory.AuditTypes"
                                                },
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                },
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2094,
                                              "type": "function (address,enum CohortFactory.AuditTypes,address,address)",
                                              "value": "ValidatorCleared"
                                            },
                                            "id": 2550,
                                            "name": "Identifier",
                                            "src": "7686:16:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2502,
                                              "type": "address",
                                              "value": "validator"
                                            },
                                            "id": 2551,
                                            "name": "Identifier",
                                            "src": "7703:9:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2504,
                                              "type": "enum CohortFactory.AuditTypes",
                                              "value": "audit"
                                            },
                                            "id": 2552,
                                            "name": "Identifier",
                                            "src": "7714:5:2"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "tryCall": false,
                                              "type": "address payable",
                                              "type_conversion": true
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_0_by_1",
                                                      "typeString": "int_const 0"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "type": "type(address)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "name": "address"
                                                    },
                                                    "id": 2553,
                                                    "name": "ElementaryTypeName",
                                                    "src": "7721:7:2"
                                                  }
                                                ],
                                                "id": 2554,
                                                "name": "ElementaryTypeNameExpression",
                                                "src": "7721:7:2"
                                              },
                                              {
                                                "attributes": {
                                                  "hexvalue": "307830",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "token": "number",
                                                  "type": "int_const 0",
                                                  "value": "0x0"
                                                },
                                                "id": 2555,
                                                "name": "Literal",
                                                "src": "7729:3:2"
                                              }
                                            ],
                                            "id": 2556,
                                            "name": "FunctionCall",
                                            "src": "7721:12:2"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 4294967281,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 2557,
                                                "name": "Identifier",
                                                "src": "7735:3:2"
                                              }
                                            ],
                                            "id": 2558,
                                            "name": "MemberAccess",
                                            "src": "7735:10:2"
                                          }
                                        ],
                                        "id": 2559,
                                        "name": "FunctionCall",
                                        "src": "7686:60:2"
                                      }
                                    ],
                                    "id": 2560,
                                    "name": "EmitStatement",
                                    "src": "7681:65:2"
                                  }
                                ],
                                "id": 2561,
                                "name": "Block",
                                "src": "7588:173:2"
                              }
                            ],
                            "id": 2562,
                            "name": "IfStatement",
                            "src": "7470:291:2"
                          }
                        ],
                        "id": 2563,
                        "name": "Block",
                        "src": "7456:315:2"
                      }
                    ],
                    "id": 2564,
                    "name": "ForStatement",
                    "src": "7396:375:2"
                  }
                ],
                "id": 2565,
                "name": "Block",
                "src": "7385:392:2"
              }
            ],
            "id": 2566,
            "name": "FunctionDefinition",
            "src": "7301:476:2"
          },
          {
            "attributes": {
              "functionSelector": "0939a997",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "acceptInvitationMultiple",
              "scope": 3032,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Used by Validator to accept multiple Enterprise invitation\n @param enterprise address of the Enterprise who created invitation\n @param invitationNumber invitation number"
                },
                "id": 2567,
                "name": "StructuredDocumentation",
                "src": "7783:201:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "enterprise",
                      "scope": 2603,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 2568,
                            "name": "ElementaryTypeName",
                            "src": "8023:7:2"
                          }
                        ],
                        "id": 2569,
                        "name": "ArrayTypeName",
                        "src": "8023:9:2"
                      }
                    ],
                    "id": 2570,
                    "name": "VariableDeclaration",
                    "src": "8023:27:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "invitationNumber",
                      "scope": 2603,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2571,
                            "name": "ElementaryTypeName",
                            "src": "8052:7:2"
                          }
                        ],
                        "id": 2572,
                        "name": "ArrayTypeName",
                        "src": "8052:9:2"
                      }
                    ],
                    "id": 2573,
                    "name": "VariableDeclaration",
                    "src": "8052:33:2"
                  }
                ],
                "id": 2574,
                "name": "ParameterList",
                "src": "8022:64:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2575,
                "name": "ParameterList",
                "src": "8093:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2577
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "length",
                          "scope": 2602,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2576,
                            "name": "ElementaryTypeName",
                            "src": "8104:7:2"
                          }
                        ],
                        "id": 2577,
                        "name": "VariableDeclaration",
                        "src": "8104:14:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "length",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2570,
                              "type": "address[] memory",
                              "value": "enterprise"
                            },
                            "id": 2578,
                            "name": "Identifier",
                            "src": "8121:10:2"
                          }
                        ],
                        "id": 2579,
                        "name": "MemberAccess",
                        "src": "8121:17:2"
                      }
                    ],
                    "id": 2580,
                    "name": "VariableDeclarationStatement",
                    "src": "8104:34:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            2582
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 2601,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 2581,
                                "name": "ElementaryTypeName",
                                "src": "8153:7:2"
                              }
                            ],
                            "id": 2582,
                            "name": "VariableDeclaration",
                            "src": "8153:9:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 2583,
                            "name": "Literal",
                            "src": "8165:1:2"
                          }
                        ],
                        "id": 2584,
                        "name": "VariableDeclarationStatement",
                        "src": "8153:13:2"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2582,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 2585,
                            "name": "Identifier",
                            "src": "8168:1:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2577,
                              "type": "uint256",
                              "value": "length"
                            },
                            "id": 2586,
                            "name": "Identifier",
                            "src": "8172:6:2"
                          }
                        ],
                        "id": 2587,
                        "name": "BinaryOperation",
                        "src": "8168:10:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2582,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 2588,
                                "name": "Identifier",
                                "src": "8180:1:2"
                              }
                            ],
                            "id": 2589,
                            "name": "UnaryOperation",
                            "src": "8180:3:2"
                          }
                        ],
                        "id": 2590,
                        "name": "ExpressionStatement",
                        "src": "8180:3:2"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2422,
                                      "type": "function (address,uint256)",
                                      "value": "acceptInvitation"
                                    },
                                    "id": 2591,
                                    "name": "Identifier",
                                    "src": "8199:16:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "address"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2570,
                                          "type": "address[] memory",
                                          "value": "enterprise"
                                        },
                                        "id": 2592,
                                        "name": "Identifier",
                                        "src": "8216:10:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2582,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 2593,
                                        "name": "Identifier",
                                        "src": "8227:1:2"
                                      }
                                    ],
                                    "id": 2594,
                                    "name": "IndexAccess",
                                    "src": "8216:13:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2573,
                                          "type": "uint256[] memory",
                                          "value": "invitationNumber"
                                        },
                                        "id": 2595,
                                        "name": "Identifier",
                                        "src": "8231:16:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2582,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 2596,
                                        "name": "Identifier",
                                        "src": "8248:1:2"
                                      }
                                    ],
                                    "id": 2597,
                                    "name": "IndexAccess",
                                    "src": "8231:19:2"
                                  }
                                ],
                                "id": 2598,
                                "name": "FunctionCall",
                                "src": "8199:52:2"
                              }
                            ],
                            "id": 2599,
                            "name": "ExpressionStatement",
                            "src": "8199:52:2"
                          }
                        ],
                        "id": 2600,
                        "name": "Block",
                        "src": "8185:77:2"
                      }
                    ],
                    "id": 2601,
                    "name": "ForStatement",
                    "src": "8148:114:2"
                  }
                ],
                "id": 2602,
                "name": "Block",
                "src": "8093:175:2"
              }
            ],
            "id": 2603,
            "name": "FunctionDefinition",
            "src": "7989:279:2"
          },
          {
            "attributes": {
              "functionSelector": "247e28b3",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "returnInvitationCount",
              "scope": 3032,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev To return invitation count\n @param enterprise address of the Enterprise who created invitation\n @param audit type\n @return count of invitations"
                },
                "id": 2604,
                "name": "StructuredDocumentation",
                "src": "8274:180:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "enterprise",
                      "scope": 2663,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2605,
                        "name": "ElementaryTypeName",
                        "src": "8490:7:2"
                      }
                    ],
                    "id": 2606,
                    "name": "VariableDeclaration",
                    "src": "8490:18:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "audit",
                      "scope": 2663,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum CohortFactory.AuditTypes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "AuditTypes",
                          "referencedDeclaration": 1999,
                          "type": "enum CohortFactory.AuditTypes"
                        },
                        "id": 2607,
                        "name": "UserDefinedTypeName",
                        "src": "8510:10:2"
                      }
                    ],
                    "id": 2608,
                    "name": "VariableDeclaration",
                    "src": "8510:16:2"
                  }
                ],
                "id": 2609,
                "name": "ParameterList",
                "src": "8489:38:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2663,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2610,
                        "name": "ElementaryTypeName",
                        "src": "8548:7:2"
                      }
                    ],
                    "id": 2611,
                    "name": "VariableDeclaration",
                    "src": "8548:7:2"
                  }
                ],
                "id": 2612,
                "name": "ParameterList",
                "src": "8547:9:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2614
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "count",
                          "scope": 2662,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2613,
                            "name": "ElementaryTypeName",
                            "src": "8568:7:2"
                          }
                        ],
                        "id": 2614,
                        "name": "VariableDeclaration",
                        "src": "8568:13:2"
                      }
                    ],
                    "id": 2615,
                    "name": "VariableDeclarationStatement",
                    "src": "8568:13:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            2617
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 2659,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 2616,
                                "name": "ElementaryTypeName",
                                "src": "8597:4:2"
                              }
                            ],
                            "id": 2617,
                            "name": "VariableDeclaration",
                            "src": "8597:6:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 2618,
                            "name": "Literal",
                            "src": "8604:1:2"
                          }
                        ],
                        "id": 2619,
                        "name": "VariableDeclarationStatement",
                        "src": "8597:8:2"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2617,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 2620,
                            "name": "Identifier",
                            "src": "8607:1:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2043,
                                      "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                      "value": "invitations"
                                    },
                                    "id": 2621,
                                    "name": "Identifier",
                                    "src": "8611:11:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2606,
                                      "type": "address",
                                      "value": "enterprise"
                                    },
                                    "id": 2622,
                                    "name": "Identifier",
                                    "src": "8623:10:2"
                                  }
                                ],
                                "id": 2623,
                                "name": "IndexAccess",
                                "src": "8611:23:2"
                              }
                            ],
                            "id": 2624,
                            "name": "MemberAccess",
                            "src": "8611:30:2"
                          }
                        ],
                        "id": 2625,
                        "name": "BinaryOperation",
                        "src": "8607:34:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2617,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 2626,
                                "name": "Identifier",
                                "src": "8645:1:2"
                              }
                            ],
                            "id": 2627,
                            "name": "UnaryOperation",
                            "src": "8643:3:2"
                          }
                        ],
                        "id": 2628,
                        "name": "ExpressionStatement",
                        "src": "8643:3:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {},
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "&&",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "&&",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                            "typeString": "enum CohortFactory.AuditTypes"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "==",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "audits",
                                              "referencedDeclaration": 2017,
                                              "type": "enum CohortFactory.AuditTypes"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2043,
                                                          "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                          "value": "invitations"
                                                        },
                                                        "id": 2629,
                                                        "name": "Identifier",
                                                        "src": "8666:11:2"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2606,
                                                          "type": "address",
                                                          "value": "enterprise"
                                                        },
                                                        "id": 2630,
                                                        "name": "Identifier",
                                                        "src": "8678:10:2"
                                                      }
                                                    ],
                                                    "id": 2631,
                                                    "name": "IndexAccess",
                                                    "src": "8666:23:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2617,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 2632,
                                                    "name": "Identifier",
                                                    "src": "8690:1:2"
                                                  }
                                                ],
                                                "id": 2633,
                                                "name": "IndexAccess",
                                                "src": "8666:26:2"
                                              }
                                            ],
                                            "id": 2634,
                                            "name": "MemberAccess",
                                            "src": "8666:33:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2608,
                                              "type": "enum CohortFactory.AuditTypes",
                                              "value": "audit"
                                            },
                                            "id": 2635,
                                            "name": "Identifier",
                                            "src": "8703:5:2"
                                          }
                                        ],
                                        "id": 2636,
                                        "name": "BinaryOperation",
                                        "src": "8666:42:2"
                                      },
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "!=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "acceptanceDate",
                                              "referencedDeclaration": 2015,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2043,
                                                          "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                          "value": "invitations"
                                                        },
                                                        "id": 2637,
                                                        "name": "Identifier",
                                                        "src": "8729:11:2"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2606,
                                                          "type": "address",
                                                          "value": "enterprise"
                                                        },
                                                        "id": 2638,
                                                        "name": "Identifier",
                                                        "src": "8741:10:2"
                                                      }
                                                    ],
                                                    "id": 2639,
                                                    "name": "IndexAccess",
                                                    "src": "8729:23:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2617,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 2640,
                                                    "name": "Identifier",
                                                    "src": "8753:1:2"
                                                  }
                                                ],
                                                "id": 2641,
                                                "name": "IndexAccess",
                                                "src": "8729:26:2"
                                              }
                                            ],
                                            "id": 2642,
                                            "name": "MemberAccess",
                                            "src": "8729:41:2"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "30",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "number",
                                              "type": "int_const 0",
                                              "value": "0"
                                            },
                                            "id": 2643,
                                            "name": "Literal",
                                            "src": "8774:1:2"
                                          }
                                        ],
                                        "id": 2644,
                                        "name": "BinaryOperation",
                                        "src": "8729:46:2"
                                      }
                                    ],
                                    "id": 2645,
                                    "name": "BinaryOperation",
                                    "src": "8666:109:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "!",
                                      "prefix": true,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "deleted",
                                          "referencedDeclaration": 2021,
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CohortFactory.Invitation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2043,
                                                      "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                      "value": "invitations"
                                                    },
                                                    "id": 2646,
                                                    "name": "Identifier",
                                                    "src": "8796:11:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2606,
                                                      "type": "address",
                                                      "value": "enterprise"
                                                    },
                                                    "id": 2647,
                                                    "name": "Identifier",
                                                    "src": "8808:10:2"
                                                  }
                                                ],
                                                "id": 2648,
                                                "name": "IndexAccess",
                                                "src": "8796:23:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2617,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 2649,
                                                "name": "Identifier",
                                                "src": "8820:1:2"
                                              }
                                            ],
                                            "id": 2650,
                                            "name": "IndexAccess",
                                            "src": "8796:26:2"
                                          }
                                        ],
                                        "id": 2651,
                                        "name": "MemberAccess",
                                        "src": "8796:34:2"
                                      }
                                    ],
                                    "id": 2652,
                                    "name": "UnaryOperation",
                                    "src": "8795:35:2"
                                  }
                                ],
                                "id": 2653,
                                "name": "BinaryOperation",
                                "src": "8666:164:2"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "++",
                                      "prefix": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2614,
                                          "type": "uint256",
                                          "value": "count"
                                        },
                                        "id": 2654,
                                        "name": "Identifier",
                                        "src": "8848:5:2"
                                      }
                                    ],
                                    "id": 2655,
                                    "name": "UnaryOperation",
                                    "src": "8848:8:2"
                                  }
                                ],
                                "id": 2656,
                                "name": "ExpressionStatement",
                                "src": "8848:8:2"
                              }
                            ],
                            "id": 2657,
                            "name": "IfStatement",
                            "src": "8662:194:2"
                          }
                        ],
                        "id": 2658,
                        "name": "Block",
                        "src": "8648:219:2"
                      }
                    ],
                    "id": 2659,
                    "name": "ForStatement",
                    "src": "8592:275:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2612
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 2614,
                          "type": "uint256",
                          "value": "count"
                        },
                        "id": 2660,
                        "name": "Identifier",
                        "src": "8883:5:2"
                      }
                    ],
                    "id": 2661,
                    "name": "Return",
                    "src": "8876:12:2"
                  }
                ],
                "id": 2662,
                "name": "Block",
                "src": "8557:338:2"
              }
            ],
            "id": 2663,
            "name": "FunctionDefinition",
            "src": "8459:436:2"
          },
          {
            "attributes": {
              "functionSelector": "1f94fc3a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "isValidatorInvited",
              "scope": 3032,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Used to determine if validator has been invited and/or if validation has been accepted\n @param enterprise inviting party\n @param validator address of the validator\n @param audits types\n @return true if invited\n @return true if accepted invitation"
                },
                "id": 2664,
                "name": "StructuredDocumentation",
                "src": "8901:293:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "enterprise",
                      "scope": 2741,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2665,
                        "name": "ElementaryTypeName",
                        "src": "9227:7:2"
                      }
                    ],
                    "id": 2666,
                    "name": "VariableDeclaration",
                    "src": "9227:18:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "validator",
                      "scope": 2741,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2667,
                        "name": "ElementaryTypeName",
                        "src": "9247:7:2"
                      }
                    ],
                    "id": 2668,
                    "name": "VariableDeclaration",
                    "src": "9247:17:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "audits",
                      "scope": 2741,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum CohortFactory.AuditTypes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "AuditTypes",
                          "referencedDeclaration": 1999,
                          "type": "enum CohortFactory.AuditTypes"
                        },
                        "id": 2669,
                        "name": "UserDefinedTypeName",
                        "src": "9266:10:2"
                      }
                    ],
                    "id": 2670,
                    "name": "VariableDeclaration",
                    "src": "9266:17:2"
                  }
                ],
                "id": 2671,
                "name": "ParameterList",
                "src": "9226:58:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2741,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 2672,
                        "name": "ElementaryTypeName",
                        "src": "9306:4:2"
                      }
                    ],
                    "id": 2673,
                    "name": "VariableDeclaration",
                    "src": "9306:4:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2741,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 2674,
                        "name": "ElementaryTypeName",
                        "src": "9312:4:2"
                      }
                    ],
                    "id": 2675,
                    "name": "VariableDeclaration",
                    "src": "9312:4:2"
                  }
                ],
                "id": 2676,
                "name": "ParameterList",
                "src": "9305:12:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            2678
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 2735,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 2677,
                                "name": "ElementaryTypeName",
                                "src": "9334:4:2"
                              }
                            ],
                            "id": 2678,
                            "name": "VariableDeclaration",
                            "src": "9334:6:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 2679,
                            "name": "Literal",
                            "src": "9341:1:2"
                          }
                        ],
                        "id": 2680,
                        "name": "VariableDeclarationStatement",
                        "src": "9334:8:2"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2678,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 2681,
                            "name": "Identifier",
                            "src": "9344:1:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2043,
                                      "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                      "value": "invitations"
                                    },
                                    "id": 2682,
                                    "name": "Identifier",
                                    "src": "9348:11:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2666,
                                      "type": "address",
                                      "value": "enterprise"
                                    },
                                    "id": 2683,
                                    "name": "Identifier",
                                    "src": "9360:10:2"
                                  }
                                ],
                                "id": 2684,
                                "name": "IndexAccess",
                                "src": "9348:23:2"
                              }
                            ],
                            "id": 2685,
                            "name": "MemberAccess",
                            "src": "9348:30:2"
                          }
                        ],
                        "id": 2686,
                        "name": "BinaryOperation",
                        "src": "9344:34:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2678,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 2687,
                                "name": "Identifier",
                                "src": "9382:1:2"
                              }
                            ],
                            "id": 2688,
                            "name": "UnaryOperation",
                            "src": "9380:3:2"
                          }
                        ],
                        "id": 2689,
                        "name": "ExpressionStatement",
                        "src": "9380:3:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {},
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "&&",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "&&",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                            "typeString": "enum CohortFactory.AuditTypes"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "==",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "audits",
                                              "referencedDeclaration": 2017,
                                              "type": "enum CohortFactory.AuditTypes"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2043,
                                                          "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                          "value": "invitations"
                                                        },
                                                        "id": 2690,
                                                        "name": "Identifier",
                                                        "src": "9403:11:2"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2666,
                                                          "type": "address",
                                                          "value": "enterprise"
                                                        },
                                                        "id": 2691,
                                                        "name": "Identifier",
                                                        "src": "9415:10:2"
                                                      }
                                                    ],
                                                    "id": 2692,
                                                    "name": "IndexAccess",
                                                    "src": "9403:23:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2678,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 2693,
                                                    "name": "Identifier",
                                                    "src": "9427:1:2"
                                                  }
                                                ],
                                                "id": 2694,
                                                "name": "IndexAccess",
                                                "src": "9403:26:2"
                                              }
                                            ],
                                            "id": 2695,
                                            "name": "MemberAccess",
                                            "src": "9403:33:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2670,
                                              "type": "enum CohortFactory.AuditTypes",
                                              "value": "audits"
                                            },
                                            "id": 2696,
                                            "name": "Identifier",
                                            "src": "9440:6:2"
                                          }
                                        ],
                                        "id": 2697,
                                        "name": "BinaryOperation",
                                        "src": "9403:43:2"
                                      },
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "==",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "validator",
                                              "referencedDeclaration": 2011,
                                              "type": "address"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2043,
                                                          "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                          "value": "invitations"
                                                        },
                                                        "id": 2698,
                                                        "name": "Identifier",
                                                        "src": "9467:11:2"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2666,
                                                          "type": "address",
                                                          "value": "enterprise"
                                                        },
                                                        "id": 2699,
                                                        "name": "Identifier",
                                                        "src": "9479:10:2"
                                                      }
                                                    ],
                                                    "id": 2700,
                                                    "name": "IndexAccess",
                                                    "src": "9467:23:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2678,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 2701,
                                                    "name": "Identifier",
                                                    "src": "9491:1:2"
                                                  }
                                                ],
                                                "id": 2702,
                                                "name": "IndexAccess",
                                                "src": "9467:26:2"
                                              }
                                            ],
                                            "id": 2703,
                                            "name": "MemberAccess",
                                            "src": "9467:36:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2668,
                                              "type": "address",
                                              "value": "validator"
                                            },
                                            "id": 2704,
                                            "name": "Identifier",
                                            "src": "9507:9:2"
                                          }
                                        ],
                                        "id": 2705,
                                        "name": "BinaryOperation",
                                        "src": "9467:49:2"
                                      }
                                    ],
                                    "id": 2706,
                                    "name": "BinaryOperation",
                                    "src": "9403:113:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "!",
                                      "prefix": true,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "deleted",
                                          "referencedDeclaration": 2021,
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CohortFactory.Invitation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2043,
                                                      "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                      "value": "invitations"
                                                    },
                                                    "id": 2707,
                                                    "name": "Identifier",
                                                    "src": "9537:11:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2666,
                                                      "type": "address",
                                                      "value": "enterprise"
                                                    },
                                                    "id": 2708,
                                                    "name": "Identifier",
                                                    "src": "9549:10:2"
                                                  }
                                                ],
                                                "id": 2709,
                                                "name": "IndexAccess",
                                                "src": "9537:23:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2678,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 2710,
                                                "name": "Identifier",
                                                "src": "9561:1:2"
                                              }
                                            ],
                                            "id": 2711,
                                            "name": "IndexAccess",
                                            "src": "9537:26:2"
                                          }
                                        ],
                                        "id": 2712,
                                        "name": "MemberAccess",
                                        "src": "9537:34:2"
                                      }
                                    ],
                                    "id": 2713,
                                    "name": "UnaryOperation",
                                    "src": "9536:35:2"
                                  }
                                ],
                                "id": 2714,
                                "name": "BinaryOperation",
                                "src": "9403:168:2"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {},
                                    "children": [
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": ">",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "acceptanceDate",
                                              "referencedDeclaration": 2015,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2043,
                                                          "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                          "value": "invitations"
                                                        },
                                                        "id": 2715,
                                                        "name": "Identifier",
                                                        "src": "9594:11:2"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2666,
                                                          "type": "address",
                                                          "value": "enterprise"
                                                        },
                                                        "id": 2716,
                                                        "name": "Identifier",
                                                        "src": "9606:10:2"
                                                      }
                                                    ],
                                                    "id": 2717,
                                                    "name": "IndexAccess",
                                                    "src": "9594:23:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2678,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 2718,
                                                    "name": "Identifier",
                                                    "src": "9618:1:2"
                                                  }
                                                ],
                                                "id": 2719,
                                                "name": "IndexAccess",
                                                "src": "9594:26:2"
                                              }
                                            ],
                                            "id": 2720,
                                            "name": "MemberAccess",
                                            "src": "9594:41:2"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "30",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "number",
                                              "type": "int_const 0",
                                              "value": "0"
                                            },
                                            "id": 2721,
                                            "name": "Literal",
                                            "src": "9638:1:2"
                                          }
                                        ],
                                        "id": 2722,
                                        "name": "BinaryOperation",
                                        "src": "9594:45:2"
                                      },
                                      {
                                        "attributes": {
                                          "functionReturnParameters": 2676
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "type": "tuple(bool,bool)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "hexvalue": "74727565",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "token": "bool",
                                                  "type": "bool",
                                                  "value": "true"
                                                },
                                                "id": 2723,
                                                "name": "Literal",
                                                "src": "9669:4:2"
                                              },
                                              {
                                                "attributes": {
                                                  "hexvalue": "74727565",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "token": "bool",
                                                  "type": "bool",
                                                  "value": "true"
                                                },
                                                "id": 2724,
                                                "name": "Literal",
                                                "src": "9675:4:2"
                                              }
                                            ],
                                            "id": 2725,
                                            "name": "TupleExpression",
                                            "src": "9668:12:2"
                                          }
                                        ],
                                        "id": 2726,
                                        "name": "Return",
                                        "src": "9661:19:2"
                                      }
                                    ],
                                    "id": 2727,
                                    "name": "IfStatement",
                                    "src": "9590:90:2"
                                  },
                                  {
                                    "attributes": {
                                      "functionReturnParameters": 2676
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "tuple(bool,bool)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "hexvalue": "74727565",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "bool",
                                              "type": "bool",
                                              "value": "true"
                                            },
                                            "id": 2728,
                                            "name": "Literal",
                                            "src": "9706:4:2"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "66616c7365",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "bool",
                                              "type": "bool",
                                              "value": "false"
                                            },
                                            "id": 2729,
                                            "name": "Literal",
                                            "src": "9712:5:2"
                                          }
                                        ],
                                        "id": 2730,
                                        "name": "TupleExpression",
                                        "src": "9705:13:2"
                                      }
                                    ],
                                    "id": 2731,
                                    "name": "Return",
                                    "src": "9698:20:2"
                                  }
                                ],
                                "id": 2732,
                                "name": "Block",
                                "src": "9572:161:2"
                              }
                            ],
                            "id": 2733,
                            "name": "IfStatement",
                            "src": "9399:334:2"
                          }
                        ],
                        "id": 2734,
                        "name": "Block",
                        "src": "9385:358:2"
                      }
                    ],
                    "id": 2735,
                    "name": "ForStatement",
                    "src": "9329:414:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2676
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "tuple(bool,bool)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 2736,
                            "name": "Literal",
                            "src": "9760:5:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 2737,
                            "name": "Literal",
                            "src": "9767:5:2"
                          }
                        ],
                        "id": 2738,
                        "name": "TupleExpression",
                        "src": "9759:14:2"
                      }
                    ],
                    "id": 2739,
                    "name": "Return",
                    "src": "9752:21:2"
                  }
                ],
                "id": 2740,
                "name": "Block",
                "src": "9318:462:2"
              }
            ],
            "id": 2741,
            "name": "FunctionDefinition",
            "src": "9199:581:2"
          },
          {
            "attributes": {
              "functionSelector": "87247dea",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "returnCohorts",
              "scope": 3032,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Used to return list of cohorts for enterprise\n @param enterprise inviting party\n @return cohort address \n @return audit type"
                },
                "id": 2742,
                "name": "StructuredDocumentation",
                "src": "9787:161:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "enterprise",
                      "scope": 2825,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2743,
                        "name": "ElementaryTypeName",
                        "src": "9976:7:2"
                      }
                    ],
                    "id": 2744,
                    "name": "VariableDeclaration",
                    "src": "9976:18:2"
                  }
                ],
                "id": 2745,
                "name": "ParameterList",
                "src": "9975:20:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2825,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 2746,
                            "name": "ElementaryTypeName",
                            "src": "10017:7:2"
                          }
                        ],
                        "id": 2747,
                        "name": "ArrayTypeName",
                        "src": "10017:9:2"
                      }
                    ],
                    "id": 2748,
                    "name": "VariableDeclaration",
                    "src": "10017:16:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2825,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2749,
                            "name": "ElementaryTypeName",
                            "src": "10035:7:2"
                          }
                        ],
                        "id": 2750,
                        "name": "ArrayTypeName",
                        "src": "10035:9:2"
                      }
                    ],
                    "id": 2751,
                    "name": "VariableDeclaration",
                    "src": "10035:16:2"
                  }
                ],
                "id": 2752,
                "name": "ParameterList",
                "src": "10016:36:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2757
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "cohort",
                          "scope": 2824,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "address[]",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "address[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "address",
                                  "type": "address"
                                },
                                "id": 2755,
                                "name": "ElementaryTypeName",
                                "src": "10063:7:2"
                              }
                            ],
                            "id": 2756,
                            "name": "ArrayTypeName",
                            "src": "10063:9:2"
                          }
                        ],
                        "id": 2757,
                        "name": "VariableDeclaration",
                        "src": "10063:23:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "address[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (address[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "type": "address[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "nonpayable",
                                      "type": "address"
                                    },
                                    "id": 2758,
                                    "name": "ElementaryTypeName",
                                    "src": "10093:7:2"
                                  }
                                ],
                                "id": 2759,
                                "name": "ArrayTypeName",
                                "src": "10093:9:2"
                              }
                            ],
                            "id": 2760,
                            "name": "NewExpression",
                            "src": "10089:13:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CohortFactory.Cohorts storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2032,
                                      "type": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)",
                                      "value": "cohortList"
                                    },
                                    "id": 2761,
                                    "name": "Identifier",
                                    "src": "10103:10:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2744,
                                      "type": "address",
                                      "value": "enterprise"
                                    },
                                    "id": 2762,
                                    "name": "Identifier",
                                    "src": "10114:10:2"
                                  }
                                ],
                                "id": 2763,
                                "name": "IndexAccess",
                                "src": "10103:22:2"
                              }
                            ],
                            "id": 2764,
                            "name": "MemberAccess",
                            "src": "10103:29:2"
                          }
                        ],
                        "id": 2765,
                        "name": "FunctionCall",
                        "src": "10089:44:2"
                      }
                    ],
                    "id": 2766,
                    "name": "VariableDeclarationStatement",
                    "src": "10063:70:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2771
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "audits",
                          "scope": 2824,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "uint256[]",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 2769,
                                "name": "ElementaryTypeName",
                                "src": "10143:7:2"
                              }
                            ],
                            "id": 2770,
                            "name": "ArrayTypeName",
                            "src": "10143:9:2"
                          }
                        ],
                        "id": 2771,
                        "name": "VariableDeclaration",
                        "src": "10143:23:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "type": "uint256[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 2772,
                                    "name": "ElementaryTypeName",
                                    "src": "10173:7:2"
                                  }
                                ],
                                "id": 2773,
                                "name": "ArrayTypeName",
                                "src": "10173:9:2"
                              }
                            ],
                            "id": 2774,
                            "name": "NewExpression",
                            "src": "10169:13:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CohortFactory.Cohorts storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2032,
                                      "type": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)",
                                      "value": "cohortList"
                                    },
                                    "id": 2775,
                                    "name": "Identifier",
                                    "src": "10183:10:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2744,
                                      "type": "address",
                                      "value": "enterprise"
                                    },
                                    "id": 2776,
                                    "name": "Identifier",
                                    "src": "10194:10:2"
                                  }
                                ],
                                "id": 2777,
                                "name": "IndexAccess",
                                "src": "10183:22:2"
                              }
                            ],
                            "id": 2778,
                            "name": "MemberAccess",
                            "src": "10183:29:2"
                          }
                        ],
                        "id": 2779,
                        "name": "FunctionCall",
                        "src": "10169:44:2"
                      }
                    ],
                    "id": 2780,
                    "name": "VariableDeclarationStatement",
                    "src": "10143:70:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            2782
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 2819,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 2781,
                                "name": "ElementaryTypeName",
                                "src": "10229:7:2"
                              }
                            ],
                            "id": 2782,
                            "name": "VariableDeclaration",
                            "src": "10229:9:2"
                          }
                        ],
                        "id": 2783,
                        "name": "VariableDeclarationStatement",
                        "src": "10229:9:2"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2782,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 2784,
                            "name": "Identifier",
                            "src": "10240:1:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CohortFactory.Cohorts storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2032,
                                      "type": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)",
                                      "value": "cohortList"
                                    },
                                    "id": 2785,
                                    "name": "Identifier",
                                    "src": "10244:10:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2744,
                                      "type": "address",
                                      "value": "enterprise"
                                    },
                                    "id": 2786,
                                    "name": "Identifier",
                                    "src": "10255:10:2"
                                  }
                                ],
                                "id": 2787,
                                "name": "IndexAccess",
                                "src": "10244:22:2"
                              }
                            ],
                            "id": 2788,
                            "name": "MemberAccess",
                            "src": "10244:29:2"
                          }
                        ],
                        "id": 2789,
                        "name": "BinaryOperation",
                        "src": "10240:33:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2782,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 2790,
                                "name": "Identifier",
                                "src": "10275:1:2"
                              }
                            ],
                            "id": 2791,
                            "name": "UnaryOperation",
                            "src": "10275:3:2"
                          }
                        ],
                        "id": 2792,
                        "name": "ExpressionStatement",
                        "src": "10275:3:2"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "address"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2757,
                                          "type": "address[] memory",
                                          "value": "cohort"
                                        },
                                        "id": 2793,
                                        "name": "Identifier",
                                        "src": "10293:6:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2782,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 2794,
                                        "name": "Identifier",
                                        "src": "10300:1:2"
                                      }
                                    ],
                                    "id": 2795,
                                    "name": "IndexAccess",
                                    "src": "10293:9:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "cohort",
                                      "referencedDeclaration": 2024,
                                      "type": "address"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct CohortFactory.Cohorts storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CohortFactory.Cohorts storage ref[] storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2032,
                                                  "type": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)",
                                                  "value": "cohortList"
                                                },
                                                "id": 2796,
                                                "name": "Identifier",
                                                "src": "10305:10:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2744,
                                                  "type": "address",
                                                  "value": "enterprise"
                                                },
                                                "id": 2797,
                                                "name": "Identifier",
                                                "src": "10316:10:2"
                                              }
                                            ],
                                            "id": 2798,
                                            "name": "IndexAccess",
                                            "src": "10305:22:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2782,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 2799,
                                            "name": "Identifier",
                                            "src": "10328:1:2"
                                          }
                                        ],
                                        "id": 2800,
                                        "name": "IndexAccess",
                                        "src": "10305:25:2"
                                      }
                                    ],
                                    "id": 2801,
                                    "name": "MemberAccess",
                                    "src": "10305:32:2"
                                  }
                                ],
                                "id": 2802,
                                "name": "Assignment",
                                "src": "10293:44:2"
                              }
                            ],
                            "id": 2803,
                            "name": "ExpressionStatement",
                            "src": "10293:44:2"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2771,
                                          "type": "uint256[] memory",
                                          "value": "audits"
                                        },
                                        "id": 2804,
                                        "name": "Identifier",
                                        "src": "10351:6:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2782,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 2805,
                                        "name": "Identifier",
                                        "src": "10358:1:2"
                                      }
                                    ],
                                    "id": 2806,
                                    "name": "IndexAccess",
                                    "src": "10351:9:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                              "typeString": "enum CohortFactory.AuditTypes"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "uint256"
                                            },
                                            "id": 2807,
                                            "name": "ElementaryTypeName",
                                            "src": "10363:7:2"
                                          }
                                        ],
                                        "id": 2808,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "10363:7:2"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "audits",
                                          "referencedDeclaration": 2026,
                                          "type": "enum CohortFactory.AuditTypes"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CohortFactory.Cohorts storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Cohorts storage ref[] storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2032,
                                                      "type": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)",
                                                      "value": "cohortList"
                                                    },
                                                    "id": 2809,
                                                    "name": "Identifier",
                                                    "src": "10371:10:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2744,
                                                      "type": "address",
                                                      "value": "enterprise"
                                                    },
                                                    "id": 2810,
                                                    "name": "Identifier",
                                                    "src": "10382:10:2"
                                                  }
                                                ],
                                                "id": 2811,
                                                "name": "IndexAccess",
                                                "src": "10371:22:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2782,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 2812,
                                                "name": "Identifier",
                                                "src": "10394:1:2"
                                              }
                                            ],
                                            "id": 2813,
                                            "name": "IndexAccess",
                                            "src": "10371:25:2"
                                          }
                                        ],
                                        "id": 2814,
                                        "name": "MemberAccess",
                                        "src": "10371:32:2"
                                      }
                                    ],
                                    "id": 2815,
                                    "name": "FunctionCall",
                                    "src": "10363:41:2"
                                  }
                                ],
                                "id": 2816,
                                "name": "Assignment",
                                "src": "10351:53:2"
                              }
                            ],
                            "id": 2817,
                            "name": "ExpressionStatement",
                            "src": "10351:53:2"
                          }
                        ],
                        "id": 2818,
                        "name": "Block",
                        "src": "10279:136:2"
                      }
                    ],
                    "id": 2819,
                    "name": "ForStatement",
                    "src": "10224:191:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2752
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(address[] memory,uint256[] memory)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2757,
                              "type": "address[] memory",
                              "value": "cohort"
                            },
                            "id": 2820,
                            "name": "Identifier",
                            "src": "10432:6:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2771,
                              "type": "uint256[] memory",
                              "value": "audits"
                            },
                            "id": 2821,
                            "name": "Identifier",
                            "src": "10440:6:2"
                          }
                        ],
                        "id": 2822,
                        "name": "TupleExpression",
                        "src": "10431:16:2"
                      }
                    ],
                    "id": 2823,
                    "name": "Return",
                    "src": "10424:23:2"
                  }
                ],
                "id": 2824,
                "name": "Block",
                "src": "10052:402:2"
              }
            ],
            "id": 2825,
            "name": "FunctionDefinition",
            "src": "9953:501:2"
          },
          {
            "attributes": {
              "functionSelector": "c535124e",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "returnOutstandingValidations",
              "scope": 3032,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Function to calculate outstanding validations for enterprise. "
                },
                "id": 2826,
                "name": "StructuredDocumentation",
                "src": "10461:86:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2827,
                "name": "ParameterList",
                "src": "10592:2:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2870,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2828,
                        "name": "ElementaryTypeName",
                        "src": "10615:7:2"
                      }
                    ],
                    "id": 2829,
                    "name": "VariableDeclaration",
                    "src": "10615:7:2"
                  }
                ],
                "id": 2830,
                "name": "ParameterList",
                "src": "10614:9:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2835,
                        null
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "cohorts",
                          "scope": 2869,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "address[]",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "address[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "address",
                                  "type": "address"
                                },
                                "id": 2833,
                                "name": "ElementaryTypeName",
                                "src": "10637:7:2"
                              }
                            ],
                            "id": 2834,
                            "name": "ArrayTypeName",
                            "src": "10637:9:2"
                          }
                        ],
                        "id": 2835,
                        "name": "VariableDeclaration",
                        "src": "10637:24:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple(address[] memory,uint256[] memory)",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2825,
                              "type": "function (address) view returns (address[] memory,uint256[] memory)",
                              "value": "returnCohorts"
                            },
                            "id": 2836,
                            "name": "Identifier",
                            "src": "10667:13:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 2837,
                                "name": "Identifier",
                                "src": "10681:3:2"
                              }
                            ],
                            "id": 2838,
                            "name": "MemberAccess",
                            "src": "10681:10:2"
                          }
                        ],
                        "id": 2839,
                        "name": "FunctionCall",
                        "src": "10667:25:2"
                      }
                    ],
                    "id": 2840,
                    "name": "VariableDeclarationStatement",
                    "src": "10636:56:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2842
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "totalOutstandingValidations",
                          "scope": 2869,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 2841,
                            "name": "ElementaryTypeName",
                            "src": "10703:4:2"
                          }
                        ],
                        "id": 2842,
                        "name": "VariableDeclaration",
                        "src": "10703:32:2"
                      }
                    ],
                    "id": 2843,
                    "name": "VariableDeclarationStatement",
                    "src": "10703:32:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            2845
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 2866,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 2844,
                                "name": "ElementaryTypeName",
                                "src": "10752:7:2"
                              }
                            ],
                            "id": 2845,
                            "name": "VariableDeclaration",
                            "src": "10752:9:2"
                          }
                        ],
                        "id": 2846,
                        "name": "VariableDeclarationStatement",
                        "src": "10752:9:2"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2845,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 2847,
                            "name": "Identifier",
                            "src": "10763:1:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2835,
                                  "type": "address[] memory",
                                  "value": "cohorts"
                                },
                                "id": 2848,
                                "name": "Identifier",
                                "src": "10766:7:2"
                              }
                            ],
                            "id": 2849,
                            "name": "MemberAccess",
                            "src": "10766:14:2"
                          }
                        ],
                        "id": 2850,
                        "name": "BinaryOperation",
                        "src": "10763:17:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2845,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 2851,
                                "name": "Identifier",
                                "src": "10782:1:2"
                              }
                            ],
                            "id": 2852,
                            "name": "UnaryOperation",
                            "src": "10782:3:2"
                          }
                        ],
                        "id": 2853,
                        "name": "ExpressionStatement",
                        "src": "10782:3:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2842,
                                  "type": "uint256",
                                  "value": "totalOutstandingValidations"
                                },
                                "id": 2854,
                                "name": "Identifier",
                                "src": "10800:27:2"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "+",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2842,
                                      "type": "uint256",
                                      "value": "totalOutstandingValidations"
                                    },
                                    "id": 2855,
                                    "name": "Identifier",
                                    "src": "10830:27:2"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "outstandingValidations",
                                          "referencedDeclaration": 3250,
                                          "type": "function () view external returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "tryCall": false,
                                              "type": "contract ICohort",
                                              "type_conversion": true
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 3286,
                                                  "type": "type(contract ICohort)",
                                                  "value": "ICohort"
                                                },
                                                "id": 2856,
                                                "name": "Identifier",
                                                "src": "10860:7:2"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "address"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2835,
                                                      "type": "address[] memory",
                                                      "value": "cohorts"
                                                    },
                                                    "id": 2857,
                                                    "name": "Identifier",
                                                    "src": "10868:7:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2845,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 2858,
                                                    "name": "Identifier",
                                                    "src": "10876:1:2"
                                                  }
                                                ],
                                                "id": 2859,
                                                "name": "IndexAccess",
                                                "src": "10868:10:2"
                                              }
                                            ],
                                            "id": 2860,
                                            "name": "FunctionCall",
                                            "src": "10860:19:2"
                                          }
                                        ],
                                        "id": 2861,
                                        "name": "MemberAccess",
                                        "src": "10860:42:2"
                                      }
                                    ],
                                    "id": 2862,
                                    "name": "FunctionCall",
                                    "src": "10860:44:2"
                                  }
                                ],
                                "id": 2863,
                                "name": "BinaryOperation",
                                "src": "10830:74:2"
                              }
                            ],
                            "id": 2864,
                            "name": "Assignment",
                            "src": "10800:104:2"
                          }
                        ],
                        "id": 2865,
                        "name": "ExpressionStatement",
                        "src": "10800:104:2"
                      }
                    ],
                    "id": 2866,
                    "name": "ForStatement",
                    "src": "10747:157:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2830
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 2842,
                          "type": "uint256",
                          "value": "totalOutstandingValidations"
                        },
                        "id": 2867,
                        "name": "Identifier",
                        "src": "10922:27:2"
                      }
                    ],
                    "id": 2868,
                    "name": "Return",
                    "src": "10915:34:2"
                  }
                ],
                "id": 2869,
                "name": "Block",
                "src": "10624:332:2"
              }
            ],
            "id": 2870,
            "name": "FunctionDefinition",
            "src": "10555:401:2"
          },
          {
            "attributes": {
              "functionSelector": "7c915c86",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createCohort",
              "scope": 3032,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Initiate creation a new cohort using create2 methods based on the audit type and enterprise combination\n @param audit type"
                },
                "id": 2871,
                "name": "StructuredDocumentation",
                "src": "10962:149:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "audit",
                      "scope": 3031,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum CohortFactory.AuditTypes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "AuditTypes",
                          "referencedDeclaration": 1999,
                          "type": "enum CohortFactory.AuditTypes"
                        },
                        "id": 2872,
                        "name": "UserDefinedTypeName",
                        "src": "11138:10:2"
                      }
                    ],
                    "id": 2873,
                    "name": "VariableDeclaration",
                    "src": "11138:16:2"
                  }
                ],
                "id": 2874,
                "name": "ParameterList",
                "src": "11137:18:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2875,
                "name": "ParameterList",
                "src": "11163:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2880
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "validatorsList",
                          "scope": 3030,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "address[]",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "address[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "address",
                                  "type": "address"
                                },
                                "id": 2878,
                                "name": "ElementaryTypeName",
                                "src": "11173:7:2"
                              }
                            ],
                            "id": 2879,
                            "name": "ArrayTypeName",
                            "src": "11173:9:2"
                          }
                        ],
                        "id": 2880,
                        "name": "VariableDeclaration",
                        "src": "11173:31:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "address[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (address[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "type": "address[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "nonpayable",
                                      "type": "address"
                                    },
                                    "id": 2881,
                                    "name": "ElementaryTypeName",
                                    "src": "11211:7:2"
                                  }
                                ],
                                "id": 2882,
                                "name": "ArrayTypeName",
                                "src": "11211:9:2"
                              }
                            ],
                            "id": 2883,
                            "name": "NewExpression",
                            "src": "11207:13:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                      "typeString": "enum CohortFactory.AuditTypes"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2663,
                                  "type": "function (address,enum CohortFactory.AuditTypes) view returns (uint256)",
                                  "value": "returnInvitationCount"
                                },
                                "id": 2884,
                                "name": "Identifier",
                                "src": "11221:21:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 2885,
                                    "name": "Identifier",
                                    "src": "11243:3:2"
                                  }
                                ],
                                "id": 2886,
                                "name": "MemberAccess",
                                "src": "11243:10:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2873,
                                  "type": "enum CohortFactory.AuditTypes",
                                  "value": "audit"
                                },
                                "id": 2887,
                                "name": "Identifier",
                                "src": "11255:5:2"
                              }
                            ],
                            "id": 2888,
                            "name": "FunctionCall",
                            "src": "11221:40:2"
                          }
                        ],
                        "id": 2889,
                        "name": "FunctionCall",
                        "src": "11207:55:2"
                      }
                    ],
                    "id": 2890,
                    "name": "VariableDeclarationStatement",
                    "src": "11173:89:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2892
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "k",
                          "scope": 3030,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 2891,
                            "name": "ElementaryTypeName",
                            "src": "11272:4:2"
                          }
                        ],
                        "id": 2892,
                        "name": "VariableDeclaration",
                        "src": "11272:6:2"
                      }
                    ],
                    "id": 2893,
                    "name": "VariableDeclarationStatement",
                    "src": "11272:6:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            2895
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 2945,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 2894,
                                "name": "ElementaryTypeName",
                                "src": "11293:4:2"
                              }
                            ],
                            "id": 2895,
                            "name": "VariableDeclaration",
                            "src": "11293:6:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 2896,
                            "name": "Literal",
                            "src": "11300:1:2"
                          }
                        ],
                        "id": 2897,
                        "name": "VariableDeclarationStatement",
                        "src": "11293:8:2"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2895,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 2898,
                            "name": "Identifier",
                            "src": "11303:1:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2043,
                                      "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                      "value": "invitations"
                                    },
                                    "id": 2899,
                                    "name": "Identifier",
                                    "src": "11307:11:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 2900,
                                        "name": "Identifier",
                                        "src": "11319:3:2"
                                      }
                                    ],
                                    "id": 2901,
                                    "name": "MemberAccess",
                                    "src": "11319:10:2"
                                  }
                                ],
                                "id": 2902,
                                "name": "IndexAccess",
                                "src": "11307:23:2"
                              }
                            ],
                            "id": 2903,
                            "name": "MemberAccess",
                            "src": "11307:30:2"
                          }
                        ],
                        "id": 2904,
                        "name": "BinaryOperation",
                        "src": "11303:34:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2895,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 2905,
                                "name": "Identifier",
                                "src": "11341:1:2"
                              }
                            ],
                            "id": 2906,
                            "name": "UnaryOperation",
                            "src": "11339:3:2"
                          }
                        ],
                        "id": 2907,
                        "name": "ExpressionStatement",
                        "src": "11339:3:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {},
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "&&",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                        "typeString": "enum CohortFactory.AuditTypes"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "audits",
                                          "referencedDeclaration": 2017,
                                          "type": "enum CohortFactory.AuditTypes"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CohortFactory.Invitation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2043,
                                                      "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                      "value": "invitations"
                                                    },
                                                    "id": 2908,
                                                    "name": "Identifier",
                                                    "src": "11362:11:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "sender",
                                                      "type": "address payable"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 4294967281,
                                                          "type": "msg",
                                                          "value": "msg"
                                                        },
                                                        "id": 2909,
                                                        "name": "Identifier",
                                                        "src": "11374:3:2"
                                                      }
                                                    ],
                                                    "id": 2910,
                                                    "name": "MemberAccess",
                                                    "src": "11374:10:2"
                                                  }
                                                ],
                                                "id": 2911,
                                                "name": "IndexAccess",
                                                "src": "11362:23:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2895,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 2912,
                                                "name": "Identifier",
                                                "src": "11386:1:2"
                                              }
                                            ],
                                            "id": 2913,
                                            "name": "IndexAccess",
                                            "src": "11362:26:2"
                                          }
                                        ],
                                        "id": 2914,
                                        "name": "MemberAccess",
                                        "src": "11362:33:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2873,
                                          "type": "enum CohortFactory.AuditTypes",
                                          "value": "audit"
                                        },
                                        "id": 2915,
                                        "name": "Identifier",
                                        "src": "11399:5:2"
                                      }
                                    ],
                                    "id": 2916,
                                    "name": "BinaryOperation",
                                    "src": "11362:42:2"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "acceptanceDate",
                                          "referencedDeclaration": 2015,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CohortFactory.Invitation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2043,
                                                      "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                      "value": "invitations"
                                                    },
                                                    "id": 2917,
                                                    "name": "Identifier",
                                                    "src": "11408:11:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "sender",
                                                      "type": "address payable"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 4294967281,
                                                          "type": "msg",
                                                          "value": "msg"
                                                        },
                                                        "id": 2918,
                                                        "name": "Identifier",
                                                        "src": "11420:3:2"
                                                      }
                                                    ],
                                                    "id": 2919,
                                                    "name": "MemberAccess",
                                                    "src": "11420:10:2"
                                                  }
                                                ],
                                                "id": 2920,
                                                "name": "IndexAccess",
                                                "src": "11408:23:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2895,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 2921,
                                                "name": "Identifier",
                                                "src": "11432:1:2"
                                              }
                                            ],
                                            "id": 2922,
                                            "name": "IndexAccess",
                                            "src": "11408:26:2"
                                          }
                                        ],
                                        "id": 2923,
                                        "name": "MemberAccess",
                                        "src": "11408:41:2"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 2924,
                                        "name": "Literal",
                                        "src": "11452:1:2"
                                      }
                                    ],
                                    "id": 2925,
                                    "name": "BinaryOperation",
                                    "src": "11408:45:2"
                                  }
                                ],
                                "id": 2926,
                                "name": "BinaryOperation",
                                "src": "11362:91:2"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "address"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "address"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2880,
                                                  "type": "address[] memory",
                                                  "value": "validatorsList"
                                                },
                                                "id": 2927,
                                                "name": "Identifier",
                                                "src": "11472:14:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2892,
                                                  "type": "uint256",
                                                  "value": "k"
                                                },
                                                "id": 2928,
                                                "name": "Identifier",
                                                "src": "11487:1:2"
                                              }
                                            ],
                                            "id": 2929,
                                            "name": "IndexAccess",
                                            "src": "11472:17:2"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "validator",
                                              "referencedDeclaration": 2011,
                                              "type": "address"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct CohortFactory.Invitation storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct CohortFactory.Invitation storage ref[] storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 2043,
                                                          "type": "mapping(address => struct CohortFactory.Invitation storage ref[] storage ref)",
                                                          "value": "invitations"
                                                        },
                                                        "id": 2930,
                                                        "name": "Identifier",
                                                        "src": "11492:11:2"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "sender",
                                                          "type": "address payable"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 4294967281,
                                                              "type": "msg",
                                                              "value": "msg"
                                                            },
                                                            "id": 2931,
                                                            "name": "Identifier",
                                                            "src": "11504:3:2"
                                                          }
                                                        ],
                                                        "id": 2932,
                                                        "name": "MemberAccess",
                                                        "src": "11504:10:2"
                                                      }
                                                    ],
                                                    "id": 2933,
                                                    "name": "IndexAccess",
                                                    "src": "11492:23:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2895,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 2934,
                                                    "name": "Identifier",
                                                    "src": "11516:1:2"
                                                  }
                                                ],
                                                "id": 2935,
                                                "name": "IndexAccess",
                                                "src": "11492:26:2"
                                              }
                                            ],
                                            "id": 2936,
                                            "name": "MemberAccess",
                                            "src": "11492:36:2"
                                          }
                                        ],
                                        "id": 2937,
                                        "name": "Assignment",
                                        "src": "11472:56:2"
                                      }
                                    ],
                                    "id": 2938,
                                    "name": "ExpressionStatement",
                                    "src": "11472:56:2"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "++",
                                          "prefix": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2892,
                                              "type": "uint256",
                                              "value": "k"
                                            },
                                            "id": 2939,
                                            "name": "Identifier",
                                            "src": "11546:1:2"
                                          }
                                        ],
                                        "id": 2940,
                                        "name": "UnaryOperation",
                                        "src": "11546:3:2"
                                      }
                                    ],
                                    "id": 2941,
                                    "name": "ExpressionStatement",
                                    "src": "11546:3:2"
                                  }
                                ],
                                "id": 2942,
                                "name": "Block",
                                "src": "11454:110:2"
                              }
                            ],
                            "id": 2943,
                            "name": "IfStatement",
                            "src": "11358:206:2"
                          }
                        ],
                        "id": 2944,
                        "name": "Block",
                        "src": "11344:230:2"
                      }
                    ],
                    "id": 2945,
                    "name": "ForStatement",
                    "src": "11288:286:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_4103d5738ff40af2052004e0adc3aba7a7b54ef75ff53086451b82c0ec1beda9",
                                  "typeString": "literal_string \"CohortFactory:createCohort - Number of validators below required minimum.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2946,
                            "name": "Identifier",
                            "src": "11583:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2892,
                                  "type": "uint256",
                                  "value": "k"
                                },
                                "id": 2947,
                                "name": "Identifier",
                                "src": "11591:1:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2009,
                                      "type": "uint256[] storage ref",
                                      "value": "minValidatorPerCohort"
                                    },
                                    "id": 2948,
                                    "name": "Identifier",
                                    "src": "11596:21:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                              "typeString": "enum CohortFactory.AuditTypes"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "uint256"
                                            },
                                            "id": 2949,
                                            "name": "ElementaryTypeName",
                                            "src": "11618:7:2"
                                          }
                                        ],
                                        "id": 2950,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "11618:7:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2873,
                                          "type": "enum CohortFactory.AuditTypes",
                                          "value": "audit"
                                        },
                                        "id": 2951,
                                        "name": "Identifier",
                                        "src": "11626:5:2"
                                      }
                                    ],
                                    "id": 2952,
                                    "name": "FunctionCall",
                                    "src": "11618:14:2"
                                  }
                                ],
                                "id": 2953,
                                "name": "IndexAccess",
                                "src": "11596:37:2"
                              }
                            ],
                            "id": 2954,
                            "name": "BinaryOperation",
                            "src": "11591:42:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "436f686f7274466163746f72793a637265617465436f686f7274202d204e756d626572206f662076616c696461746f72732062656c6f77207265717569726564206d696e696d756d2e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"CohortFactory:createCohort - Number of validators below required minimum.\"",
                              "value": "CohortFactory:createCohort - Number of validators below required minimum."
                            },
                            "id": 2955,
                            "name": "Literal",
                            "src": "11635:75:2"
                          }
                        ],
                        "id": 2956,
                        "name": "FunctionCall",
                        "src": "11583:128:2"
                      }
                    ],
                    "id": 2957,
                    "name": "ExpressionStatement",
                    "src": "11583:128:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2959
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "cohortAddress",
                          "scope": 3030,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 2958,
                            "name": "ElementaryTypeName",
                            "src": "11722:7:2"
                          }
                        ],
                        "id": 2959,
                        "name": "VariableDeclaration",
                        "src": "11722:21:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "address",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "createCohort",
                              "referencedDeclaration": 3234,
                              "type": "function (uint256,address[] memory,address) external returns (address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "contract CreateCohort",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 3235,
                                      "type": "type(contract CreateCohort)",
                                      "value": "CreateCohort"
                                    },
                                    "id": 2960,
                                    "name": "Identifier",
                                    "src": "11746:12:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2047,
                                      "type": "address",
                                      "value": "createCohortAddress"
                                    },
                                    "id": 2961,
                                    "name": "Identifier",
                                    "src": "11759:19:2"
                                  }
                                ],
                                "id": 2962,
                                "name": "FunctionCall",
                                "src": "11746:33:2"
                              }
                            ],
                            "id": 2963,
                            "name": "MemberAccess",
                            "src": "11746:46:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                      "typeString": "enum CohortFactory.AuditTypes"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256"
                                    },
                                    "id": 2964,
                                    "name": "ElementaryTypeName",
                                    "src": "11793:7:2"
                                  }
                                ],
                                "id": 2965,
                                "name": "ElementaryTypeNameExpression",
                                "src": "11793:7:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2873,
                                  "type": "enum CohortFactory.AuditTypes",
                                  "value": "audit"
                                },
                                "id": 2966,
                                "name": "Identifier",
                                "src": "11801:5:2"
                              }
                            ],
                            "id": 2967,
                            "name": "FunctionCall",
                            "src": "11793:14:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2880,
                              "type": "address[] memory",
                              "value": "validatorsList"
                            },
                            "id": 2968,
                            "name": "Identifier",
                            "src": "11810:14:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 2969,
                                "name": "Identifier",
                                "src": "11826:3:2"
                              }
                            ],
                            "id": 2970,
                            "name": "MemberAccess",
                            "src": "11826:10:2"
                          }
                        ],
                        "id": 2971,
                        "name": "FunctionCall",
                        "src": "11746:92:2"
                      }
                    ],
                    "id": 2972,
                    "name": "VariableDeclarationStatement",
                    "src": "11722:116:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "struct CohortFactory.Cohorts storage ref",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "type": "function () returns (struct CohortFactory.Cohorts storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CohortFactory.Cohorts storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2032,
                                      "type": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)",
                                      "value": "cohortList"
                                    },
                                    "id": 2973,
                                    "name": "Identifier",
                                    "src": "11848:10:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 2974,
                                        "name": "Identifier",
                                        "src": "11859:3:2"
                                      }
                                    ],
                                    "id": 2975,
                                    "name": "MemberAccess",
                                    "src": "11859:10:2"
                                  }
                                ],
                                "id": 2976,
                                "name": "IndexAccess",
                                "src": "11848:22:2"
                              }
                            ],
                            "id": 2977,
                            "name": "MemberAccess",
                            "src": "11848:27:2"
                          }
                        ],
                        "id": 2978,
                        "name": "FunctionCall",
                        "src": "11848:29:2"
                      }
                    ],
                    "id": 2979,
                    "name": "ExpressionStatement",
                    "src": "11848:29:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "cohort",
                              "referencedDeclaration": 2024,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CohortFactory.Cohorts storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct CohortFactory.Cohorts storage ref[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2032,
                                          "type": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)",
                                          "value": "cohortList"
                                        },
                                        "id": 2980,
                                        "name": "Identifier",
                                        "src": "11887:10:2"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 2981,
                                            "name": "Identifier",
                                            "src": "11898:3:2"
                                          }
                                        ],
                                        "id": 2982,
                                        "name": "MemberAccess",
                                        "src": "11898:10:2"
                                      }
                                    ],
                                    "id": 2990,
                                    "name": "IndexAccess",
                                    "src": "11887:22:2"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "-",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "length",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CohortFactory.Cohorts storage ref[] storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2032,
                                                  "type": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)",
                                                  "value": "cohortList"
                                                },
                                                "id": 2983,
                                                "name": "Identifier",
                                                "src": "11910:10:2"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 4294967281,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 2984,
                                                    "name": "Identifier",
                                                    "src": "11921:3:2"
                                                  }
                                                ],
                                                "id": 2985,
                                                "name": "MemberAccess",
                                                "src": "11921:10:2"
                                              }
                                            ],
                                            "id": 2986,
                                            "name": "IndexAccess",
                                            "src": "11910:22:2"
                                          }
                                        ],
                                        "id": 2987,
                                        "name": "MemberAccess",
                                        "src": "11910:29:2"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "31",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 1",
                                          "value": "1"
                                        },
                                        "id": 2988,
                                        "name": "Literal",
                                        "src": "11942:1:2"
                                      }
                                    ],
                                    "id": 2989,
                                    "name": "BinaryOperation",
                                    "src": "11910:33:2"
                                  }
                                ],
                                "id": 2991,
                                "name": "IndexAccess",
                                "src": "11887:57:2"
                              }
                            ],
                            "id": 2992,
                            "name": "MemberAccess",
                            "src": "11887:64:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2959,
                              "type": "address",
                              "value": "cohortAddress"
                            },
                            "id": 2993,
                            "name": "Identifier",
                            "src": "11954:13:2"
                          }
                        ],
                        "id": 2994,
                        "name": "Assignment",
                        "src": "11887:80:2"
                      }
                    ],
                    "id": 2995,
                    "name": "ExpressionStatement",
                    "src": "11887:80:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum CohortFactory.AuditTypes"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "audits",
                              "referencedDeclaration": 2026,
                              "type": "enum CohortFactory.AuditTypes"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CohortFactory.Cohorts storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct CohortFactory.Cohorts storage ref[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2032,
                                          "type": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)",
                                          "value": "cohortList"
                                        },
                                        "id": 2996,
                                        "name": "Identifier",
                                        "src": "11977:10:2"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 2997,
                                            "name": "Identifier",
                                            "src": "11988:3:2"
                                          }
                                        ],
                                        "id": 2998,
                                        "name": "MemberAccess",
                                        "src": "11988:10:2"
                                      }
                                    ],
                                    "id": 3006,
                                    "name": "IndexAccess",
                                    "src": "11977:22:2"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "-",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "length",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CohortFactory.Cohorts storage ref[] storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2032,
                                                  "type": "mapping(address => struct CohortFactory.Cohorts storage ref[] storage ref)",
                                                  "value": "cohortList"
                                                },
                                                "id": 2999,
                                                "name": "Identifier",
                                                "src": "12000:10:2"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 4294967281,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 3000,
                                                    "name": "Identifier",
                                                    "src": "12011:3:2"
                                                  }
                                                ],
                                                "id": 3001,
                                                "name": "MemberAccess",
                                                "src": "12011:10:2"
                                              }
                                            ],
                                            "id": 3002,
                                            "name": "IndexAccess",
                                            "src": "12000:22:2"
                                          }
                                        ],
                                        "id": 3003,
                                        "name": "MemberAccess",
                                        "src": "12000:29:2"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "31",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 1",
                                          "value": "1"
                                        },
                                        "id": 3004,
                                        "name": "Literal",
                                        "src": "12032:1:2"
                                      }
                                    ],
                                    "id": 3005,
                                    "name": "BinaryOperation",
                                    "src": "12000:33:2"
                                  }
                                ],
                                "id": 3007,
                                "name": "IndexAccess",
                                "src": "11977:57:2"
                              }
                            ],
                            "id": 3008,
                            "name": "MemberAccess",
                            "src": "11977:64:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2873,
                              "type": "enum CohortFactory.AuditTypes",
                              "value": "audit"
                            },
                            "id": 3009,
                            "name": "Identifier",
                            "src": "12044:5:2"
                          }
                        ],
                        "id": 3010,
                        "name": "Assignment",
                        "src": "11977:72:2"
                      }
                    ],
                    "id": 3011,
                    "name": "ExpressionStatement",
                    "src": "11977:72:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2036,
                                  "type": "mapping(address => uint256)",
                                  "value": "cohortMap"
                                },
                                "id": 3012,
                                "name": "Identifier",
                                "src": "12060:9:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2959,
                                  "type": "address",
                                  "value": "cohortAddress"
                                },
                                "id": 3013,
                                "name": "Identifier",
                                "src": "12070:13:2"
                              }
                            ],
                            "id": 3014,
                            "name": "IndexAccess",
                            "src": "12060:24:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                      "typeString": "enum CohortFactory.AuditTypes"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256"
                                    },
                                    "id": 3015,
                                    "name": "ElementaryTypeName",
                                    "src": "12087:7:2"
                                  }
                                ],
                                "id": 3016,
                                "name": "ElementaryTypeNameExpression",
                                "src": "12087:7:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2873,
                                  "type": "enum CohortFactory.AuditTypes",
                                  "value": "audit"
                                },
                                "id": 3017,
                                "name": "Identifier",
                                "src": "12095:5:2"
                              }
                            ],
                            "id": 3018,
                            "name": "FunctionCall",
                            "src": "12087:14:2"
                          }
                        ],
                        "id": 3019,
                        "name": "Assignment",
                        "src": "12060:41:2"
                      }
                    ],
                    "id": 3020,
                    "name": "ExpressionStatement",
                    "src": "12060:41:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                  "typeString": "enum CohortFactory.AuditTypes"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2078,
                              "type": "function (address,address,enum CohortFactory.AuditTypes)",
                              "value": "CohortCreated"
                            },
                            "id": 3021,
                            "name": "Identifier",
                            "src": "12117:13:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 3022,
                                "name": "Identifier",
                                "src": "12131:3:2"
                              }
                            ],
                            "id": 3023,
                            "name": "MemberAccess",
                            "src": "12131:10:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2959,
                              "type": "address",
                              "value": "cohortAddress"
                            },
                            "id": 3024,
                            "name": "Identifier",
                            "src": "12143:13:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "enum CohortFactory.AuditTypes",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_AuditTypes_$1999",
                                      "typeString": "enum CohortFactory.AuditTypes"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1999,
                                  "type": "type(enum CohortFactory.AuditTypes)",
                                  "value": "AuditTypes"
                                },
                                "id": 3025,
                                "name": "Identifier",
                                "src": "12158:10:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2873,
                                  "type": "enum CohortFactory.AuditTypes",
                                  "value": "audit"
                                },
                                "id": 3026,
                                "name": "Identifier",
                                "src": "12169:5:2"
                              }
                            ],
                            "id": 3027,
                            "name": "FunctionCall",
                            "src": "12158:17:2"
                          }
                        ],
                        "id": 3028,
                        "name": "FunctionCall",
                        "src": "12117:59:2"
                      }
                    ],
                    "id": 3029,
                    "name": "EmitStatement",
                    "src": "12112:64:2"
                  }
                ],
                "id": 3030,
                "name": "Block",
                "src": "11163:1029:2"
              }
            ],
            "id": 3031,
            "name": "FunctionDefinition",
            "src": "11116:1076:2"
          }
        ],
        "id": 3032,
        "name": "ContractDefinition",
        "src": "432:11762:2"
      }
    ],
    "id": 3033,
    "name": "SourceUnit",
    "src": "32:12163:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "1620416757604": {
      "events": {
        "0x90691b6bd4b271754d0eb5676725798ab1ab64c7225d8e48882bc2f6add2dd09": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "CohortCreated",
          "type": "event"
        },
        "0x7b03e8bab458bdbb216f7525cb174b013e75d040884fe46cc9e836fc05a0cc7b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            }
          ],
          "name": "InvitationAccepted",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x77141346a51f055f5bb35ecb1499b0bb7d9fbf1442b909bd3fd419820ccb98b2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "minValidatorPerCohort",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "UpdateMinValidatorsPerCohort",
          "type": "event"
        },
        "0xc79fd5e121f785109eb0b6f9236759e63b1507d2388bae38d35500874fd186b6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audit",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            }
          ],
          "name": "ValidatorCleared",
          "type": "event"
        },
        "0x2c2dbe2d2a7b83ef060aaf0987c01d917ae8b3c3f1b967f5ed2aaa5dd19ed48a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "inviting",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "invitee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            }
          ],
          "name": "ValidatorInvited",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xAFd79e96b1b7Cf25727FF1c201184A722666dF3d",
      "transactionHash": "0x93f18e2bc01f0e231747479587aab8b404fd46bff1acea72941a0afd1905ca4a"
    },
    "1620579762335": {
      "events": {
        "0x90691b6bd4b271754d0eb5676725798ab1ab64c7225d8e48882bc2f6add2dd09": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "CohortCreated",
          "type": "event"
        },
        "0x7b03e8bab458bdbb216f7525cb174b013e75d040884fe46cc9e836fc05a0cc7b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            }
          ],
          "name": "InvitationAccepted",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x77141346a51f055f5bb35ecb1499b0bb7d9fbf1442b909bd3fd419820ccb98b2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "minValidatorPerCohort",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "UpdateMinValidatorsPerCohort",
          "type": "event"
        },
        "0xc79fd5e121f785109eb0b6f9236759e63b1507d2388bae38d35500874fd186b6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audit",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            }
          ],
          "name": "ValidatorCleared",
          "type": "event"
        },
        "0x2c2dbe2d2a7b83ef060aaf0987c01d917ae8b3c3f1b967f5ed2aaa5dd19ed48a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "inviting",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "invitee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            }
          ],
          "name": "ValidatorInvited",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x879Efca285e62c9e8c96d08bCe4f4767d304Bc1A",
      "transactionHash": "0x47af21cc3bc23578ba82660ffeed4f8189712472fd13b33a1a2b81a06da3a9d3"
    },
    "1620753208491": {
      "events": {
        "0x90691b6bd4b271754d0eb5676725798ab1ab64c7225d8e48882bc2f6add2dd09": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "CohortCreated",
          "type": "event"
        },
        "0x7b03e8bab458bdbb216f7525cb174b013e75d040884fe46cc9e836fc05a0cc7b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            }
          ],
          "name": "InvitationAccepted",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x77141346a51f055f5bb35ecb1499b0bb7d9fbf1442b909bd3fd419820ccb98b2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "minValidatorPerCohort",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "UpdateMinValidatorsPerCohort",
          "type": "event"
        },
        "0xc79fd5e121f785109eb0b6f9236759e63b1507d2388bae38d35500874fd186b6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audit",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            }
          ],
          "name": "ValidatorCleared",
          "type": "event"
        },
        "0x2c2dbe2d2a7b83ef060aaf0987c01d917ae8b3c3f1b967f5ed2aaa5dd19ed48a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "inviting",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "invitee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            }
          ],
          "name": "ValidatorInvited",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0a890b230a960Ba15b4FbD1a269157F649Bf5A99",
      "transactionHash": "0x4c18469720e2b19bf792b6b70cad0bcbe6f0a6baaa1163a67fb63ab9eb5d88eb"
    },
    "1621014608367": {
      "events": {
        "0x90691b6bd4b271754d0eb5676725798ab1ab64c7225d8e48882bc2f6add2dd09": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "CohortCreated",
          "type": "event"
        },
        "0x7b03e8bab458bdbb216f7525cb174b013e75d040884fe46cc9e836fc05a0cc7b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            }
          ],
          "name": "InvitationAccepted",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x77141346a51f055f5bb35ecb1499b0bb7d9fbf1442b909bd3fd419820ccb98b2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "minValidatorPerCohort",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "UpdateMinValidatorsPerCohort",
          "type": "event"
        },
        "0xc79fd5e121f785109eb0b6f9236759e63b1507d2388bae38d35500874fd186b6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audit",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            }
          ],
          "name": "ValidatorCleared",
          "type": "event"
        },
        "0x2c2dbe2d2a7b83ef060aaf0987c01d917ae8b3c3f1b967f5ed2aaa5dd19ed48a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "inviting",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "invitee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            }
          ],
          "name": "ValidatorInvited",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x5414a37274Fdb6F9394dd2BfB5d0a99126336D16",
      "transactionHash": "0xb9986f2508b368ad1a02b4c0fc0a990401b8a3163c51558e233053c92856774f"
    },
    "1621015969136": {
      "events": {
        "0x90691b6bd4b271754d0eb5676725798ab1ab64c7225d8e48882bc2f6add2dd09": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "CohortCreated",
          "type": "event"
        },
        "0x7b03e8bab458bdbb216f7525cb174b013e75d040884fe46cc9e836fc05a0cc7b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            }
          ],
          "name": "InvitationAccepted",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x77141346a51f055f5bb35ecb1499b0bb7d9fbf1442b909bd3fd419820ccb98b2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "minValidatorPerCohort",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "UpdateMinValidatorsPerCohort",
          "type": "event"
        },
        "0xc79fd5e121f785109eb0b6f9236759e63b1507d2388bae38d35500874fd186b6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audit",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            }
          ],
          "name": "ValidatorCleared",
          "type": "event"
        },
        "0x2c2dbe2d2a7b83ef060aaf0987c01d917ae8b3c3f1b967f5ed2aaa5dd19ed48a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "inviting",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "invitee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            }
          ],
          "name": "ValidatorInvited",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0a890b230a960Ba15b4FbD1a269157F649Bf5A99",
      "transactionHash": "0x86d890fbf5ac3a6b16f10a0e3f6c3c7ef3e6e97de6e95f31e608a2f9b706778e"
    },
    "1621272904531": {
      "events": {
        "0x90691b6bd4b271754d0eb5676725798ab1ab64c7225d8e48882bc2f6add2dd09": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "CohortCreated",
          "type": "event"
        },
        "0x7b03e8bab458bdbb216f7525cb174b013e75d040884fe46cc9e836fc05a0cc7b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            }
          ],
          "name": "InvitationAccepted",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x77141346a51f055f5bb35ecb1499b0bb7d9fbf1442b909bd3fd419820ccb98b2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "minValidatorPerCohort",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "UpdateMinValidatorsPerCohort",
          "type": "event"
        },
        "0xc79fd5e121f785109eb0b6f9236759e63b1507d2388bae38d35500874fd186b6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audit",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            }
          ],
          "name": "ValidatorCleared",
          "type": "event"
        },
        "0x2c2dbe2d2a7b83ef060aaf0987c01d917ae8b3c3f1b967f5ed2aaa5dd19ed48a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "inviting",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "invitee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            }
          ],
          "name": "ValidatorInvited",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xCD5e8D9Ff58c111cD9908dA34fe641E5FF7e77F2",
      "transactionHash": "0x3d24bfaca607de174dc949a6c27683294f9da170fffd03308bd091ab4c8b60dc"
    },
    "1623092702526": {
      "events": {
        "0x90691b6bd4b271754d0eb5676725798ab1ab64c7225d8e48882bc2f6add2dd09": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "CohortCreated",
          "type": "event"
        },
        "0x7b03e8bab458bdbb216f7525cb174b013e75d040884fe46cc9e836fc05a0cc7b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            }
          ],
          "name": "InvitationAccepted",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x77141346a51f055f5bb35ecb1499b0bb7d9fbf1442b909bd3fd419820ccb98b2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "minValidatorPerCohort",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "UpdateMinValidatorsPerCohort",
          "type": "event"
        },
        "0xc79fd5e121f785109eb0b6f9236759e63b1507d2388bae38d35500874fd186b6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audit",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            }
          ],
          "name": "ValidatorCleared",
          "type": "event"
        },
        "0x2c2dbe2d2a7b83ef060aaf0987c01d917ae8b3c3f1b967f5ed2aaa5dd19ed48a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "inviting",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "invitee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            }
          ],
          "name": "ValidatorInvited",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0a890b230a960Ba15b4FbD1a269157F649Bf5A99",
      "transactionHash": "0x86d890fbf5ac3a6b16f10a0e3f6c3c7ef3e6e97de6e95f31e608a2f9b706778e"
    },
    "1623345487366": {
      "events": {
        "0x90691b6bd4b271754d0eb5676725798ab1ab64c7225d8e48882bc2f6add2dd09": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "CohortCreated",
          "type": "event"
        },
        "0x7b03e8bab458bdbb216f7525cb174b013e75d040884fe46cc9e836fc05a0cc7b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            }
          ],
          "name": "InvitationAccepted",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x77141346a51f055f5bb35ecb1499b0bb7d9fbf1442b909bd3fd419820ccb98b2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "minValidatorPerCohort",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "UpdateMinValidatorsPerCohort",
          "type": "event"
        },
        "0xc79fd5e121f785109eb0b6f9236759e63b1507d2388bae38d35500874fd186b6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audit",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            }
          ],
          "name": "ValidatorCleared",
          "type": "event"
        },
        "0x2c2dbe2d2a7b83ef060aaf0987c01d917ae8b3c3f1b967f5ed2aaa5dd19ed48a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "inviting",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "invitee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            }
          ],
          "name": "ValidatorInvited",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x4a786BB89d47e2aBec0289EE25B2E96e037Ba121",
      "transactionHash": "0xdfd2d50bfe4ec4d09b3c7708b29b098bc217c24409b70320b45260dd7cd0d5a0"
    },
    "1623428047008": {
      "events": {
        "0x90691b6bd4b271754d0eb5676725798ab1ab64c7225d8e48882bc2f6add2dd09": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "CohortCreated",
          "type": "event"
        },
        "0x7b03e8bab458bdbb216f7525cb174b013e75d040884fe46cc9e836fc05a0cc7b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            }
          ],
          "name": "InvitationAccepted",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x77141346a51f055f5bb35ecb1499b0bb7d9fbf1442b909bd3fd419820ccb98b2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "minValidatorPerCohort",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "UpdateMinValidatorsPerCohort",
          "type": "event"
        },
        "0xc79fd5e121f785109eb0b6f9236759e63b1507d2388bae38d35500874fd186b6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audit",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            }
          ],
          "name": "ValidatorCleared",
          "type": "event"
        },
        "0x2c2dbe2d2a7b83ef060aaf0987c01d917ae8b3c3f1b967f5ed2aaa5dd19ed48a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "inviting",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "invitee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            }
          ],
          "name": "ValidatorInvited",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0a890b230a960Ba15b4FbD1a269157F649Bf5A99",
      "transactionHash": "0x86d890fbf5ac3a6b16f10a0e3f6c3c7ef3e6e97de6e95f31e608a2f9b706778e"
    },
    "1623776537850": {
      "events": {
        "0x90691b6bd4b271754d0eb5676725798ab1ab64c7225d8e48882bc2f6add2dd09": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "CohortCreated",
          "type": "event"
        },
        "0x7b03e8bab458bdbb216f7525cb174b013e75d040884fe46cc9e836fc05a0cc7b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            }
          ],
          "name": "InvitationAccepted",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x77141346a51f055f5bb35ecb1499b0bb7d9fbf1442b909bd3fd419820ccb98b2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "minValidatorPerCohort",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            }
          ],
          "name": "UpdateMinValidatorsPerCohort",
          "type": "event"
        },
        "0xc79fd5e121f785109eb0b6f9236759e63b1507d2388bae38d35500874fd186b6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audit",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "enterprise",
              "type": "address"
            }
          ],
          "name": "ValidatorCleared",
          "type": "event"
        },
        "0x2c2dbe2d2a7b83ef060aaf0987c01d917ae8b3c3f1b967f5ed2aaa5dd19ed48a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "inviting",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "invitee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum CohortFactory.AuditTypes",
              "name": "audits",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "invitationNumber",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "cohort",
              "type": "address"
            }
          ],
          "name": "ValidatorInvited",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x911a51362926EB4B621d04e10Be60814CC304c8B",
      "transactionHash": "0x22a9c3fe7abe3407050ed7881c580ab79161201acc46af5073adf4fe962b3bb4"
    }
  },
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-06-21T04:15:44.673Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptInvitation(address,uint256)": {
        "details": "Used by Validator to accept Enterprise invitation",
        "params": {
          "enterprise": "address of the Enterprise who created invitation",
          "invitationNumber": "invitation number"
        }
      },
      "acceptInvitationMultiple(address[],uint256[])": {
        "details": "Used by Validator to accept multiple Enterprise invitation",
        "params": {
          "enterprise": "address of the Enterprise who created invitation",
          "invitationNumber": "invitation number"
        }
      },
      "clearInvitationRemoveValidator(address,uint8,address)": {
        "details": "Used by Enterprise to remove existing validator",
        "params": {
          "audit": "type of audit ",
          "cohort": "cohort from which validator is removed",
          "validator": "validator to remove"
        }
      },
      "createCohort(uint8)": {
        "details": "Initiate creation a new cohort using create2 methods based on the audit type and enterprise combination",
        "params": {
          "audit": "type"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "inviteValidator(address,uint8,address)": {
        "details": "Used by Enterprise to invite validator",
        "params": {
          "audit": "type of the audit",
          "validator": "address of the validator to invite"
        }
      },
      "inviteValidatorMultiple(address[],uint8,address)": {
        "details": "Used by Enterprise to invite multiple validators in one call ",
        "params": {
          "audit": "type of the audit",
          "validator": "address of the validator to invite"
        }
      },
      "isValidatorInvited(address,address,uint8)": {
        "details": "Used to determine if validator has been invited and/or if validation has been accepted",
        "params": {
          "audits": "types",
          "enterprise": "inviting party",
          "validator": "address of the validator"
        },
        "returns": {
          "_0": "true if invited",
          "_1": "true if accepted invitation"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "returnCohorts(address)": {
        "details": "Used to return list of cohorts for enterprise",
        "params": {
          "enterprise": "inviting party"
        },
        "returns": {
          "_0": "cohort address ",
          "_1": "audit type"
        }
      },
      "returnInvitationCount(address,uint8)": {
        "details": "To return invitation count",
        "params": {
          "audit": "type",
          "enterprise": "address of the Enterprise who created invitation"
        },
        "returns": {
          "_0": "count of invitations"
        }
      },
      "returnOutstandingValidations()": {
        "details": "Function to calculate outstanding validations for enterprise. "
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "updateMinValidatorsPerCohort(uint256,uint256)": {
        "details": "to be called by Governance contract to update new value for min validators per cohort",
        "params": {
          "_minValidatorPerCohort": "new value ",
          "audits": "type of validations"
        }
      }
    },
    "title": "CohortFactory Allows on creation of invitations by Enterprise and acceptance of Validators of those  invitations. Finally Enterprise can create cohort consisting of invited Validators and Enterprise. ",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}